<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>polar-bear～Blog</title>
  
  <subtitle>欢迎来到我の小窝</subtitle>
  <link href="https://polar-bear.eu.org/atom.xml" rel="self"/>
  
  <link href="https://polar-bear.eu.org/"/>
  <updated>2025-08-26T23:10:11.414Z</updated>
  <id>https://polar-bear.eu.org/</id>
  
  <author>
    <name>Ziyourufeng</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>exo</title>
    <link href="https://polar-bear.eu.org/2025/08/26/exo/"/>
    <id>https://polar-bear.eu.org/2025/08/26/exo/</id>
    <published>2025-08-26T23:08:40.988Z</published>
    <updated>2025-08-26T23:10:11.414Z</updated>
    
    <content type="html"><![CDATA[<h2 id="exo日常设备在家中运行您自己的-AI-集群">exo日常设备在家中运行您自己的 AI 集群</h2><p><a href="https://github.com/exo-explore/exo">exo-explore/exo：使用日常设备📱💻 🖥️⌚在家中运行您自己的 AI 集群</a></p><p>EXO 根据当前的网络拓扑和可用设备资源对模型进行最佳拆分。这使您能够运行比在任何单个设备上运行更大的模型。</p><h3 id="先决条件">先决条件</h3><ul><li>Python&gt;=3.12.0 是必需的，因为以前版本中的 <a href="https://github.com/exo-explore/exo/issues/5">asyncio 存在问题</a>。</li><li>对于支持 NVIDIA GPU 的 Linux（仅限 Linux，如果不使用 Linux 或 NVIDIA，请跳过）：<ul><li>NVIDIA 驱动程序 - 使用<code>nvidia-smi</code></li><li>CUDA 工具包 - 从 NVIDIA CUDA 指南安装，使用<code>nvcc --version</code></li><li>cuDNN 库 - 从 <a href="https://developer.nvidia.com/cudnn-downloads">NVIDIA cuDNN 页面</a>下载，按照<a href="https://docs.nvidia.com/deeplearning/cudnn/latest/installation/linux.html#verifying-the-install-on-linux:~:text=at%20a%20time.-,Verifying%20the%20Install%20on%20Linux,Test%20passed!,-Upgrading%20From%20Older">以下步骤</a>验证安装</li></ul></li></ul><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/08_27/image_260defdd8a71c380aced268401ebe54d.png" alt=""></p><p>确保nvidia-smi，nvcc，cuDNN配置正确，缺一不可。</p><ul><li>运行 exo 的唯一要求是所有设备上都有足够的内存，以便将整个模型放入内存中。例如，如果您运行的是 llama 3.1 8B （fp16），则所有设备都需要 16GB 内存。以下任何配置都可以工作，因为它们的内存总数超过 16GB：<ul><li>2 个 8GB M3 MacBook Air</li><li>1 x 16GB NVIDIA RTX 4070 Ti 笔记本电脑</li><li>2 个 Raspberry Pi 400，每个 4GB RAM（在 CPU 上运行）+ 1 个 8GB Mac Mini</li></ul></li><li>EXO 旨在在具有异构功能的设备上运行。例如，您可以让一些设备配备强大的 GPU，而其他设备则配备集成 GPU 甚至 CPU。添加功能较差的设备会减慢单个推理延迟，但会增加集群的整体吞吐量。</li></ul><h3 id="从docker开始">从docker开始</h3><p>从最简基础镜像nanozoo/python3.12开始</p><p><code>docker pull nanozoo/python3.12:3.12--d46ab4d</code></p><p>启动临时容器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker run -it --name exo_builder_temp \</span><br><span class="line">  python:3.12 \</span><br><span class="line">  bash</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><code>-it</code>: 启动一个交互式（<code>i</code>）终端（<code>t</code>）。</li><li><code>--name exo_builder_temp</code>: 给这个临时容器一个易于识别的名称。</li><li><code>python:3.12</code>: 使用我们指定的基础镜像。</li><li><code>bash</code>: 启动容器后直接进入 Bash shell。</li></ul><h3 id="配置exo">配置exo</h3><p>进入容器，安装必要的系统工具</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">apt-get update</span><br><span class="line">apt-get install -y --no-install-recommends \</span><br><span class="line">    git \</span><br><span class="line">    build-essential \</span><br><span class="line">    cmake \</span><br><span class="line">    ca-certificates \</span><br><span class="line">    libffi-dev \</span><br><span class="line">    libssl-dev \</span><br><span class="line">    libgl1</span><br></pre></td></tr></table></figure><p>清理 apt 缓存，减小最终镜像大小</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">rm</span> -rf /var/lib/apt/lists/*</span><br></pre></td></tr></table></figure><p>创建工作目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /exo</span><br><span class="line"><span class="built_in">cd</span> /exo</span><br></pre></td></tr></table></figure><p>克隆 EXO 仓库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/exo-explore/exo.git</span><br><span class="line"><span class="built_in">cd</span> exo</span><br></pre></td></tr></table></figure><p>安装 EXO 及其 Python 依赖,<code>--no-cache-dir</code> 用于避免在容器内部创建不必要的pip缓存</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install -e . --no-cache-dir</span><br></pre></td></tr></table></figure><p>退出容器</p><p><code>exit</code></p><p>提交容器状态为镜像</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker commit \</span><br><span class="line">  -c <span class="string">&#x27;WORKDIR /app/exo&#x27;</span> \</span><br><span class="line">  -c <span class="string">&#x27;CMD [&quot;exo&quot;]&#x27;</span> \</span><br><span class="line">  exo_builder_temp \</span><br><span class="line">  exo:20250827</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HF_ENDPOINT=https://hf-mirror.com exo</span><br></pre></td></tr></table></figure><p>可以在启动命令前添加环境变量访问hf镜像站</p><h3 id="创建macvlan网络">创建macvlan网络</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker network create -d macvlan --subnet=192.168.1.0/24 --gateway=192.168.1.1 -o parent=eth0 macnet</span><br></pre></td></tr></table></figure><p><code>docker network create</code> 命令创建了一个新的 Docker 网络，使用了 <code>macvlan</code> 驱动。<code>macvlan</code> 网络允许您将容器连接到物理网络，就像它们是网络上的独立主机一样。您为这个网络指定了以下参数：</p><ul><li><code>-d macvlan</code>：指定网络驱动为 <code>macvlan</code>。</li><li><code>--subnet=192.168.1.0/24</code>：指定网络的子网掩码为 <code>192.168.1.0/24</code>。</li><li><code>--gateway=192.168.1.1</code>：指定网络的网关地址为 <code>192.168.1.1</code>。</li><li><code>-o parent=eth0</code>：指定父接口为 <code>eth0</code>，这是混杂模式下配置的物理网络接口。</li><li><code>macnet</code>：是新创建的 Docker 网络的名称。</li><li><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/08_27/image_35fbe10cc942a1e452bd856067ef1ed6.png" alt=""></li><li><strong>确保您选择的子网地址没有被路由器、交换机或其他网络设备使用。如果网关地址已被占用，容器将无法正常通信。</strong></li></ul><p>使用<code>ifconfig</code>查看网络设备</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/08_27/image_8db440f18f9fc8df47b314b4ee5a5517.png" alt=""></p><p>查看子网下设备避免冲突，<code>sudo arp-scan -I enp4s0 --localnet</code></p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/08_27/image_1d00d89d4de5c4cd070c5a5be2ca613d.png" alt=""></p><h3 id="启动容器">启动容器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 运行带有 macvlan 网络、GPU 支持和 tinygrad CUDA 环境变量的 EXO 容器</span></span><br><span class="line">docker run -it  \</span><br><span class="line">    --name exo-node-1 \</span><br><span class="line">    --ip 192.168.124.56 \</span><br><span class="line">    --network macnet \</span><br><span class="line">    --gpus all \</span><br><span class="line">    -e CUDA=1 \</span><br><span class="line">    exo:20250827</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">EXO日常设备在家中运行您自己的 AI 集群
exo-explore/exo：使用日常设备📱💻 🖥️⌚在家中运行您自己的 AI 集群
[https://github.com/exo-explore/exo]

EXO 根据当前的网络拓扑和可用设备资源对模型进行最佳拆分。这使您能够运行比在任何单个设备上运行更大的模型。

先决条件
 * Python&gt;=3.12.0 是必需的，因为以前版本中的</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Qwen-image</title>
    <link href="https://polar-bear.eu.org/2025/08/17/qwen-image/"/>
    <id>https://polar-bear.eu.org/2025/08/17/qwen-image/</id>
    <published>2025-08-17T18:42:39.301Z</published>
    <updated>2025-08-20T18:24:46.496Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Qwen-image">Qwen-image</h2><h3 id="docker部署">docker部署</h3><h4 id="安装魔搭社区的modelscope模型管理工具">安装魔搭社区的modelscope模型管理工具</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install -i https://pypi.tuna.tsinghua.edu.cn/simple modelscope</span><br></pre></td></tr></table></figure><h4 id="下载docker镜像">下载docker镜像</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">modelscope download --model inkcoi/ComfyUI-Qwen-Image --local_dir /home/user/#下载文件位置</span><br></pre></td></tr></table></figure><blockquote><p>镜像文件约40GB,请留有充足储存空间</p></blockquote><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/08_18/image_23e4ad76b1fec2bf84a57968f7d34241.png" alt=""></p><h4 id="加载Docker镜像">加载Docker镜像</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker load -i ./comfyui-qwen-image-latest.tar</span><br></pre></td></tr></table></figure><p>加载镜像为<code>comfyui-qwen-image      latest     1c856fa3dfd8   10 days ago     42.5GB</code></p><h4 id="运行docker容器">运行docker容器</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --gpus all -d --name comfyui-qwen -p 8188:8188 comfyui-qwen-image:latest python3 main.py --listen 0.0.0.0 </span><br></pre></td></tr></table></figure><p>挂载目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">docker run --gpus all -d --name comfyui-qwen -p 8188:8188 \</span><br><span class="line">  -v /home/edzhao/Qwen-image/comfyui_data/models:/ComfyUI/models \</span><br><span class="line">  -v /home/edzhao/Qwen-image/comfyui_data/output:/ComfyUI/output \</span><br><span class="line">  -v /home/edzhao/Qwen-image/comfyui_data/custom_nodes:/ComfyUI/custom_nodes \</span><br><span class="line">  -v /home/edzhao/Qwen-image/comfyui_data/input:/ComfyUI/input \</span><br><span class="line">  comfyui-qwen-image:latest python3 main.py --listen 0.0.0.0</span><br></pre></td></tr></table></figure><p>如果没有GPU，可以添加<code>--cpu</code>参数：</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/08_18/image_149056b0bb8faf0bc1bb6bc4fe831f48.png" alt=""></p><h2 id="手动处理">手动处理</h2><p>如何遇到依赖错误导致docker容器直接无法启动</p><p><strong>基于这个新的自定义镜像，启动一个临时的、只运行 shell 的容器</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -it --name comfyui_fix_shell_temp --entrypoint /bin/bash comfyui_my_custom_state:latest</span><br></pre></td></tr></table></figure><p><code>-it</code>: 交互式模式。</p><p><code>--name comfyui_fix_shell_temp</code>: 给这个临时容器命名，方便识别。</p><p><code>--entrypoint /bin/bash</code>: 覆盖镜像的默认启动命令，直接启动 shell 环境。</p><p><code>comfyui_my_custom_state:latest</code>: 使用您刚才创建的自定义镜像。</p><p>在**<code>comfyui_fix_shell_temp</code> **中完成修复后，将容器打包为镜像。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker commit f6b773f8bcc7 comfyui_my_custom_state_fixed_final:latest</span><br></pre></td></tr></table></figure><p>之后从镜像启动即可。</p><h3 id="端口转发和监听">端口转发和监听</h3><p>容器需要转发端口，<code>-p 8188:8188</code></p><p>comfyui启动需要<code>python3 main.py --listen 0.0.0.0</code></p>]]></content>
    
    
    <summary type="html">QWEN-IMAGE
DOCKER部署
安装魔搭社区的MODELSCOPE模型管理工具
1


pip install -i h</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>ESP CSI 动作分类</title>
    <link href="https://polar-bear.eu.org/2025/08/14/esp-csi-dong-zuo-fen-lei/"/>
    <id>https://polar-bear.eu.org/2025/08/14/esp-csi-dong-zuo-fen-lei/</id>
    <published>2025-08-14T00:50:57.461Z</published>
    <updated>2025-08-18T01:07:45.798Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="b88024b0d4623a7a79f4c7144f1e53beb86230782da4aeb305d06f65748b2b94"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">请输入密码</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">* CSI (Channel State Information): 
   信道状态信息，是Wi-Fi物理层提供的一种细粒度数据。它描述了Wi-Fi信号在从发射端到接收端的传输过程中，受到多径效应、衰落、噪声等因素影响后的信道特征。通俗地说，CSI记录了Wi-Fi信号每个子载波的幅度（Amplitude）和相位（Phase）信息。
 * 幅度去噪： 对每个子载波的幅度时间序列进行低通滤波（如Butterworth滤波器）或移动平均，消除高频噪声。
 * 异常值剔除</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>机器学习——深度学习</title>
    <link href="https://polar-bear.eu.org/2025/07/03/ji-qi-xue-xi-shen-du-xue-xi/"/>
    <id>https://polar-bear.eu.org/2025/07/03/ji-qi-xue-xi-shen-du-xue-xi/</id>
    <published>2025-07-03T05:51:52.154Z</published>
    <updated>2025-07-04T09:07:30.665Z</updated>
    
    <content type="html"><![CDATA[<h2 id="机器学习">机器学习</h2><p>机器学习是一个专门研究和开发能够学习的机器的领域，目标是获得通用人工智能。</p><p>机器学习是人工智能的核心领域，目标是让计算机通过数据学习规律并做出预测或决策。其核心逻辑是：从数据中提取特征，通过算法训练模型，实现对未知数据的推断。</p><ul><li>分类：包括监督学习（如回归、分类算法）、无监督学习（如聚类、降维）、半监督学习和强化学习等。</li><li>关键特征：依赖人工设计的特征工程，例如在图像识别中，需要手动提取边缘、颜色等特征。</li></ul><blockquote><p>本篇是对之前文章的扩展，补充与深化，本人深感过去文章水平有限，仅是为完成工程任务调参了解的，极为片面，浅薄的记录，本文试图作为学习笔记系统性记录✍️本人的学习过程。(ﾉ∇︎〃 )</p><p>添加了很多<s>骚话</s>个人理解(´つヮ⊂︎)</p></blockquote><blockquote><p>前面大多为车轱辘话(╯‵□′)╯︵┻━┻，只需要大致了解概念。可直接跳至算法原理。(ฅ&gt;ω&lt;*ฅ)</p></blockquote><h2 id="序言">序言</h2><p><s>一些很漂亮很浪漫很有人类探索精神的屁话</s>╮(╯▽╰)╭</p><p>千百年来，人类试图了解智能的机制，并将它复制到思维机器上。</p><p>人类从不满足于让机械或电子设备帮助做一些简单的任务，例如，使<br>用燧石打火，使用滑轮吊起沉重的岩石，使用计算器做算术。</p><p>相反，我们希望能够自动化执行更具有挑战性、相对复杂的任务，如<br>对相似的照片进行分组、从健康细胞中识别出病变细胞，甚至是来一盘优雅的国际象棋博弈。这些任务似乎需要人类的智能才能完成，或至少需要人类思维中的某种更深层次、更神秘的能力来完成，而在诸如计算器这样简单的机器中是找不到这种能力的。<br>具有类似人类智能的机器是一个如此诱人且强大的想法，我们的文化<br>对它充满了幻想和恐惧，如斯坦利·库布里克导演的《2001: A Space<br>Odyssey》中的HAL 9000（拥有巨大的能力却最终给人类带来了威胁）、动作片中疯狂的“终结者（Terminator）”机器人以及电视剧《Knight Rider》中具有冷静个性的话匣子KITT汽车。</p><p>1997年，国际象棋卫冕世界冠军、国际象棋特级大师加里·卡斯帕罗夫<br>被IBM“深蓝”计算机击败，我们在庆祝这一历史性成就的同时，也担心机<br>器智能的潜力。</p><h3 id="神经网络">神经网络</h3><p><a href="https://polar-bear.eu.org/2025/04/26/ji-qi-xue-xi-shen-jing-wang-luo/">机器学习－－神经网络</a></p><blockquote><p>之前在学习Nanodet模型时，对于神经网络非常浅显的记录</p></blockquote><p>计算机可以以相当快的速度在短时间内执行数亿次数学运算，能够高效的数量海量数据，但是在很长一段时间内，计算机却无法做到人类能够轻易完成的任务，仅通过视觉以极快的速度识别身边的物体，无意识间控制四肢协调平衡运动，等等。</p><p>而我们却能够仅仅为大脑提供大概20w的功耗轻易做到复杂的计算机无法完成的任务。不禁让很多人试图再次利用仿生学在计算机上实习以上功能。</p><p><s>依旧骚话</s>✧(◍˃̶ᗜ˂̶◍)✩</p><h4 id="最早的神经网络模型–感知机">最早的神经网络模型–感知机</h4><p>那就回到1957年，找到美国心理学家弗兰克·罗森布拉特（Frank Rosenblatt），一个神经生物学和行为学副教授，提出一种单层神经网络模型，旨在模拟生物神经元工作原理，由输入层，隐藏层，和输出层组成。</p><p>其非常简单，输入问题，进行计算，得到结果，如果存在差异则更新内部权重，这即是训练过程。</p><p>你可能会想“这也没什么了不起的吧！”，<s>这确实没什么了不起</s>╮(╯▽╰)╭，你是这样想的，我也是。但这是由于当时技术的局限和理论的不完善，其确实是神经网络历史上最早提出的模型之一，也是现代深度学习的先驱，为后来的多层感知机和深度学习模型提供了理论支持，开创了人工神经网络的研究。</p><h4 id="神经网络-v2">神经网络</h4><p>虽然神经元有各种形式，但是所有的神经元都是将电信号从一端传输到另一端，沿着轴突，将电信号从树突传到树突。然后，这些信号从一个神经元传递到另一个神经元。这就是身体感知光、声、触压、热等信号的机制。来自专门的感觉神经元的信号沿着神经系统，传输到大脑，而大脑本身主要也是由神经元构成的。</p><p>我们需要多少个神经元才能执行相对复杂的有趣任务呢？</p><p>一般说来，能力非常强的人类大脑有大约1000亿个神经元！一只果蝇<br>拥有约10万个神经元，能够飞翔、觅食、躲避危险、寻找食物以及执行许多相当复杂的任务。10万个神经元，这个数字恰好落在了现代计算机试图复制的范围内。一只线虫仅仅具有302个神经元，与今天的数字计算机资源相比，简直就是微乎其微！但是一只线虫能够完成一些相当有用的任务，而这任务对于尺寸大得多的传统计算机程序而言却难以完成。</p><h5 id="激活函数">激活函数</h5><p>观察表明，神经元不会立即反应，而是会抑制输入，直到输入增强，<br>强大到可以触发输出。你可以这样认为，在产生输出之前，输入必须到达一个阈值。就像水在杯中——直到水装满了杯子，才可能溢出。直观上，这是有道理的——神经元不希望传递微小的噪声信号，而只是传递有意识的明显信号。下图说明了这种思想，只有输入超过了阈值（threshold），足够接通电路，才会产生输出信号。</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/07_04/image_83060f9cc4f294b96510ee7e0dc85da6.png" alt=""></p><p>我们可以改进阶跃函数。下图所示的S形函数称为S函数（sigmoid function）。这个函数，比起冷冰冰、硬邦邦的阶跃函数要相对平滑，这使 得这个函数更自然、更接近现实。</p><p>$$<br>f(x) = \frac{1}{1 + e^{-x}}<br>$$</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/07_04/image_77a269ab10c97e5e03b50f44ac2bcdaf.png" alt=""></p><p>随着输入 <code>x</code> 的增加，sigmoid 函数的输出会接近 <code>1</code>，但永远不会达到 <code>1</code>。同样，当输入值减小时，S 型函数值 函数的输出接近，但永远不会达到 <code>0</code>。</p><blockquote><p><em>sigmoid</em> 一词通常更广泛地用于指代任何 S 形函数。从技术层面来看，对特定函数$f(x) = \frac{1}{1 + e^{-x}}$来说，更准确的术语是<em>逻辑函数</em>。</p></blockquote><p>sigmoid function是机器学习中重要的激活函数</p><ul><li>Sigmoid函数的输出范围是0到1。由于输出值限定在0到1，因此它对每个神经元的输出进行了归一化。</li><li>用于将预测概率作为输出的模型。由于概率的取值范围是0到1，因此Sigmoid函数非常合适</li><li>梯度平滑，避免跳跃的输出值</li><li>函数是可微的。这意味着可以找到任意两个点的Sigmoid曲线的斜率</li><li>结果明确，即非常接近1或0。</li><li>函数输出不是以0为中心的，这会降低权重更新的效率</li><li>Sigmoid函数执行指数运算，计算机运行得较慢。</li></ul><p>sigmoid激活函数在神经网络中起到的作用：</p><blockquote><p>引入非线性特性，神经网络基本单元是线性组合（加权求和），部分情况需要映射到非线性解决复杂情况$f(x) = \frac{1}{1 + e^{-x}}$</p><p>sigmoid通常用于二分类最后一层，输出结果在0-1之间，将结果解释为“某一类的概率”</p><p>反向传播便利性 ，因为sigmoid函数可导，复合求导可得$\sigma’(x) = \frac{1}{1+e^{-x}} \cdot \frac{e<sup>{-x}}{1+e</sup>{-x}} = \sigma(x)(1-\sigma(x))$便于反向传播中梯度计算</p></blockquote><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/07_05/image_8d0788e8b70ca0dc3d327da12de64c2b.png" alt="sigmoid函数及其导数"></p><p>其他激活函数</p><p>双曲正切激活函数</p><p>$$<br>F(x)=tanh(x)<br>$$</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/07_05/image_15ebed5b8b66fe209a796b9f3812dcd1.png" alt=""></p><blockquote><p>请注意，S 型函数的范围为 0 到 1，tanh 函数的范围为 -1 到 1</p></blockquote><p><strong>修正线性单元</strong>激活函数（简称 <strong>ReLU</strong>）</p><p>$$<br>F(x)=max(0,x)<br>$$</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/07_05/image_7831be009afad4fe283f3ca6b59b6823.png" alt=""></p><p>ReLU 作为激活函数的效果通常优于 S 型函数或 tanh 等平滑函数，因为它在神经网络训练期间不易受到梯度消失问题的影响。与这些函数相比，ReLU 的计算也更容易。</p><h5 id="矩阵">矩阵</h5><p>下面是一个简单的全连接层</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/07_04/image_9940b3560723f490c7c501a1fdf3f4db.png" alt=""></p><p>对于第二层，二层一同时接受一层一和一层二的输出，对于此处简单的计算，我们可以得到$X=(input1<em>w_{1,1})+(input2</em>w_{2,1})$,但是实际上的全连接层需要计算的连接个数众多，使用这种计算方法即不直观，而且串行运算在计算机中运行时消耗许多内存交换以及等待时间，显然，我们需要矩阵运算。</p><p>对于第二层神经元接受到的信号强度可以使用$X=W•I$计算，W是权重矩阵，I是输入矩阵，X是输入到第二层的结果矩阵。</p><p><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mi>X</mi><mo>=</mo><mrow data-mjx-texclass="INNER"><mo data-mjx-texclass="OPEN">[</mo><mtable columnspacing="1em" rowspacing="4pt"><mtr><mtd><msub><mi>w</mi><mrow><mn>1</mn><mo>,</mo><mn>1</mn></mrow></msub></mtd><mtd><msub><mi>w</mi><mrow><mn>2</mn><mo>,</mo><mn>1</mn></mrow></msub></mtd></mtr><mtr><mtd><msub><mi>w</mi><mrow><mn>1</mn><mo>,</mo><mn>2</mn></mrow></msub></mtd><mtd><msub><mi>w</mi><mrow><mn>2</mn><mo>,</mo><mn>2</mn></mrow></msub></mtd></mtr></mtable><mo data-mjx-texclass="CLOSE">]</mo></mrow><mrow data-mjx-texclass="INNER"><mo data-mjx-texclass="OPEN">[</mo><mtable columnspacing="1em" rowspacing="4pt"><mtr><mtd><mi>i</mi><mi>n</mi><mi>p</mi><mi>u</mi><mi>t</mi><mn>1</mn></mtd></mtr><mtr><mtd><mi>i</mi><mi>n</mi><mi>p</mi><mi>u</mi><mi>t</mi><mn>2</mn></mtd></mtr></mtable><mo data-mjx-texclass="CLOSE">]</mo></mrow><mo>=</mo><mrow data-mjx-texclass="INNER"><mo data-mjx-texclass="OPEN">[</mo><mtable columnspacing="1em" rowspacing="4pt"><mtr><mtd><mo stretchy="false">(</mo><mi>i</mi><mi>n</mi><mi>p</mi><mi>u</mi><mi>t</mi><mn>1</mn><mo>∗</mo><msub><mi>w</mi><mrow><mn>1</mn><mo>,</mo><mn>1</mn></mrow></msub><mo>+</mo><mi>i</mi><mi>n</mi><mi>p</mi><mi>u</mi><mi>t</mi><mn>2</mn><mo>∗</mo><msub><mi>w</mi><mrow><mn>2</mn><mo>,</mo><mn>1</mn></mrow></msub><mo stretchy="false">)</mo></mtd></mtr><mtr><mtd><mo stretchy="false">(</mo><mi>i</mi><mi>n</mi><mi>p</mi><mi>u</mi><mi>t</mi><mn>1</mn><mo>∗</mo><msub><mi>w</mi><mrow><mn>1</mn><mo>,</mo><mn>2</mn></mrow></msub><mo>+</mo><mi>i</mi><mi>n</mi><mi>p</mi><mi>u</mi><mi>t</mi><mn>2</mn><mo>∗</mo><msub><mi>w</mi><mrow><mn>2</mn><mo>,</mo><mn>2</mn></mrow></msub><mo stretchy="false">)</mo></mtd></mtr></mtable><mo data-mjx-texclass="CLOSE">]</mo></mrow></math></p><p>使用矩阵可以清晰描述，并且能够直接计算一层权重。</p><h5 id="隐藏层">隐藏层</h5><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/07_04/image_f47720cbed3322838fea0b2631bcd57c.png" alt=""></p><p>隐藏层，位于神经网络中间层，即既不作为输入也不作为输出，在中间起连接，传递作用的。</p><p>$W_{input_hidden}$是输入层和隐藏层之间的权重,$W_{hidden_output}$是隐藏层和输出层之间的权重</p><p>$$<br>X_{hidden}=W_{input_hidden}•Input<br>$$</p><p>隐藏层的输出可以再使用激活函数。</p><p>$$<br>Output_{hidden} = sigmoid(X_{hidden})<br>$$</p><p>计算输出层权重</p><p>$$<br>X_{output}=W_{hidden_output}•Output_{hidden}<br>$$</p><p>使用激活函数</p><p>$$<br>Output_{output}=sigmoid(X_{output})<br>$$</p><p>神经单元线性关系</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/07_05/image_c7a26918679ff78c5441c9d18d72390b.png" alt=""></p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/07_05/image_aa861ddd5da4aa99f775217f620253ad.png" alt=""></p><p>神经单元使用激活函数非线性关系</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/07_05/image_4d37337ca60fed8f53a3dd8e00c9b1b3.png" alt=""></p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/07_05/image_53f24caeab48abdfc30685bff11b0fc0.png" alt=""></p><p>神经网络（Neural Network，NN）是机器学习中的一种算法框架，灵感源于生物神经元，通过多层节点（神经元）连接传递信息，实现复杂映射。</p><ul><li>结构：由输入层、隐藏层、输出层组成，层间神经元通过权重连接，通过反向传播算法优化权重。</li><li>典型模型：早期的感知机、多层感知机（MLP），但受限于计算能力和数据量，应用范围较窄。</li></ul><h3 id="深度学习">深度学习</h3><p>深度学习（Deep Learning）本质上是多层神经网络的深化，通过增加网络层数（如几十层到上千层）和复杂结构，实现对数据的自动特征提取和表示学习。</p><p>深度学习是神经网络的延伸与升级，计算能力的提升解决了传统神经网络训练算力问题，使得深度学习具有更为复杂的结构，能够实现更为复杂的功能。</p><ul><li>自动特征工程：无需人工设计特征，例如CNN可自动提取图像的边缘、纹理等高层特征，RNN可处理序列数据的时序关系。</li></ul><p>卷积神经网络（CNN）、循环神经网络（RNN）、Transformer、生成对抗网络（GAN）等，广泛应用于图像识别、自然语言处理、语音识别等领域。</p><h2 id="什么是机器学习">什么是机器学习</h2><blockquote><p>使计算机不需要显式编程就能拥有学习能力的研究</p></blockquote><p>机器通过观察某项任务存在的模式，并且试图以某种直接或间接方式模仿。</p><p>而直接或间接的区别即分为监督学习和非监督学习</p><p>监督学习</p><ul><li>数据特点：输入数据（特征）配有明确的标签（Label），即“有标准答案”。</li><li>示例：图像分类任务中，每张图片标注“猫”“狗”等类别；房价预测中，房屋特征（面积、位置）对应具体价格。</li><li>如线性回归，决策树，SVM，CNN</li></ul><p>非监督学习</p><ul><li>数据特点：输入数据无标签，仅包含特征，需算法自行发现数据内在结构。</li><li>示例：用户行为数据（浏览记录、购买偏好）未标注类别，需通过聚类算法将相似用户分组。</li><li>如k-means，PCA，AE</li></ul><h4 id="监督学习">监督学习</h4><ul><li>本质：通过“输入特征+标签”的标注数据，学习从特征到标签的映射关系（函数），再用训练好的模型对新数据预测。</li><li>类比理解：类似学生通过“例题（标注数据）”学习解题规则，再用规则解答新题目。</li></ul><p>1.数据要求</p><ul><li>必须包含特征（Features） 和标签（Labels），如：</li><li>图像分类：像素值是特征，“猫/狗”是标签；</li><li>房价预测：房屋面积、位置是特征，价格是标签。</li></ul><p>2.学习目标</p><ul><li>最小化预测值与真实标签的误差，例如：</li><li>用线性回归预测房价时，让模型输出的价格与实际价格尽可能接近。</li></ul><p>3. 训练流程：</p><ul><li>划分训练集、验证集和测试集 → 模型拟合训练数据 → 通过验证集调参 → 用测试集评估泛化能力。</li></ul><h4 id="无监督学习">无监督学习</h4><ul><li>本质：仅通过输入特征（无标签），让模型自主发现数据的内在规律（如相似性、聚类结构、分布模式）。</li><li>类比理解：类似人类在没有老师指导的情况下，通过观察事物特征（如颜色、形状）自主将其分组（如将水果按大小、甜度分类）。</li></ul><p>主要是聚类和降维</p><p>聚类（Clustering）：数据分组</p><ul><li>目标：将相似的数据点归为同一簇（Cluster），不同簇间差异明显。</li><li>示例：</li><li>电商平台根据用户购买行为（浏览记录、消费金额）将用户分群，针对性推送商品；</li><li>生物学中按基因表达数据对物种分类。</li></ul><p>降维（Dimensionality Reduction）：特征压缩</p><ul><li>目标：将高维数据（如上万维特征）映射到低维空间，保留关键信息，减少计算复杂度。</li></ul><h4 id="参数学习和非参数学习">参数学习和非参数学习</h4><p>机器学习可以分为有无监督，也可分为有无参数</p><p>参数学习，即数据服从某种固定分布，通过训练数据学习一组固定数量的参数，用固定参数直接描述数据模型。</p><p>非参数学习，即不预设参数数量，依赖数据本身，模型复杂度会随之动态变化。</p><p>参数学习：典型算法与原理</p><ol><li>线性回归（Linear Regression）</li></ol><ul><li>核心：假设输出与输入是线性关系，用参数  \theta  表示权重，通过最小化均方误差（MSE）求解  \theta 。</li><li>公式： $y = \theta_0 + \theta_1x_1 + \dots + \theta_nx_n $，参数数量为特征维度+1（固定）。</li></ul><ol start="2"><li>逻辑回归（Logistic Regression）</li></ol><ul><li>核心：在线性回归基础上用Sigmoid函数将输出映射到[0,1]区间，用于二分类，参数含义与线性回归类似。</li><li>应用：垃圾邮件分类、疾病预测（是否患病）。</li></ul><ol start="3"><li>朴素贝叶斯（Naive Bayes）</li></ol><ul><li>核心：假设特征条件独立，学习先验概率  P(Y)  和条件概率  P(X|Y) （如高斯朴素贝叶斯假设  P(X|Y)  服从高斯分布）。</li><li>参数：存储各类别概率和特征分布参数（如均值、方差），数量固定。</li></ul><p>非参数学习：典型算法与原理</p><ol><li>K近邻（K-Nearest Neighbors, KNN）</li></ol><ul><li>核心：不学习参数，直接存储所有训练样本。预测时找新样本的K个最近邻，根据邻居类别投票（分类）或取均值（回归）。</li><li>特点：</li><li>无固定参数，K是超参数（需手动调优），模型复杂度随样本量增加而提高；</li><li>适合处理图像像素级分类（如MNIST手写数字识别）。</li></ul><ol start="2"><li>决策树（Decision Tree）</li></ol><ul><li>核心：通过递归划分特征空间（如按“年龄&gt;30岁”“收入&gt;5000元”等条件分裂节点），树的深度和节点数由数据决定（非固定参数）。</li><li>变种：随机森林（集成多棵决策树，非参数特性更强）。</li></ul><ol start="3"><li>核密度估计（Kernel Density Estimation, KDE）</li></ol><ul><li>核心：不假设数据分布，用核函数（如高斯核）平滑每个数据点的概率密度，整体密度由所有点叠加而成。</li><li>应用：估计数据的概率分布（如金融市场收益率的分布预测）。</li></ul><ol start="4"><li>支持向量机（SVM，非参数视角）</li></ol><ul><li>核心：当使用非线性核函数（如RBF核）时，SVM通过将数据映射到高维空间求解分隔超平面，模型复杂度与支持向量数量相关（数据量越大，支持向量可能越多）。</li></ul>]]></content>
    
    
    <summary type="html">机器学习
机器学习是一个专门研究和开发能够学习的机器的领域，目标是获得通用人工智能。

机器学习是人工智能的核心领域，目标是让计算机通过数据学习规律并做出预测或决策。其核心逻辑是：从数据中提取特征，通过算法训练模型，实现对未知数据的推断。

 * 分类：包括监督学习（如回归、分类算法）、无监督学习（如聚类、降维）、半监督学习和强化学习等。
 * 关键特征：依赖人工设计的特征工程，例如在图像识别中，需要手动提取边缘、颜色等特征。

本篇是对之前文章的扩展，补充</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>机器学习——神经网络</title>
    <link href="https://polar-bear.eu.org/2025/04/26/ji-qi-xue-xi-shen-jing-wang-luo/"/>
    <id>https://polar-bear.eu.org/2025/04/26/ji-qi-xue-xi-shen-jing-wang-luo/</id>
    <published>2025-04-26T18:35:00.559Z</published>
    <updated>2025-05-13T05:18:47.779Z</updated>
    
    <content type="html"><![CDATA[<h2 id="机器学习——神经网络">机器学习——神经网络</h2><p>概念合集（写得较为复杂）</p><p><a href="https://zhuanlan.zhihu.com/p/100938949">机器学习（1）——绪论 - 知乎</a></p><p><a href="https://zhuanlan.zhihu.com/p/101000750">机器学习（2）——线性回归（Linear Regression） - 知乎</a></p><p><a href="https://zhuanlan.zhihu.com/p/101111312">机器学习（3）——Logistic回归（Logistic Regression） - 知乎</a></p><p><a href="https://zhuanlan.zhihu.com/p/101168359">机器学习（4）——模型评价与正则化 - 知乎</a></p><p><a href="https://zhuanlan.zhihu.com/p/102183217">机器学习（5）——神经网络（Neural Network，NN） - 知乎</a></p><p><a href="https://zhuanlan.zhihu.com/p/102502396">机器学习（6）——激活函数 - 知乎</a></p><p>通俗易懂（合集）：<a href="https://www.bilibili.com/video/BV1uGA3eLEeu">从函数到神经网络</a></p><p>进阶，概念，下饭（漫士沉思录）<a href="https://www.bilibili.com/video/BV1atCRYsE7x">90分钟！清华博士带你一口气搞懂人工智能和神经网络</a></p><p>（3Blue1Brown）<a href="https://www.bilibili.com/video/BV1bx411M7Zx">【官方双语】深度学习之神经网络的结构 Part 1 ver 2.0</a></p><h3 id="机器学习的基本流程（从函数到神经网络）">机器学习的基本流程（从函数到神经网络）</h3><p>机器学习是要找一个函数，对于给定的输入能给出正确的输出。例如聊天机器人就是输入当前的对话场景，输出机器的应答；语音识别就是输入待辨识的音频，输出对应的文字。</p><h4 id="函数（function）">函数（function）</h4><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/04_27/image_6320124980ba288f75765f64515aa6ad.png" alt=""></p><blockquote><p>Functions Describe the World                       ----不是我说的</p></blockquote><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/04_27/image_19deaf8662f6ea67b848975e24590440.png" alt=""></p><p>这个Functions完美的符合了所有点，解释了整个World，这即是早期人工智能符号主义，使用准确的函数准确描述所有结果。</p><p>但是现实世界中许多问题无法使用准确的函数描述，只能简化问题，核心思想就是“<strong>猜</strong>”和“<strong>差不多得了</strong>”。这即是现代联结主义，希望通过对大脑生理结构复杂性模拟来实现智能。</p><p>我们首先提供给机器一个特定的函数 f0 （建模），让机器评价它的好坏， 并对它不断进行改进（其过程即是不断的<strong>猜</strong>），期望最终得到一个最佳的函数 f∗ .</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/04_27/image_5858d229bdbb51fe6fae6eb218f416ab.png" alt=""></p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/04_27/image_9c49ef77ba90ea5a2d74a41dec666e84.png" alt=""></p><p>在这个简单的示例中，使用一次函数(模型：Y= wX + b)尽可能接近所有点，但是始终无法通过所有点，那就使用<strong>差不多得了</strong>，认为现在得到w,b就是最优解。</p><h4 id="激活函数（Activation-Function）">激活函数（Activation Function）</h4><p>但是，大多数实际数据并非线性关系，为了简单的将原来的线性函数（Y= wX + b）转化为非线性，可以在原本的函数外层套上一个非线性运算，叫<strong>激活函数</strong></p><blockquote><p>F(x) = wX + b        ==&gt;      F(x) = g(wX + b)</p></blockquote><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/04_27/Screenshot_2025-04-27-10-12-41-012_tv.danmaku.bil_e8d388e0a9a184416290d598bdf5b758.jpg" alt=""></p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/04_27/image_6cf3011680c97f8a99e53db33c599c2b.png" alt=""></p><p>现在，通过添加激活函数g(x)=e<sup>x</sup>，能够较好的处理非线性数据关系，实际的激活函数比举例的要复杂一点点。</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/04_27/Screenshot_2025-04-27-10-14-54-611_tv.danmaku.bil_536524b200c7ec3c2c537fe1aec6b21d.jpg" alt=""></p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/04_27/Screenshot_2025-04-27-10-16-05-862_tv.danmaku.bil_6aae467cd5c8e133f675f6ecc76115a2.jpg" alt=""></p><p>概念：将原本的复杂F(x)画成图的形状，类似神经元的连接（不要理解为真正生物神经突触连接）叫神经网络，神经元连接过程即为一个函数计算过程。</p><p>概念及其简单，不要因为名词陌生而觉得过于高端，理解过后既是及其简单的定义。</p><p>输入层：即函数输入。</p><p>隐藏层：因为套用多层激活函数，位于中间隐藏起来的层。</p><p>输出层：即完成函数计算输出结果。</p><p>前向传播：即按照神经网络依次正向计算得到结果的过程。</p><h4 id="评估-损失函数（lossfunction）">评估----损失函数（lossfunction）</h4><blockquote><p>建模、评价和改进，就是机器学习最基本的三个步骤。    ----不是我说的</p></blockquote><p>建模已经完成，能够完成猜的过程，但是，怎样才能评判猜得好不好呢，那就得指定一个标准来评判谁猜得更好，其依据即为<strong>损失函数</strong></p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/04_27/Screenshot_2025-04-27-11-52-21-841_tv.danmaku.bil_2f8010c9a4bd432572595f5134533c8f.jpg" alt=""></p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/04_27/Screenshot_2025-04-27-13-19-26-272_tv.danmaku.bil_6c858077eca2ac0d235d3ecfecae74ce.jpg" alt=""></p><p>损失函数表示的是真实值与预测值的误差，在不断猜的过程中就是调整w,b的值使损失函数最小的优化问题，简单的函数可以求导为0求极值点来找到，而有w,b两个变量即是求各自的偏导。</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/04_27/Screenshot_2025-04-27-13-22-57-118_tv.danmaku.bil_a7287e669dff16fd79f491018d7dfe50.jpg" alt=""></p><p>以上通过线性函数来拟合x,y之间的关系即为<strong>线性回归</strong></p><h4 id="神经网络的损失函数">神经网络的损失函数</h4><p>线性回归的损失函数一般可以通过求导或求偏导的方式获取其极值点，但是，神经网络通常由<strong>线性函数</strong>和<strong>非线性激活函数</strong>多种复杂组合而成，其<strong>损失函数</strong>也应当是<strong>复杂的非线性函数</strong>，但是解决的办法却没有那么复杂，只需要<strong>一点点猜</strong>即可，通过不断的调整w,b再计算损失函数，观察损失函数的变化，是增加还是减小，能得到当前调整的参数对结果的影响，尽可能将损失函数结果变小。</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/04_27/Screenshot_2025-04-27-13-33-52-738_tv.danmaku.bil_8b8d23a4faf5f6b4d521911dc98574b9.jpg" alt=""></p><p>w变化的大小使得损失函数变化的大小即为<strong>损失函数对w的偏导</strong>，每次只需要让参数向偏导的反方向变化</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/04_27/image_515022a92386840b0bab1c6fe506dcea.png" alt=""></p><p>如图，函数最低点位于（0，0，2）其变量为x,y，在y=0平面上，不断尝试向<strong>损失函数关于x的偏导</strong>的反方向调整，即可到达最低点。</p><h4 id="学习率">学习率</h4><p>每次反反向调整可以添加一个系数进行控制，以控制损失函数沿偏导反向下降速率，而控制变化快慢的系数即为学习率。</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/04_27/Screenshot_2025-04-27-13-41-50-775_tv.danmaku.bil_14d00c131acac9122d4f5fac332a70e3.jpg" alt=""></p><p>在模型训练的不同时候对学习率控制尤为重要，常见的有学习率预热（warmup）和学习率衰减（Learning Rate Decay），在此基础上还有许多对学习率控制的优化器，如Adam与AdamW等，优化器对于模型位于不同位置和情况调整学习率以解决对应问题。</p><blockquote><p>可以直观的理解成，如果当前所处的区域比较平坦（梯度的二阶项很小）则我们可以用较大的学习率来更新，快速走出鞍点，如果当前所处的区域比较陡峭（梯度的二阶项很大），则为了防止梯度爆炸等不稳定的情况发生，我们需要用较小的学习率谨慎地更新。</p></blockquote><p><a href="https://zhuanlan.zhihu.com/p/643452086">Adam和AdamW - 知乎</a></p><p><a href="https://zhuanlan.zhihu.com/p/653605711">从梯度下降到AdamW一文读懂机器学习优化算法 - 知乎</a></p><p><a href="https://zhuanlan.zhihu.com/p/1108285598">每天3分钟，彻底弄懂神经网络的优化器（十一）AdamW - 知乎</a></p><p>常用学习率调整策略：<a href="https://zhuanlan.zhihu.com/p/524650878">Pytorch实现11种常用学习率调整策略(自定义学习率衰减) - 知乎</a></p><p><a href="https://zhuanlan.zhihu.com/p/670437303">机器学习-学习率：从理论到实战，探索学习率的调整策略 - 知乎</a></p><p>示例分析：<a href="https://polar-bear.eu.org/2025/04/21/nanodet-xun-lian-ce-shi/#%E5%AD%A6%E4%B9%A0%E7%8E%87">NanoDet训练 | polar-bear～Blog</a></p><h4 id="梯度下降">梯度下降</h4><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/04_27/Screenshot_2025-04-27-13-44-57-872_tv.danmaku.bil_deb0592ae1abe103ce7030392db4bc6c.jpg" alt=""></p><p>这些偏导数构成的向量就叫梯度。</p><p>不断变化w,d参数，使损失函数逐渐变小的过程就叫梯度下降。</p><p>最常见的三种梯度下降算法是：</p><ul><li>批量梯度下降（Batch Gradient Descent）</li><li>随机梯度下降（Stochastic Gradient Descent, SGD）</li><li>小批量梯度下降（Mini-batch Gradient Descent）</li></ul><p>在批量梯度下降中，学习率应用于整个数据集，用于计算损失函数的平均梯度。而在随机梯度下降和小批量梯度下降中，学习率应用于单个或一小批样本，用于更新模型参数。</p><p>随机梯度下降和小批量梯度下降由于其高度随机的性质，常常需要一个逐渐衰减的学习率，以帮助模型收敛。</p><p><a href="https://zhuanlan.zhihu.com/p/580645925">梯度下降详解（主观理解+推导证明+例题） - 知乎</a></p><h4 id="反向传播">反向传播</h4><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/04_27/Screenshot_2025-04-27-13-51-09-956_tv.danmaku.bil_d204afe8a92e6b1c67ba7eeeafc5d9f4.jpg" alt=""></p><p>神经网络中求参数对损失函数偏导可以使用链式法则，即<strong>损失函数</strong>对w1的偏导为“w1变化一个单位使得a变化多少，a变化一个单位使得^y变化多少，^y变化一个单位使得L变化多少，将三者偏导乘在一起，即得到偏导。</p><p>然后从右向左依次求导，然后更新每一层参数，例如计算完^y对w2的偏导（a隐藏层的参数w2，b2），在计算损失函数对w1的偏导时也会用到，即可不用重复计算，而是让值从右向左传播，叫<strong>反向传播</strong>。</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/04_27/Screenshot_2025-04-27-14-07-53-415_tv.danmaku.bil_6a4dbba270c6504012a03a93bd5d4a69.jpg" alt=""></p><p>通过从输入x到输出y的前向传播，然后反向传播计算损失函数对每个参数的梯度，如果每个参数向着梯度反方向变化，构成神经网络一次训练。</p><h4 id="过拟合">过拟合</h4><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/04_27/Screenshot_2025-04-27-14-14-42-297_tv.danmaku.bil_09c704fd292d164187ec6988f176f18e.jpg" alt=""></p><p>在训练数据上表现良好，对新数据预测<strong>泛化能力</strong>差的现象叫<strong>过拟合</strong></p><p>模型学会了过于复杂的方法，以至于将噪声和随机波动一并考虑。</p><ul><li>使用更多的数据量（数据增强：旋转，翻转，裁剪，噪声）</li><li>提前终止训练</li><li>修改损失函数添加惩罚项抑制参数过分增长（正则化：这种方法）</li><li>Dropout：训练时丢弃部分参数防止对某些参数过度依赖</li></ul><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/04_27/Screenshot_2025-04-27-15-50-06-203_tv.danmaku.bil_730ae4d902f8250c2cf3101d0d6f94d6.jpg" alt=""></p><p>在损失函数中添加惩罚项，来抑制模型过分复杂，L1和L2，即惩罚项分别为<strong>参数绝对值和</strong>和<strong>参数平方和</strong>，L2在参数大时抑制效果更强。</p><p>控制惩罚力度的参数叫<strong>正则化系数</strong>，控制参数的参数叫<strong>超参数</strong>。</p><p>其他问题</p><ul><li>梯度消失</li><li>梯度爆炸</li><li>收敛速度</li><li>计算开销</li></ul><p>解决</p><ul><li>梯度裁剪</li><li>残差网络Resnet</li><li>Densenet</li><li>权重初始化</li><li>归一法</li><li>动量法</li><li>RMSProp</li><li>Adam</li><li>mini-batch</li></ul><h4 id="矩阵">矩阵</h4><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/04_27/Screenshot_2025-04-27-16-04-31-475_tv.danmaku.bil_76387cd9893b0bdc70ad924b036a9d78.jpg" alt=""><br><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/04_27/Screenshot_2025-04-27-16-05-42-019_tv.danmaku.bil_f3e0a89500dc8c7939298e52740947c4.jpg" alt=""></p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/04_27/Screenshot_2025-04-27-16-06-58-550_tv.danmaku.bil_da8a8e3f361506954b8e68cd5fe88061.jpg" alt=""></p><h4 id="卷积">卷积</h4><p>若要使用神经网络识别图片，按照像素平铺展开，例如，一个输入为 224x224x3 的图像，如果连接到一个有 1000 个神经元的全连接层，那么参数数量将非常庞大。则这个全连接层参数将超过百万级别，而且像素之间无法保留空间关系，会导致模型不能很好理解图像的局部模式。</p><p>卷积层通过卷积核在图像上滑动，并共享卷积核的权重。这意味着无论图像尺寸多大，卷积核的参数数量都是固定的。例如，一个 5x5 的卷积核，只有 25 个参数。</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/04_27/Screenshot_2025-04-27-16-15-23-024_tv.danmaku.bil_a11f83fbdedf57add5059a38741e8077.jpg" alt=""></p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/04_27/Screenshot_2025-04-27-19-25-49-562_tv.danmaku.bil_07d49578c215c471f227d832a8ca8705.jpg" alt=""></p><p>在传统的图像处理中，卷积操作使用一个<strong>预先定义好的、固定的</strong>矩阵（称为卷积核、滤波器或掩码）在图像上滑动。这个矩阵中的数值决定了卷积操作的行为。</p><ul><li><strong>模糊:</strong> 使用平均滤波器或高斯滤波器。</li><li><strong>锐化:</strong> 使用拉普拉斯算子或Sobel算子。</li><li><strong>边缘检测:</strong> 使用Sobel算子、Prewitt算子或Canny算子。</li><li><strong>浮雕:</strong> 使用特定的矩阵来模拟光照效果。</li></ul><p>卷积操作实际上是计算卷积核与图像局部区域的加权和。通过改变卷积核中的权重，可以突出或抑制图像中的某些特征，从而达到图像处理的目的。</p><h4 id="卷积神经网络（Convolutional-Neural-Network，CNN）"><strong>卷积神经网络</strong>（Convolutional Neural Network，CNN）</h4><h5 id="卷积层（Convolution-Layer）">卷积层（Convolution Layer）</h5><p>在卷积神经网络中，与传统的图像处理不同，CNN（卷积神经网络）中的卷积核不是预先定义的，而是通过机器学习（通常是反向传播算法）从大量数据中学习得到的。CNN 通过训练，不断调整卷积核中的数值，使其能够更好地识别和提取图像中的特征，从而提高图像识别、分类或其他任务的准确性。</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/04_27/Screenshot_2025-04-27-19-37-59-365_tv.danmaku.bil_caee4b18b0a561e4b820d8e9b7820448.jpg" alt=""></p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/04_27/Screenshot_2025-04-27-19-39-04-988_tv.danmaku.bil_1387b089c09065c4b17c1740ac3bd615.jpg" alt=""></p><p>卷积层可以替换神经网络中一层全连接层，起到减少权重参数，有效提取局部特征的作用</p><h5 id="池化层（Pooling-Layer）">池化层（Pooling Layer）</h5><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/04_27/Screenshot_2025-04-27-19-42-41-744_tv.danmaku.bil_00fa34188685b54e7047dcb2769cd3f7.jpg" alt=""></p><p>与卷积层配合使用的一般还有池化层（Pooling Layer），池化层起到的作用是在保留重要特征的同时，降低特征图的空间维度，从而减少计算量和参数数量。</p><h4 id="循环神经网络（Rerrent-Neural-Network-RNN）">循环神经网络（Rerrent Neural Network, RNN）</h4><h5 id="词嵌入（word-embedding）">词嵌入（word embedding）</h5><p><a href="http://ronxin.github.io/wevi/">wevi单词嵌入可视化检查器</a></p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/04_27/image_d8b2193a9d2a915cf3ed59c69498a813.png" alt=""></p><p>词嵌入（Word Embedding）是一种将自然语言中的词语映射到低维向量空间的技术。简单来说，就是把每个词都变成一个向量，这个向量能够捕捉到词语的语义信息，使得语义相似的词在向量空间中距离更近。</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/04_27/Screenshot_2025-04-27-19-59-17-939_tv.danmaku.bil_9783a1715b183f66c708d6bfa930d014.jpg" alt=""></p><p>通过计算两个词向量的点积或者余弦相似度，可以表示向量之间的相关性。</p><p>词向量嵌入矩阵潜空间降维投影到坐标系，可视化不同词语之间的距离</p><p><a href="http://projector.tensorflow.org/">Embedding projector - visualization of high-dimensional data</a></p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/04_27/image_35db055d2ec2fe6884e34f1378fa2ada.png" alt=""></p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/04_27/image_951f9438ce4773f8bc90e0046496502b.png" alt=""></p><p>为了将上一词的词义与后文产生联系，可以将第一词的隐藏状态和第二词一起参数运算，依次传递，就可使得后文具有前词的信息。</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/04_27/Screenshot_2025-04-27-20-14-40-447_tv.danmaku.bil_e93a9493268321d13a9dd2a01ae1557d.jpg" alt=""></p><p>既是RNN循环神经网络，是一种专门用于处理序列数据的神经网络。与传统的前馈神经网络不同，RNN 具有循环连接，使得它可以将之前的状态信息传递到当前状态，从而能够处理具有时序关系的序列数据。</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/04_27/Screenshot_2025-04-27-20-18-30-375_tv.danmaku.bil_3e2f84b02a21554f3b6b7a0813789071.jpg" alt=""></p><p>详细流程如下：</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/04_27/Screenshot_2025-04-27-20-51-55-162_tv.danmaku.bil_4186e3737b05b1feb5df102f6a82ed02.jpg" alt=""></p><p>和经典神经网络相比，仅仅是多了一个前一时刻的隐藏状态。</p><h4 id="Transformer">Transformer</h4><p>Transformer 是一种基于自注意力机制（Self-Attention Mechanism）的神经网络架构，最初由 Google 在 2017 年的论文 “Attention is All You Need” 中提出。它彻底改变了自然语言处理（NLP）领域，并在机器翻译、文本生成、问答系统等任务中取得了显著的成果。</p>]]></content>
    
    
    <summary type="html">机器学习——神经网络
概念合集（写得较为复杂）

机器学习（1）——绪论 - 知乎 [https://zhuanlan.zhihu.com/p/100938949]

机器学习（2）——线性回归（Linear Regression） - 知乎 [https://zhuanlan.zhihu.com/p/101000750]

机器学习（3）——Logistic [https://zhuanlan.zhihu.com/p/101111312]</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>NanoDet训练</title>
    <link href="https://polar-bear.eu.org/2025/04/21/nanodet-xun-lian-ce-shi/"/>
    <id>https://polar-bear.eu.org/2025/04/21/nanodet-xun-lian-ce-shi/</id>
    <published>2025-04-21T02:34:54.364Z</published>
    <updated>2025-07-22T23:41:33.859Z</updated>
    
    <content type="html"><![CDATA[<h2 id="NanoDet训练">NanoDet训练</h2><p>github：<a href="https://github.com/RangiLyu/nanodet">RangiLyu/nanodet: NanoDet-Plus⚡Super fast and lightweight anchor-free object detection model. 🔥Only 980 KB(int8) / 1.8MB (fp16) and run 97FPS on cellphone🔥</a></p><p>CPU：<a href="https://github.com/guo-pu/NanoDet-PyTorch-CPU">guo-pu/NanoDet-PyTorch-CPU: 此代码用于目标检测，模型小，检测速度快速，适合没GPU显卡的嵌入式设备运行，比如“树莓派”、ARM开发板、嵌入式开发板。</a></p><p><a href="https://github.com/hpc203/nanodet-plus-opencv">hpc203/nanodet-plus-opencv: 分别使用OpenCV、ONNXRuntime部署NanoDet-Plus，包含C++和Python两个版本的程序</a></p><p><a href="https://blog.csdn.net/qq_40280673/article/details/126097822">目标检测——使用nanodet训练自己制作的数据集并测试模型，通俗易懂（详细图文教程）_nanodet训练自己的模型-CSDN博客</a></p><p><a href="https://blog.csdn.net/matken/article/details/116212274">第一模块：深度学习轻量级模型nanodet-CSDN博客</a></p><p><a href="https://blog.csdn.net/qq_20144897/article/details/132071736">轻量级目标检测模型NanoDet-Plus微调、部署（保姆级教学）-CSDN博客</a></p><p>数据集：</p><p><a href="https://blog.csdn.net/qq_40280673/article/details/125158582?spm=1001.2014.3001.5501">使用Labelimg制作VOC格式数据集或yolo格式数据集（详细图文教程）_yolov5训练集-CSDN博客</a></p><h3 id="conda">conda</h3><p>安装<a href="https://blog.csdn.net/qq_44000789/article/details/142214660">最新版最详细Anaconda新手安装+配置+环境创建教程_anaconda配置-CSDN博客</a></p><p>添加环境变量</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">..\anaconda3</span><br><span class="line">..\anaconda3\Scripts</span><br><span class="line">..\anaconda3\Library\bin</span><br><span class="line">..\anaconda3\Library\mingw-w64\bin</span><br></pre></td></tr></table></figure><p>查看安装情况</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda --version</span><br></pre></td></tr></table></figure><p>创建/删除 环境<br>命令创建python版本为X.X、名字为 env_name 的虚拟环境。env_name文件可以在Anaconda安装目录 envs文件下找到。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda create -n env_name python=3.8</span><br></pre></td></tr></table></figure><p>在conda环境下，输入以下命令查看当前存在的环境：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda env list</span><br></pre></td></tr></table></figure><p>删除环境</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">conda remove -n env_name --all</span><br><span class="line">conda env remove -n env_name</span><br></pre></td></tr></table></figure><p>重命名环境（将 --clone 后面的环境重命名成 -n 后面的名字）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda create -n torch --clone py3  # 将 py3 重命名为 torch</span><br></pre></td></tr></table></figure><p>创建完成环境之后，系统会提示如何 进入和退出环境，如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">conda activate env_name  # 进入环境</span><br><span class="line">conda deactivate# 退出环境</span><br></pre></td></tr></table></figure><h3 id="pytorch">pytorch</h3><p>查看CUDA版本<code>nvidia-smi</code>  <code>nvcc -V</code></p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/04_22/image_0e05798a1db1a1845db45c9b9cf289ac.png" alt=""></p><p><a href="https://pytorch.org/get-started/previous-versions/">Previous PyTorch Versions | PyTorch</a></p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/04_22/image_2e2c39973a8d9595cdef7da1ad960c9d.png" alt=""></p><p>NanoDet项目需要使用不高于2.00版本的Pytorch,而Pytorch低版本安装需要降低CUDA版本，需要重新安装CUDA 11.7</p><p>CUDA旧版存档：<a href="https://developer.nvidia.com/cuda-toolkit-archive">CUDA Toolkit Archive | NVIDIA Developer</a></p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/07_23/image_8ce31c74ae67ded441bad2d05b0b6071.png" alt=""></p><p>在下载安装过程中，将<code>https://developer.download.nvidia.com</code>改为<code>https://developer.download.nvidia.cn</code>可以解决下载速度过慢的问题。</p><p>最后安装<code>sudo apt-get -y install cuda</code>的过程中，也可以在<code>/etc/apt/sources.list.d</code>修改</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nano archive_uri-https_developer_download_nvidia_com_compute_cuda_repos_ubuntu2204_x86_64_-jammy.list</span><br></pre></td></tr></table></figure><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/07_23/image_b74e1d6156a10e29edd2af47ba8a6bfd.png" alt=""></p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/07_23/image_674c33632bbea8efc1ca2fe6a515260b.png" alt=""></p><p><a href="https://zhuanlan.zhihu.com/p/689645505">成功解决：AssertionError: Torch not compiled with CUDA enabled - 知乎</a></p><p>创建conda环境</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda create -n env_name python=3.8</span><br></pre></td></tr></table></figure><p>查看环境</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda env list</span><br></pre></td></tr></table></figure><p>进入环境</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda activate PyTorch</span><br></pre></td></tr></table></figure><p>安装pytorch</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda install pytorch==1.13.1 torchvision==0.14.1 torchaudio==0.13.1 pytorch-cuda=11.7 -c pytorch -c nvidia</span><br></pre></td></tr></table></figure><p>测试torch环境</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">import torch</span><br><span class="line">print(torch.cuda.is_available())</span><br><span class="line">print(torch.cuda.device_count())</span><br><span class="line">print(torch.cuda.get_device_name(0))</span><br></pre></td></tr></table></figure><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/04_22/image_7fcddf1e8cf1fb014c7aad22a982b215.png" alt=""></p><h3 id="NanoDet">NanoDet</h3><p>此处使用<a href="https://blog.csdn.net/qq_40280673/article/details/126097822">目标检测——使用nanodet训练自己制作的数据集并测试模型，通俗易懂（详细图文教程）_nanodet训练自己的模型-CSDN博客</a></p><p>整合文件链接：<a href="https://pan.baidu.com/s/1H_qB7OZKJodtbEImKN_TeQ">https://pan.baidu.com/s/1H_qB7OZKJodtbEImKN_TeQ</a> 提取码：dcj7</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/05_13/image_f986db621ae6ad52f12110db503a852a.png" alt=""></p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/04_21/image_0c30330781f307aec3ea2ae42aa58e1c.png" alt=""></p><p>NanoDet项目较早需要使用不高于2.00版本的Pytorch，高版本Pytorch去除了部分NanoDet所用方法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda install pytorch==1.13.1 torchvision==0.14.1 torchaudio==0.13.1 pytorch-cuda=11.7 -c pytorch -c nvidia</span><br></pre></td></tr></table></figure><p>注意pytorch与torchvision版本对应</p><p><a href="https://github.com/pytorch/vision#installation">pytorch/vision：特定于计算机视觉的数据集、转换和模型</a></p><p>截至现在25/04/22，由于requirements.txt中未对依赖库做版本限制，会导致安装最新稳定版本，导致NanoDet缺少方法，建议以下库指定版本安装</p><p>pytorch-lightning  = 1.1.8</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/04_22/image_a73a48a85f27082f666bfe038500321f.png" alt="现使用版本"></p><p>（图中版本还是过高，在后期train中无法正常允许，需使用1.1.8版本）</p><p>修改requirements.txt</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Cython</span><br><span class="line">matplotlib</span><br><span class="line">numpy</span><br><span class="line">omegaconf&gt;=2.0.1</span><br><span class="line">onnx</span><br><span class="line">onnx-simplifier</span><br><span class="line">opencv-python</span><br><span class="line">pyaml</span><br><span class="line">pycocotools</span><br><span class="line">pytorch-lightning==1.1.8</span><br><span class="line">tabulate</span><br><span class="line">tensorboard</span><br><span class="line">termcolor</span><br><span class="line">tqdm</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>安装</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install -r requirements.txt</span><br></pre></td></tr></table></figure><p>在项目根目录安装nanodet</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python setup.py develop</span><br></pre></td></tr></table></figure><p>下载模型，测试NanoDet</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python demo/demo.py video --config ./config/nanodet-plus-m-1.5x_320.yml --model ./model/nanodet-plus-m-1.5x_320.pth --path ./Video/dai.avi </span><br></pre></td></tr></table></figure><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/04_22/image_045cb710e810fb1da721bf3432cf9520.png" alt=""></p><p>到此环境完成配置</p><h3 id="自训练模型">自训练模型</h3><h4 id="数据集准备">数据集准备</h4><p>数据标注工具</p><p>labelme：</p><p><a href="https://github.com/wkentaro/labelme/releases?page=1">Releases · wkentaro/labelme</a></p><p><a href="https://zhuanlan.zhihu.com/p/371756150">深度学习图像标签标注软件labelme超详细教程 - 知乎</a></p><p>labelimg：</p><p><a href="https://blog.csdn.net/qq_40280673/article/details/125158582?spm=1001.2014.3001.5501">使用Labelimg制作VOC格式数据集或yolo格式数据集（详细图文教程）_yolov5训练集-CSDN博客</a></p><p><a href="https://zhuanlan.zhihu.com/p/550021453">【教程】标注工具Labelimg的安装与使用 - 知乎</a></p><p><a href="https://blog.csdn.net/StopAndGoyyy/article/details/139906637">深度学习工具|LabelImg（标注工具）的安装与使用教程_labelimg软件-CSDN博客</a></p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/05_13/image_c31b4e35dad48e06b66c68ede121fb5b.png" alt=""></p><p>先用labelimg或者labelme标注出数据集，数据量过少可以用数据增强生成增加数据量，按照脚本可得到数据增强后的images和xml，分别为图片和目标位置信息。</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/05_13/image_01119ce0a795e2066bf8d343c5c425dc.png" alt=""></p><p>xml文件记录了图片名称和标注目标名称及在图片中的位置。</p><p>可以使用下面代码转化labelme到labelimg的xml格式</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># jsonTOxml.py</span></span><br><span class="line"><span class="comment"># 用于将labelme标注的json文件转换为labelimg的VOC格式的xml文件</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> xml.etree.ElementTree <span class="keyword">as</span> ET</span><br><span class="line"><span class="keyword">from</span> xml.dom <span class="keyword">import</span> minidom</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">json_to_xml</span>(<span class="params">json_path, xml_dir</span>):</span><br><span class="line">    <span class="comment"># 读取json文件</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(json_path, <span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        data = json.load(f)</span><br><span class="line">  </span><br><span class="line">    <span class="comment"># 创建XML结构</span></span><br><span class="line">    annotation = ET.Element(<span class="string">&#x27;annotation&#x27;</span>)</span><br><span class="line">  </span><br><span class="line">    <span class="comment"># 添加文件夹信息</span></span><br><span class="line">    folder = ET.SubElement(annotation, <span class="string">&#x27;folder&#x27;</span>)</span><br><span class="line">    folder.text = <span class="string">&#x27;images&#x27;</span></span><br><span class="line">  </span><br><span class="line">    <span class="comment"># 添加文件名</span></span><br><span class="line">    filename = ET.SubElement(annotation, <span class="string">&#x27;filename&#x27;</span>)</span><br><span class="line">    filename.text = data[<span class="string">&#x27;imagePath&#x27;</span>]</span><br><span class="line">  </span><br><span class="line">    <span class="comment"># 添加路径</span></span><br><span class="line">    path = ET.SubElement(annotation, <span class="string">&#x27;path&#x27;</span>)</span><br><span class="line">    path.text = os.path.abspath(os.path.join(xml_dir, data[<span class="string">&#x27;imagePath&#x27;</span>]))</span><br><span class="line">  </span><br><span class="line">    <span class="comment"># 添加来源信息</span></span><br><span class="line">    source = ET.SubElement(annotation, <span class="string">&#x27;source&#x27;</span>)</span><br><span class="line">    database = ET.SubElement(source, <span class="string">&#x27;database&#x27;</span>)</span><br><span class="line">    database.text = <span class="string">&#x27;Unknown&#x27;</span></span><br><span class="line">  </span><br><span class="line">    <span class="comment"># 添加图片尺寸</span></span><br><span class="line">    size = ET.SubElement(annotation, <span class="string">&#x27;size&#x27;</span>)</span><br><span class="line">    width = ET.SubElement(size, <span class="string">&#x27;width&#x27;</span>)</span><br><span class="line">    width.text = <span class="built_in">str</span>(data[<span class="string">&#x27;imageWidth&#x27;</span>])</span><br><span class="line">    height = ET.SubElement(size, <span class="string">&#x27;height&#x27;</span>)</span><br><span class="line">    height.text = <span class="built_in">str</span>(data[<span class="string">&#x27;imageHeight&#x27;</span>])</span><br><span class="line">    depth = ET.SubElement(size, <span class="string">&#x27;depth&#x27;</span>)</span><br><span class="line">    depth.text = <span class="string">&#x27;3&#x27;</span></span><br><span class="line">  </span><br><span class="line">    <span class="comment"># 添加分割信息</span></span><br><span class="line">    segmented = ET.SubElement(annotation, <span class="string">&#x27;segmented&#x27;</span>)</span><br><span class="line">    segmented.text = <span class="string">&#x27;0&#x27;</span></span><br><span class="line">  </span><br><span class="line">    <span class="comment"># 处理每个标注形状</span></span><br><span class="line">    <span class="keyword">for</span> shape <span class="keyword">in</span> data[<span class="string">&#x27;shapes&#x27;</span>]:</span><br><span class="line">        obj = ET.SubElement(annotation, <span class="string">&#x27;object&#x27;</span>)</span><br><span class="line">  </span><br><span class="line">        <span class="comment"># 添加对象名称</span></span><br><span class="line">        name = ET.SubElement(obj, <span class="string">&#x27;name&#x27;</span>)</span><br><span class="line">        name.text = shape[<span class="string">&#x27;label&#x27;</span>]</span><br><span class="line">  </span><br><span class="line">        <span class="comment"># 添加姿态信息</span></span><br><span class="line">        pose = ET.SubElement(obj, <span class="string">&#x27;pose&#x27;</span>)</span><br><span class="line">        pose.text = <span class="string">&#x27;Unspecified&#x27;</span></span><br><span class="line">  </span><br><span class="line">        <span class="comment"># 添加截断信息</span></span><br><span class="line">        truncated = ET.SubElement(obj, <span class="string">&#x27;truncated&#x27;</span>)</span><br><span class="line">        truncated.text = <span class="string">&#x27;0&#x27;</span></span><br><span class="line">  </span><br><span class="line">        <span class="comment"># 添加难度信息</span></span><br><span class="line">        difficult = ET.SubElement(obj, <span class="string">&#x27;difficult&#x27;</span>)</span><br><span class="line">        difficult.text = <span class="string">&#x27;0&#x27;</span></span><br><span class="line">  </span><br><span class="line">        <span class="comment"># 添加边界框</span></span><br><span class="line">        bndbox = ET.SubElement(obj, <span class="string">&#x27;bndbox&#x27;</span>)</span><br><span class="line">  </span><br><span class="line">        <span class="comment"># 计算边界框坐标</span></span><br><span class="line">        points = shape[<span class="string">&#x27;points&#x27;</span>]</span><br><span class="line">        xmin = ET.SubElement(bndbox, <span class="string">&#x27;xmin&#x27;</span>)</span><br><span class="line">        xmin.text = <span class="built_in">str</span>(<span class="built_in">int</span>(<span class="built_in">min</span>(p[<span class="number">0</span>] <span class="keyword">for</span> p <span class="keyword">in</span> points)))</span><br><span class="line">        ymin = ET.SubElement(bndbox, <span class="string">&#x27;ymin&#x27;</span>)</span><br><span class="line">        ymin.text = <span class="built_in">str</span>(<span class="built_in">int</span>(<span class="built_in">min</span>(p[<span class="number">1</span>] <span class="keyword">for</span> p <span class="keyword">in</span> points)))</span><br><span class="line">        xmax = ET.SubElement(bndbox, <span class="string">&#x27;xmax&#x27;</span>)</span><br><span class="line">        xmax.text = <span class="built_in">str</span>(<span class="built_in">int</span>(<span class="built_in">max</span>(p[<span class="number">0</span>] <span class="keyword">for</span> p <span class="keyword">in</span> points)))</span><br><span class="line">        ymax = ET.SubElement(bndbox, <span class="string">&#x27;ymax&#x27;</span>)</span><br><span class="line">        ymax.text = <span class="built_in">str</span>(<span class="built_in">int</span>(<span class="built_in">max</span>(p[<span class="number">1</span>] <span class="keyword">for</span> p <span class="keyword">in</span> points)))</span><br><span class="line">  </span><br><span class="line">    <span class="comment"># 创建ElementTree对象</span></span><br><span class="line">    tree = ET.ElementTree(annotation)</span><br><span class="line">  </span><br><span class="line">    <span class="comment"># 写入XML文件（不包含XML声明）</span></span><br><span class="line">    xml_filename = os.path.splitext(data[<span class="string">&#x27;imagePath&#x27;</span>])[<span class="number">0</span>] + <span class="string">&#x27;.xml&#x27;</span></span><br><span class="line">    xml_path = os.path.join(xml_dir, xml_filename)</span><br><span class="line">  </span><br><span class="line">    <span class="comment"># 设置缩进并写入文件</span></span><br><span class="line">    ET.indent(tree, space=<span class="string">&quot;  &quot;</span>)</span><br><span class="line">    tree.write(xml_path, encoding=<span class="string">&#x27;utf-8&#x27;</span>, xml_declaration=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">convert_all_json</span>(<span class="params">json_dir, xml_dir</span>):</span><br><span class="line">    <span class="comment"># 确保输出目录存在</span></span><br><span class="line">    os.makedirs(xml_dir, exist_ok=<span class="literal">True</span>)</span><br><span class="line">  </span><br><span class="line">    <span class="comment"># 遍历json目录下所有.json文件</span></span><br><span class="line">    <span class="keyword">for</span> filename <span class="keyword">in</span> os.listdir(json_dir):</span><br><span class="line">        <span class="keyword">if</span> filename.endswith(<span class="string">&#x27;.json&#x27;</span>):</span><br><span class="line">            json_path = os.path.join(json_dir, filename)</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                json_to_xml(json_path, xml_dir)</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&#x27;Converted <span class="subst">&#123;filename&#125;</span> successfully&#x27;</span>)</span><br><span class="line">            <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&#x27;Failed to convert <span class="subst">&#123;filename&#125;</span>: <span class="subst">&#123;<span class="built_in">str</span>(e)&#125;</span>&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="comment"># 设置输入输出目录</span></span><br><span class="line">    input_dir = <span class="string">&#x27;json&#x27;</span></span><br><span class="line">    output_dir = <span class="string">&#x27;xml&#x27;</span></span><br><span class="line">  </span><br><span class="line">    <span class="comment"># 执行转换</span></span><br><span class="line">    convert_all_json(input_dir, output_dir)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>以下是具体流程。</p><p>数据增强，旋转，翻转，裁剪，噪声，提高模型泛化能力，防止过拟合，添加训练数据量</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># zengqiang.py</span></span><br><span class="line"><span class="comment"># 数据增强</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> xml.etree.ElementTree <span class="keyword">as</span> ET</span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> os <span class="keyword">import</span> getcwd</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">import</span> shutil</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> imgaug <span class="keyword">as</span> ia</span><br><span class="line"><span class="keyword">from</span> imgaug <span class="keyword">import</span> augmenters <span class="keyword">as</span> iaa</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ia.seed(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">read_xml_annotation</span>(<span class="params">root, image_id</span>):</span><br><span class="line">    in_file = <span class="built_in">open</span>(os.path.join(root, image_id))</span><br><span class="line">    tree = ET.parse(in_file)</span><br><span class="line">    root = tree.getroot()</span><br><span class="line">    bndboxlist = []</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">object</span> <span class="keyword">in</span> root.findall(<span class="string">&#x27;object&#x27;</span>):  <span class="comment"># 找到root节点下的所有country节点</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">object</span> <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:  <span class="comment"># 添加这个检查</span></span><br><span class="line">            bndbox = <span class="built_in">object</span>.find(<span class="string">&#x27;bndbox&#x27;</span>)  <span class="comment"># 子节点下节点rank的值</span></span><br><span class="line"></span><br><span class="line">            xmin = <span class="built_in">int</span>(bndbox.find(<span class="string">&#x27;xmin&#x27;</span>).text)</span><br><span class="line">            xmax = <span class="built_in">int</span>(bndbox.find(<span class="string">&#x27;xmax&#x27;</span>).text)</span><br><span class="line">            ymin = <span class="built_in">int</span>(bndbox.find(<span class="string">&#x27;ymin&#x27;</span>).text)</span><br><span class="line">            ymax = <span class="built_in">int</span>(bndbox.find(<span class="string">&#x27;ymax&#x27;</span>).text)</span><br><span class="line">            <span class="comment"># print(xmin,ymin,xmax,ymax)</span></span><br><span class="line">            bndboxlist.append([xmin, ymin, xmax, ymax])</span><br><span class="line">            <span class="comment"># print(bndboxlist)</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> bndboxlist:</span><br><span class="line">        <span class="keyword">return</span> []</span><br><span class="line"></span><br><span class="line">    bndbox = root.find(<span class="string">&#x27;object&#x27;</span>).find(<span class="string">&#x27;bndbox&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> bndboxlist</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># (506.0000, 330.0000, 528.0000, 348.0000) -&gt; (520.4747, 381.5080, 540.5596, 398.6603)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">change_xml_annotation</span>(<span class="params">root, image_id, new_target</span>):</span><br><span class="line">    new_xmin = new_target[<span class="number">0</span>]</span><br><span class="line">    new_ymin = new_target[<span class="number">1</span>]</span><br><span class="line">    new_xmax = new_target[<span class="number">2</span>]</span><br><span class="line">    new_ymax = new_target[<span class="number">3</span>]</span><br><span class="line"></span><br><span class="line">    in_file = <span class="built_in">open</span>(os.path.join(root, <span class="built_in">str</span>(image_id) + <span class="string">&#x27;.xml&#x27;</span>))  <span class="comment"># 这里root分别由两个意思</span></span><br><span class="line">    tree = ET.parse(in_file)</span><br><span class="line">    xmlroot = tree.getroot()</span><br><span class="line">    <span class="built_in">object</span> = xmlroot.find(<span class="string">&#x27;object&#x27;</span>)</span><br><span class="line">    bndbox = <span class="built_in">object</span>.find(<span class="string">&#x27;bndbox&#x27;</span>)</span><br><span class="line">    xmin = bndbox.find(<span class="string">&#x27;xmin&#x27;</span>)</span><br><span class="line">    xmin.text = <span class="built_in">str</span>(new_xmin)</span><br><span class="line">    ymin = bndbox.find(<span class="string">&#x27;ymin&#x27;</span>)</span><br><span class="line">    ymin.text = <span class="built_in">str</span>(new_ymin)</span><br><span class="line">    xmax = bndbox.find(<span class="string">&#x27;xmax&#x27;</span>)</span><br><span class="line">    xmax.text = <span class="built_in">str</span>(new_xmax)</span><br><span class="line">    ymax = bndbox.find(<span class="string">&#x27;ymax&#x27;</span>)</span><br><span class="line">    ymax.text = <span class="built_in">str</span>(new_ymax)</span><br><span class="line">    tree.write(os.path.join(root, <span class="built_in">str</span>(<span class="string">&quot;%06d&quot;</span> % (<span class="built_in">str</span>(<span class="built_in">id</span>) + <span class="string">&#x27;.xml&#x27;</span>))))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">change_xml_list_annotation</span>(<span class="params">root, image_id, new_target, saveroot, <span class="built_in">id</span>,img_name</span>):</span><br><span class="line">    in_file = <span class="built_in">open</span>(os.path.join(root, <span class="built_in">str</span>(image_id) + <span class="string">&#x27;.xml&#x27;</span>))  <span class="comment"># 这里root分别由两个意思</span></span><br><span class="line">    tree = ET.parse(in_file)</span><br><span class="line">    elem = tree.find(<span class="string">&#x27;filename&#x27;</span>)</span><br><span class="line">    elem.text = (img_name + <span class="built_in">str</span>(<span class="string">&quot;_%06d&quot;</span> % <span class="built_in">int</span>(<span class="built_in">id</span>)) + <span class="string">&#x27;.jpg&#x27;</span>)</span><br><span class="line">    xmlroot = tree.getroot()</span><br><span class="line">    index = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">object</span> <span class="keyword">in</span> xmlroot.findall(<span class="string">&#x27;object&#x27;</span>):  <span class="comment"># 找到root节点下的所有country节点</span></span><br><span class="line">        bndbox = <span class="built_in">object</span>.find(<span class="string">&#x27;bndbox&#x27;</span>)  <span class="comment"># 子节点下节点rank的值</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># xmin = int(bndbox.find(&#x27;xmin&#x27;).text)</span></span><br><span class="line">        <span class="comment"># xmax = int(bndbox.find(&#x27;xmax&#x27;).text)</span></span><br><span class="line">        <span class="comment"># ymin = int(bndbox.find(&#x27;ymin&#x27;).text)</span></span><br><span class="line">        <span class="comment"># ymax = int(bndbox.find(&#x27;ymax&#x27;).text)</span></span><br><span class="line"></span><br><span class="line">        new_xmin = new_target[index][<span class="number">0</span>]</span><br><span class="line">        new_ymin = new_target[index][<span class="number">1</span>]</span><br><span class="line">        new_xmax = new_target[index][<span class="number">2</span>]</span><br><span class="line">        new_ymax = new_target[index][<span class="number">3</span>]</span><br><span class="line"></span><br><span class="line">        xmin = bndbox.find(<span class="string">&#x27;xmin&#x27;</span>)</span><br><span class="line">        xmin.text = <span class="built_in">str</span>(new_xmin)</span><br><span class="line">        ymin = bndbox.find(<span class="string">&#x27;ymin&#x27;</span>)</span><br><span class="line">        ymin.text = <span class="built_in">str</span>(new_ymin)</span><br><span class="line">        xmax = bndbox.find(<span class="string">&#x27;xmax&#x27;</span>)</span><br><span class="line">        xmax.text = <span class="built_in">str</span>(new_xmax)</span><br><span class="line">        ymax = bndbox.find(<span class="string">&#x27;ymax&#x27;</span>)</span><br><span class="line">        ymax.text = <span class="built_in">str</span>(new_ymax)</span><br><span class="line"></span><br><span class="line">        index = index + <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    tree.write(os.path.join(saveroot, img_name + <span class="built_in">str</span>(<span class="string">&quot;_%06d&quot;</span> % <span class="built_in">int</span>(<span class="built_in">id</span>)) + <span class="string">&#x27;.xml&#x27;</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">mkdir</span>(<span class="params">path</span>):</span><br><span class="line">    <span class="comment"># 去除首位空格</span></span><br><span class="line">    path = path.strip()</span><br><span class="line">    <span class="comment"># 去除尾部 \ 符号</span></span><br><span class="line">    path = path.rstrip(<span class="string">&quot;\\&quot;</span>)</span><br><span class="line">    <span class="comment"># 判断路径是否存在</span></span><br><span class="line">    <span class="comment"># 存在     True</span></span><br><span class="line">    <span class="comment"># 不存在   False</span></span><br><span class="line">    isExists = os.path.exists(path)</span><br><span class="line">    <span class="comment"># 判断结果</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> isExists:</span><br><span class="line">        <span class="comment"># 如果不存在则创建目录</span></span><br><span class="line">        <span class="comment"># 创建目录操作函数</span></span><br><span class="line">        os.makedirs(path)</span><br><span class="line">        <span class="built_in">print</span>(path + <span class="string">&#x27; 创建成功&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="comment"># 如果目录存在则不创建，并提示目录已存在</span></span><br><span class="line">        <span class="built_in">print</span>(path + <span class="string">&#x27; 目录已存在&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line"></span><br><span class="line">    IMG_DIR = <span class="string">&quot;./images&quot;</span>             <span class="comment">### 原始数据集图像的路径</span></span><br><span class="line">    XML_DIR = <span class="string">&quot;./Annotations&quot;</span>              <span class="comment">### 原始xml文件的路径</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># =============================================================================</span></span><br><span class="line"><span class="comment">#     AUG_XML_DIR = &quot;./Annotations&quot;  # 存储增强后的XML文件夹路径</span></span><br><span class="line"><span class="comment"># =============================================================================</span></span><br><span class="line">    AUG_XML_DIR = <span class="string">&quot;./val Enhance/xml&quot;</span>              <span class="comment">### 数据增强后的xml文件的保存路径</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        shutil.rmtree(AUG_XML_DIR)</span><br><span class="line">    <span class="keyword">except</span> FileNotFoundError <span class="keyword">as</span> e:</span><br><span class="line">        a = <span class="number">1</span></span><br><span class="line">    mkdir(AUG_XML_DIR)</span><br><span class="line"></span><br><span class="line"><span class="comment"># =============================================================================</span></span><br><span class="line"><span class="comment">#     AUG_IMG_DIR = &quot;./JPEGImages&quot;  # 存储增强后的影像文件夹路径</span></span><br><span class="line"><span class="comment"># =============================================================================</span></span><br><span class="line">    AUG_IMG_DIR = <span class="string">&quot;./val Enhance/images&quot;</span>  <span class="comment">### 数据增强后图片的保存路径</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        shutil.rmtree(AUG_IMG_DIR)</span><br><span class="line">    <span class="keyword">except</span> FileNotFoundError <span class="keyword">as</span> e:</span><br><span class="line">        a = <span class="number">1</span></span><br><span class="line">    mkdir(AUG_IMG_DIR)</span><br><span class="line"></span><br><span class="line">    AUGLOOP = <span class="number">5</span>  <span class="comment"># 每张影像增强的数量</span></span><br><span class="line"></span><br><span class="line">    boxes_img_aug_list = []</span><br><span class="line">    new_bndbox = []</span><br><span class="line">    new_bndbox_list = []</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line">    <span class="comment"># 影像增强序列配置</span></span><br><span class="line">    seq = iaa.Sequential([</span><br><span class="line">        <span class="comment"># 几何变换增强</span></span><br><span class="line">        iaa.Flipud(<span class="number">0.5</span>),  <span class="comment"># 垂直翻转，50%概率</span></span><br><span class="line">        iaa.Fliplr(<span class="number">0.5</span>),  <span class="comment"># 水平镜像翻转，50%概率</span></span><br><span class="line">  </span><br><span class="line">        <span class="comment"># 颜色空间变换增强</span></span><br><span class="line">        iaa.Multiply((<span class="number">1.2</span>, <span class="number">1.5</span>)),  <span class="comment"># 亮度调整，1.2-1.5倍随机</span></span><br><span class="line">        iaa.AddToHueAndSaturation((-<span class="number">20</span>, <span class="number">20</span>)),  <span class="comment"># 色相和饱和度调整，±20随机值</span></span><br><span class="line">        iaa.LinearContrast((<span class="number">0.8</span>, <span class="number">1.2</span>)),  <span class="comment"># 对比度调整，0.8-1.2倍随机</span></span><br><span class="line">  </span><br><span class="line">        <span class="comment"># 噪声和模糊增强</span></span><br><span class="line">        iaa.GaussianBlur(sigma=(<span class="number">0</span>, <span class="number">3.0</span>)),  <span class="comment"># 高斯模糊，sigma值0-3随机</span></span><br><span class="line">        iaa.AdditiveGaussianNoise(scale=(<span class="number">0</span>, <span class="number">0.05</span>*<span class="number">255</span>)),  <span class="comment"># 高斯噪声，强度0-5%随机</span></span><br><span class="line">  </span><br><span class="line">        <span class="comment"># 仿射变换增强</span></span><br><span class="line">        iaa.Affine(</span><br><span class="line">            translate_px=&#123;<span class="string">&quot;x&quot;</span>: <span class="number">15</span>, <span class="string">&quot;y&quot;</span>: <span class="number">15</span>&#125;,  <span class="comment"># 平移变换，x/y方向各15像素</span></span><br><span class="line">            scale=(<span class="number">0.8</span>, <span class="number">0.95</span>),  <span class="comment"># 缩放变换，0.8-0.95倍随机</span></span><br><span class="line">            rotate=(-<span class="number">30</span>, <span class="number">30</span>)  <span class="comment"># 旋转变换，-30到30度随机</span></span><br><span class="line">        )</span><br><span class="line">    ])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> root, sub_folders, files <span class="keyword">in</span> os.walk(XML_DIR):</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> name <span class="keyword">in</span> files:</span><br><span class="line">            <span class="built_in">print</span>(name)</span><br><span class="line">            bndbox = read_xml_annotation(XML_DIR, name)</span><br><span class="line">            shutil.copy(os.path.join(XML_DIR, name), AUG_XML_DIR)</span><br><span class="line">            shutil.copy(os.path.join(IMG_DIR, name[:-<span class="number">4</span>] + <span class="string">&#x27;.jpg&#x27;</span>), AUG_IMG_DIR)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> epoch <span class="keyword">in</span> <span class="built_in">range</span>(AUGLOOP):</span><br><span class="line">                seq_det = seq.to_deterministic()  <span class="comment"># 保持坐标和图像同步改变，而不是随机</span></span><br><span class="line">                <span class="comment"># 读取图片</span></span><br><span class="line">                img = Image.<span class="built_in">open</span>(os.path.join(IMG_DIR, name[:-<span class="number">4</span>] + <span class="string">&#x27;.jpg&#x27;</span>))</span><br><span class="line">                <span class="comment"># sp = img.size</span></span><br><span class="line">                img = np.asarray(img)</span><br><span class="line">                <span class="comment"># bndbox 坐标增强</span></span><br><span class="line">                <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(bndbox)):</span><br><span class="line">                    bbs = ia.BoundingBoxesOnImage([</span><br><span class="line">                        ia.BoundingBox(x1=bndbox[i][<span class="number">0</span>], y1=bndbox[i][<span class="number">1</span>], x2=bndbox[i][<span class="number">2</span>], y2=bndbox[i][<span class="number">3</span>]),</span><br><span class="line">                    ], shape=img.shape)</span><br><span class="line"></span><br><span class="line">                    bbs_aug = seq_det.augment_bounding_boxes([bbs])[<span class="number">0</span>]</span><br><span class="line">                    boxes_img_aug_list.append(bbs_aug)</span><br><span class="line"></span><br><span class="line">                    <span class="comment"># new_bndbox_list:[[x1,y1,x2,y2],...[],[]]</span></span><br><span class="line">                    n_x1 = <span class="built_in">int</span>(<span class="built_in">max</span>(<span class="number">1</span>, <span class="built_in">min</span>(img.shape[<span class="number">1</span>], bbs_aug.bounding_boxes[<span class="number">0</span>].x1)))</span><br><span class="line">                    n_y1 = <span class="built_in">int</span>(<span class="built_in">max</span>(<span class="number">1</span>, <span class="built_in">min</span>(img.shape[<span class="number">0</span>], bbs_aug.bounding_boxes[<span class="number">0</span>].y1)))</span><br><span class="line">                    n_x2 = <span class="built_in">int</span>(<span class="built_in">max</span>(<span class="number">1</span>, <span class="built_in">min</span>(img.shape[<span class="number">1</span>], bbs_aug.bounding_boxes[<span class="number">0</span>].x2)))</span><br><span class="line">                    n_y2 = <span class="built_in">int</span>(<span class="built_in">max</span>(<span class="number">1</span>, <span class="built_in">min</span>(img.shape[<span class="number">0</span>], bbs_aug.bounding_boxes[<span class="number">0</span>].y2)))</span><br><span class="line">                    <span class="keyword">if</span> n_x1 == <span class="number">1</span> <span class="keyword">and</span> n_x1 == n_x2:</span><br><span class="line">                        n_x2 += <span class="number">1</span></span><br><span class="line">                    <span class="keyword">if</span> n_y1 == <span class="number">1</span> <span class="keyword">and</span> n_y2 == n_y1:</span><br><span class="line">                        n_y2 += <span class="number">1</span></span><br><span class="line">                    <span class="keyword">if</span> n_x1 &gt;= n_x2 <span class="keyword">or</span> n_y1 &gt;= n_y2:</span><br><span class="line">                        <span class="built_in">print</span>(<span class="string">&#x27;error&#x27;</span>, name)</span><br><span class="line">                    new_bndbox_list.append([n_x1, n_y1, n_x2, n_y2])</span><br><span class="line">                <span class="comment"># 存储变化后的图片</span></span><br><span class="line">                image_aug = seq_det.augment_images([img])[<span class="number">0</span>]</span><br><span class="line">                path = os.path.join(AUG_IMG_DIR,</span><br><span class="line">                                    name[:-<span class="number">4</span>] + <span class="built_in">str</span>( <span class="string">&quot;_%06d&quot;</span> % (epoch + <span class="number">1</span>)) + <span class="string">&#x27;.jpg&#x27;</span>)</span><br><span class="line">                image_auged = bbs.draw_on_image(image_aug, thickness=<span class="number">0</span>)</span><br><span class="line">                Image.fromarray(image_auged).save(path)</span><br><span class="line"></span><br><span class="line">                <span class="comment"># 存储变化后的XML</span></span><br><span class="line">                change_xml_list_annotation(XML_DIR, name[:-<span class="number">4</span>], new_bndbox_list, AUG_XML_DIR,</span><br><span class="line">                                           epoch + <span class="number">1</span>,name[:-<span class="number">4</span>])</span><br><span class="line">                <span class="built_in">print</span>( name[:-<span class="number">4</span>] + <span class="built_in">str</span>( <span class="string">&quot;_%06d&quot;</span> % (epoch + <span class="number">1</span>)) + <span class="string">&#x27;.jpg&#x27;</span>)</span><br><span class="line">                new_bndbox_list = []</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>标注得到的VOC格式数据集转为coco数据集</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># xmlTojson.py</span></span><br><span class="line"><span class="comment"># 用这个将xml转化为json格式可以正常的训练</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> xml.etree.ElementTree <span class="keyword">as</span> ET</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line">coco = <span class="built_in">dict</span>()</span><br><span class="line">coco[<span class="string">&#x27;images&#x27;</span>] = []</span><br><span class="line">coco[<span class="string">&#x27;type&#x27;</span>] = <span class="string">&#x27;instances&#x27;</span></span><br><span class="line">coco[<span class="string">&#x27;annotations&#x27;</span>] = []</span><br><span class="line">coco[<span class="string">&#x27;categories&#x27;</span>] = []</span><br><span class="line"></span><br><span class="line">category_set = <span class="built_in">dict</span>()</span><br><span class="line">image_set = <span class="built_in">set</span>()</span><br><span class="line"></span><br><span class="line">category_item_id = <span class="number">0</span></span><br><span class="line"><span class="comment"># image_id = &#x27;ball-&#x27;</span></span><br><span class="line">image_id = <span class="number">0</span></span><br><span class="line">id_num = <span class="number">0</span></span><br><span class="line">annotation_id = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">addCatItem</span>(<span class="params">name</span>):</span><br><span class="line">    <span class="keyword">global</span> category_item_id</span><br><span class="line">    category_item = <span class="built_in">dict</span>()</span><br><span class="line">    category_item[<span class="string">&#x27;supercategory&#x27;</span>] = <span class="string">&#x27;none&#x27;</span></span><br><span class="line">    category_item_id += <span class="number">1</span></span><br><span class="line">    category_item[<span class="string">&#x27;id&#x27;</span>] = category_item_id</span><br><span class="line">    category_item[<span class="string">&#x27;name&#x27;</span>] = name</span><br><span class="line">    coco[<span class="string">&#x27;categories&#x27;</span>].append(category_item)</span><br><span class="line">    category_set[name] = category_item_id</span><br><span class="line">    <span class="keyword">return</span> category_item_id</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">addImgItem</span>(<span class="params">file_name, size</span>):</span><br><span class="line">    <span class="keyword">global</span> image_id, id_num</span><br><span class="line">    <span class="keyword">if</span> file_name <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        <span class="keyword">raise</span> Exception(<span class="string">&#x27;Could not find filename tag in xml file.&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> size[<span class="string">&#x27;width&#x27;</span>] <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        <span class="keyword">raise</span> Exception(<span class="string">&#x27;Could not find width tag in xml file.&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> size[<span class="string">&#x27;height&#x27;</span>] <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        <span class="keyword">raise</span> Exception(<span class="string">&#x27;Could not find height tag in xml file.&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    image_item = <span class="built_in">dict</span>()</span><br><span class="line">    <span class="comment"># temp = str(id_num)</span></span><br><span class="line">    temp = <span class="built_in">int</span>(id_num)</span><br><span class="line">    <span class="comment"># image_item[&#x27;id&#x27;] = image_id + temp</span></span><br><span class="line">    image_item[<span class="string">&#x27;id&#x27;</span>] = temp</span><br><span class="line">    id_num += <span class="number">1</span></span><br><span class="line">    image_item[<span class="string">&#x27;file_name&#x27;</span>] = file_name</span><br><span class="line">    image_item[<span class="string">&#x27;width&#x27;</span>] = size[<span class="string">&#x27;width&#x27;</span>]</span><br><span class="line">    image_item[<span class="string">&#x27;height&#x27;</span>] = size[<span class="string">&#x27;height&#x27;</span>]</span><br><span class="line">    coco[<span class="string">&#x27;images&#x27;</span>].append(image_item)</span><br><span class="line">    image_set.add(file_name)</span><br><span class="line">    <span class="keyword">return</span> image_item[<span class="string">&#x27;id&#x27;</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">addAnnoItem</span>(<span class="params">object_name, image_id, category_id, bbox</span>):</span><br><span class="line">    <span class="keyword">global</span> annotation_id</span><br><span class="line">    annotation_item = <span class="built_in">dict</span>()</span><br><span class="line">    annotation_item[<span class="string">&#x27;segmentation&#x27;</span>] = []</span><br><span class="line">    seg = []</span><br><span class="line">    <span class="comment"># bbox[] is x,y,w,h</span></span><br><span class="line">    <span class="comment"># left_top</span></span><br><span class="line">    seg.append(bbox[<span class="number">0</span>])</span><br><span class="line">    seg.append(bbox[<span class="number">1</span>])</span><br><span class="line">    <span class="comment"># left_bottom</span></span><br><span class="line">    seg.append(bbox[<span class="number">0</span>])</span><br><span class="line">    seg.append(bbox[<span class="number">1</span>] + bbox[<span class="number">3</span>])</span><br><span class="line">    <span class="comment"># right_bottom</span></span><br><span class="line">    seg.append(bbox[<span class="number">0</span>] + bbox[<span class="number">2</span>])</span><br><span class="line">    seg.append(bbox[<span class="number">1</span>] + bbox[<span class="number">3</span>])</span><br><span class="line">    <span class="comment"># right_top</span></span><br><span class="line">    seg.append(bbox[<span class="number">0</span>] + bbox[<span class="number">2</span>])</span><br><span class="line">    seg.append(bbox[<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line">    annotation_item[<span class="string">&#x27;segmentation&#x27;</span>].append(seg)</span><br><span class="line"></span><br><span class="line">    annotation_item[<span class="string">&#x27;area&#x27;</span>] = bbox[<span class="number">2</span>] * bbox[<span class="number">3</span>]</span><br><span class="line">    annotation_item[<span class="string">&#x27;iscrowd&#x27;</span>] = <span class="number">0</span></span><br><span class="line">    annotation_item[<span class="string">&#x27;ignore&#x27;</span>] = <span class="number">0</span></span><br><span class="line">    annotation_item[<span class="string">&#x27;image_id&#x27;</span>] = image_id</span><br><span class="line">    annotation_item[<span class="string">&#x27;bbox&#x27;</span>] = bbox</span><br><span class="line">    annotation_item[<span class="string">&#x27;category_id&#x27;</span>] = category_id</span><br><span class="line">    annotation_id += <span class="number">1</span></span><br><span class="line">    annotation_item[<span class="string">&#x27;id&#x27;</span>] = annotation_id</span><br><span class="line">    coco[<span class="string">&#x27;annotations&#x27;</span>].append(annotation_item)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">parseXmlFiles</span>(<span class="params">xml_path</span>):</span><br><span class="line">    <span class="keyword">for</span> f <span class="keyword">in</span> os.listdir(xml_path):</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> f.endswith(<span class="string">&#x27;.xml&#x27;</span>):</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">        bndbox = <span class="built_in">dict</span>()</span><br><span class="line">        size = <span class="built_in">dict</span>()</span><br><span class="line">        current_image_id = <span class="literal">None</span></span><br><span class="line">        current_category_id = <span class="literal">None</span></span><br><span class="line">        file_name = <span class="literal">None</span></span><br><span class="line">        size[<span class="string">&#x27;width&#x27;</span>] = <span class="literal">None</span></span><br><span class="line">        size[<span class="string">&#x27;height&#x27;</span>] = <span class="literal">None</span></span><br><span class="line">        size[<span class="string">&#x27;depth&#x27;</span>] = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">        xml_file = os.path.join(xml_path, f)</span><br><span class="line">        <span class="built_in">print</span>(xml_file)</span><br><span class="line"></span><br><span class="line">        tree = ET.parse(xml_file)</span><br><span class="line">        root = tree.getroot()</span><br><span class="line">        <span class="keyword">if</span> root.tag != <span class="string">&#x27;annotation&#x27;</span>:</span><br><span class="line">            <span class="keyword">raise</span> Exception(<span class="string">&#x27;pascal voc xml root element should be annotation, rather than &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(root.tag))</span><br><span class="line"></span><br><span class="line">        <span class="comment"># elem is &lt;folder&gt;, &lt;filename&gt;, &lt;size&gt;, &lt;object&gt;</span></span><br><span class="line">        <span class="keyword">for</span> elem <span class="keyword">in</span> root:</span><br><span class="line">            current_parent = elem.tag</span><br><span class="line">            current_sub = <span class="literal">None</span></span><br><span class="line">            object_name = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> elem.tag == <span class="string">&#x27;folder&#x27;</span>:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> elem.tag == <span class="string">&#x27;filename&#x27;</span>:</span><br><span class="line">                file_name = elem.text</span><br><span class="line">                <span class="keyword">if</span> file_name <span class="keyword">in</span> category_set:</span><br><span class="line">                    <span class="keyword">raise</span> Exception(<span class="string">&#x27;file_name duplicated&#x27;</span>)</span><br><span class="line"></span><br><span class="line">            <span class="comment"># add img item only after parse &lt;size&gt; tag</span></span><br><span class="line">            <span class="keyword">elif</span> current_image_id <span class="keyword">is</span> <span class="literal">None</span> <span class="keyword">and</span> file_name <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span> <span class="keyword">and</span> size[<span class="string">&#x27;width&#x27;</span>] <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">                <span class="keyword">if</span> file_name <span class="keyword">not</span> <span class="keyword">in</span> image_set:</span><br><span class="line">                    current_image_id = addImgItem(file_name, size)</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">&#x27;add image with &#123;&#125; and &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(file_name, size))</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="keyword">raise</span> Exception(<span class="string">&#x27;duplicated image: &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(file_name))</span><br><span class="line">                    <span class="comment"># subelem is &lt;width&gt;, &lt;height&gt;, &lt;depth&gt;, &lt;name&gt;, &lt;bndbox&gt;</span></span><br><span class="line">            <span class="keyword">for</span> subelem <span class="keyword">in</span> elem:</span><br><span class="line">                bndbox[<span class="string">&#x27;xmin&#x27;</span>] = <span class="literal">None</span></span><br><span class="line">                bndbox[<span class="string">&#x27;xmax&#x27;</span>] = <span class="literal">None</span></span><br><span class="line">                bndbox[<span class="string">&#x27;ymin&#x27;</span>] = <span class="literal">None</span></span><br><span class="line">                bndbox[<span class="string">&#x27;ymax&#x27;</span>] = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">                current_sub = subelem.tag</span><br><span class="line">                <span class="keyword">if</span> current_parent == <span class="string">&#x27;object&#x27;</span> <span class="keyword">and</span> subelem.tag == <span class="string">&#x27;name&#x27;</span>:</span><br><span class="line">                    object_name = subelem.text</span><br><span class="line">                    <span class="keyword">if</span> object_name <span class="keyword">not</span> <span class="keyword">in</span> category_set:</span><br><span class="line">                        current_category_id = addCatItem(object_name)</span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        current_category_id = category_set[object_name]</span><br><span class="line"></span><br><span class="line">                <span class="keyword">elif</span> current_parent == <span class="string">&#x27;size&#x27;</span>:</span><br><span class="line">                    <span class="keyword">if</span> size[subelem.tag] <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">                        <span class="keyword">raise</span> Exception(<span class="string">&#x27;xml structure broken at size tag.&#x27;</span>)</span><br><span class="line">                    size[subelem.tag] = <span class="built_in">int</span>(subelem.text)</span><br><span class="line"></span><br><span class="line">                <span class="comment"># option is &lt;xmin&gt;, &lt;ymin&gt;, &lt;xmax&gt;, &lt;ymax&gt;, when subelem is &lt;bndbox&gt;</span></span><br><span class="line">                <span class="keyword">for</span> option <span class="keyword">in</span> subelem:</span><br><span class="line">                    <span class="keyword">if</span> current_sub == <span class="string">&#x27;bndbox&#x27;</span>:</span><br><span class="line">                        <span class="keyword">if</span> bndbox[option.tag] <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">                            <span class="keyword">raise</span> Exception(<span class="string">&#x27;xml structure corrupted at bndbox tag.&#x27;</span>)</span><br><span class="line">                    bndbox[option.tag] = <span class="built_in">int</span>(option.text)</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">f&quot;读取到 <span class="subst">&#123;option.tag&#125;</span>: <span class="subst">&#123;bndbox[option.tag]&#125;</span>&quot;</span>)</span><br><span class="line">  </span><br><span class="line">                <span class="keyword">if</span> current_sub == <span class="string">&#x27;bndbox&#x27;</span>:</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">f&quot;xmin: <span class="subst">&#123;bndbox[<span class="string">&#x27;xmin&#x27;</span>]&#125;</span>, ymin: <span class="subst">&#123;bndbox[<span class="string">&#x27;ymin&#x27;</span>]&#125;</span>, xmax: <span class="subst">&#123;bndbox[<span class="string">&#x27;xmax&#x27;</span>]&#125;</span>, ymax: <span class="subst">&#123;bndbox[<span class="string">&#x27;ymax&#x27;</span>]&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line">                <span class="comment"># only after parse the &lt;object&gt; tag</span></span><br><span class="line">                <span class="keyword">if</span> bndbox[<span class="string">&#x27;xmin&#x27;</span>] <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">                    <span class="keyword">if</span> object_name <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">                        <span class="keyword">raise</span> Exception(<span class="string">&#x27;xml structure broken at bndbox tag&#x27;</span>)</span><br><span class="line">                    <span class="keyword">if</span> current_image_id <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">                        <span class="keyword">raise</span> Exception(<span class="string">&#x27;xml structure broken at bndbox tag&#x27;</span>)</span><br><span class="line">                    <span class="keyword">if</span> current_category_id <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">                        <span class="keyword">raise</span> Exception(<span class="string">&#x27;xml structure broken at bndbox tag&#x27;</span>)</span><br><span class="line">                    bbox = []</span><br><span class="line">                    <span class="comment"># x</span></span><br><span class="line">                    bbox.append(bndbox[<span class="string">&#x27;xmin&#x27;</span>])</span><br><span class="line">                    <span class="comment"># y</span></span><br><span class="line">                    bbox.append(bndbox[<span class="string">&#x27;ymin&#x27;</span>])</span><br><span class="line">                    <span class="comment"># w</span></span><br><span class="line">                    width = bndbox[<span class="string">&#x27;xmax&#x27;</span>] - bndbox[<span class="string">&#x27;xmin&#x27;</span>]</span><br><span class="line">                    bbox.append(width)</span><br><span class="line">                    <span class="comment"># h</span></span><br><span class="line">                    height = bndbox[<span class="string">&#x27;ymax&#x27;</span>] - bndbox[<span class="string">&#x27;ymin&#x27;</span>]</span><br><span class="line">                    bbox.append(height)</span><br><span class="line">  </span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">f&quot;width: <span class="subst">&#123;width&#125;</span>, height: <span class="subst">&#123;height&#125;</span>&quot;</span>)</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">f&quot;文件名: <span class="subst">&#123;file_name&#125;</span>, 对象名称: <span class="subst">&#123;object_name&#125;</span>, 计算得到的 bbox: <span class="subst">&#123;bbox&#125;</span>&quot;</span>)</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">&#x27;add annotation with &#123;&#125;,&#123;&#125;,&#123;&#125;,&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(object_name, current_image_id, current_category_id,</span><br><span class="line">                                                                   bbox))</span><br><span class="line">                    addAnnoItem(object_name, current_image_id, current_category_id, bbox)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line"></span><br><span class="line">    xml_path = <span class="string">&quot;./val Enhance/xml&quot;</span>  <span class="comment">## 原始的xml文件路径</span></span><br><span class="line">    json_file = <span class="string">&#x27;./nanodet_train_zengqian.json&#x27;</span>  <span class="comment">## 转后保存.json文件的路径</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment"># xml_path = &quot;./Annotations&quot;  ## 原始的xml文件路径</span></span><br><span class="line">    <span class="comment"># json_file = &#x27;./nanodet_train.json&#x27;  ## 转后保存.json文件的路径</span></span><br><span class="line"></span><br><span class="line">    parseXmlFiles(xml_path)</span><br><span class="line">    json.dump(coco, <span class="built_in">open</span>(json_file, <span class="string">&#x27;w&#x27;</span>))</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>将.xml标签文件转化为一个.json文件，用于coco数据集训练。</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/04_22/image_b048ad7703c2d3e7dfdd2197123cc9ca.png" alt=""></p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/04_22/image_124846923aa4cec3a30c9302048bbfa8.png" alt=""></p><p>查看标注框是否正确，watch.py将展示json中有bbox属性的图片并标注出bbox，以便可视化检查数据标注质量。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># watch.py</span></span><br><span class="line"><span class="comment"># 查看标注框是否正确</span></span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="comment"># 加载 JSON 文件</span></span><br><span class="line"><span class="comment"># nanodet_train.json</span></span><br><span class="line"><span class="comment"># nanodet_train_zengqian.json</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;nanodet_train_zengqian.json&#x27;</span>, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    data = json.load(f)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取图像目录</span></span><br><span class="line">img_dir = <span class="string">&#x27;./val Enhance/images&#x27;</span></span><br><span class="line"><span class="comment"># img_dir = &#x27;./images&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取屏幕大小</span></span><br><span class="line">screen_width = <span class="number">640</span></span><br><span class="line">screen_height = <span class="number">640</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 遍历图像列表</span></span><br><span class="line"><span class="keyword">for</span> image <span class="keyword">in</span> data[<span class="string">&#x27;images&#x27;</span>]:</span><br><span class="line">    <span class="comment"># 获取图像文件名</span></span><br><span class="line">    img_file_name = image[<span class="string">&#x27;file_name&#x27;</span>]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 打开图像文件</span></span><br><span class="line">    img_path = os.path.join(img_dir, img_file_name)</span><br><span class="line">    img = cv2.imread(img_path)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 缩放图像至屏幕大小</span></span><br><span class="line">    scale = <span class="built_in">min</span>(screen_width / img.shape[<span class="number">1</span>], screen_height / img.shape[<span class="number">0</span>])</span><br><span class="line">    new_size = (<span class="built_in">int</span>(img.shape[<span class="number">1</span>] * scale), <span class="built_in">int</span>(img.shape[<span class="number">0</span>] * scale))</span><br><span class="line">    img = cv2.resize(img, new_size)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 获取 annotations 信息</span></span><br><span class="line">    annotations = [anno <span class="keyword">for</span> anno <span class="keyword">in</span> data[<span class="string">&#x27;annotations&#x27;</span>] <span class="keyword">if</span> anno[<span class="string">&#x27;image_id&#x27;</span>] == image[<span class="string">&#x27;id&#x27;</span>]]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 绘制方框</span></span><br><span class="line">    <span class="keyword">for</span> anno <span class="keyword">in</span> annotations:</span><br><span class="line">        bbox = anno[<span class="string">&#x27;bbox&#x27;</span>]</span><br><span class="line">        x1, y1, w, h = bbox</span><br><span class="line">        cv2.rectangle(img, (x1, y1), (x1 + w, y1 + h), (<span class="number">0</span>, <span class="number">255</span>, <span class="number">0</span>), <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 显示图像</span></span><br><span class="line">    cv2.imshow(img_file_name, img)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 等待按键</span></span><br><span class="line">    cv2.waitKey(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 关闭图像窗口</span></span><br><span class="line">    cv2.destroyAllWindows()</span><br></pre></td></tr></table></figure><p>查看数据标注是否正确，以及数据增强后标注是否一同缩放旋转正确对应。</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/04_27/image_ee377cea19d1127978ade531d9210a6b.png" alt=""></p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/04_27/image_d43e3fcbb6be935819b61df4a51fe077.png" alt=""></p><p>分割训练集和测试集，按比例拆分。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># split_coco.py</span></span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">split_coco_data</span>(<span class="params">coco_file, train_ratio=<span class="number">0.8</span>, output_train_file=<span class="string">&quot;train.json&quot;</span>, output_test_file=<span class="string">&quot;test.json&quot;</span></span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    将 COCO 标注文件按照指定的比例分割成训练集和测试集。</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    参数:</span></span><br><span class="line"><span class="string">        coco_file (str): COCO 标注 JSON 文件的路径。</span></span><br><span class="line"><span class="string">        train_ratio (float): 训练集中图像所占的比例 (默认值: 0.8)。</span></span><br><span class="line"><span class="string">        output_train_file (str): 保存训练集 COCO JSON 文件的路径 (默认值: &quot;train.json&quot;)。</span></span><br><span class="line"><span class="string">        output_test_file (str): 保存测试集 COCO JSON 文件的路径 (默认值: &quot;test.json&quot;)。</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(coco_file, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        coco_data = json.load(f)</span><br><span class="line"></span><br><span class="line">    images = coco_data[<span class="string">&#x27;images&#x27;</span>]  <span class="comment"># 获取所有图像信息</span></span><br><span class="line">    annotations = coco_data[<span class="string">&#x27;annotations&#x27;</span>]  <span class="comment"># 获取所有标注信息</span></span><br><span class="line">    categories = coco_data[<span class="string">&#x27;categories&#x27;</span>] <span class="keyword">if</span> <span class="string">&#x27;categories&#x27;</span> <span class="keyword">in</span> coco_data <span class="keyword">else</span> [] <span class="comment"># 获取类别信息，如果不存在则设为空列表</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 随机打乱图像列表，确保分割的随机性</span></span><br><span class="line">    random.shuffle(images)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 计算训练集的大小</span></span><br><span class="line">    train_size = <span class="built_in">int</span>(<span class="built_in">len</span>(images) * train_ratio)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 分割图像列表为训练集和测试集</span></span><br><span class="line">    train_images = images[:train_size]</span><br><span class="line">    test_images = images[train_size:]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 获取训练集和测试集图像的 ID 列表</span></span><br><span class="line">    train_image_ids = [img[<span class="string">&#x27;id&#x27;</span>] <span class="keyword">for</span> img <span class="keyword">in</span> train_images]</span><br><span class="line">    test_image_ids = [img[<span class="string">&#x27;id&#x27;</span>] <span class="keyword">for</span> img <span class="keyword">in</span> test_images]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 根据图像 ID 过滤标注信息，得到训练集和测试集的标注</span></span><br><span class="line">    train_annotations = [ann <span class="keyword">for</span> ann <span class="keyword">in</span> annotations <span class="keyword">if</span> ann[<span class="string">&#x27;image_id&#x27;</span>] <span class="keyword">in</span> train_image_ids]</span><br><span class="line">    test_annotations = [ann <span class="keyword">for</span> ann <span class="keyword">in</span> annotations <span class="keyword">if</span> ann[<span class="string">&#x27;image_id&#x27;</span>] <span class="keyword">in</span> test_image_ids]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 创建训练集 COCO 数据集</span></span><br><span class="line">    train_coco_data = &#123;</span><br><span class="line">        <span class="string">&#x27;images&#x27;</span>: train_images,</span><br><span class="line">        <span class="string">&#x27;annotations&#x27;</span>: train_annotations,</span><br><span class="line">        <span class="string">&#x27;categories&#x27;</span>: categories  <span class="comment"># 包含类别信息</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 创建测试集 COCO 数据集</span></span><br><span class="line">    test_coco_data = &#123;</span><br><span class="line">        <span class="string">&#x27;images&#x27;</span>: test_images,</span><br><span class="line">        <span class="string">&#x27;annotations&#x27;</span>: test_annotations,</span><br><span class="line">        <span class="string">&#x27;categories&#x27;</span>: categories  <span class="comment"># 包含类别信息</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 将训练集 COCO 数据集保存到 JSON 文件</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(output_train_file, <span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        json.dump(train_coco_data, f)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 将测试集 COCO 数据集保存到 JSON 文件</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(output_test_file, <span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        json.dump(test_coco_data, f)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;COCO 数据集分割完成:&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;  - 训练集: <span class="subst">&#123;<span class="built_in">len</span>(train_images)&#125;</span> 张图像, <span class="subst">&#123;<span class="built_in">len</span>(train_annotations)&#125;</span> 个标注 (保存到 <span class="subst">&#123;output_train_file&#125;</span>)&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;  - 测试集: <span class="subst">&#123;<span class="built_in">len</span>(test_images)&#125;</span> 张图像, <span class="subst">&#123;<span class="built_in">len</span>(test_annotations)&#125;</span> 个标注 (保存到 <span class="subst">&#123;output_test_file&#125;</span>)&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    <span class="comment"># 将 &#x27;coco_annotations.json&#x27; 替换为你的 COCO 标注文件的实际路径</span></span><br><span class="line">    coco_annotation_file = <span class="string">&quot;nanodet_train.json&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 你可以根据需要调整 train_ratio (例如，0.7 表示 70% 用于训练，30% 用于测试)</span></span><br><span class="line">    split_coco_data(coco_annotation_file, train_ratio=<span class="number">0.8</span>, output_train_file=<span class="string">&quot;train.json&quot;</span>, output_test_file=<span class="string">&quot;test.json&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>得到2：8的测试训练集</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/04_22/image_3f83fac79fce014064d920e862edef77.png" alt=""></p><p>修改配置文件</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/04_22/image_f31bfc2df8d8a1e1f5010f9ae48904e6.png" alt="原图作者目标检测——使用nanodet训练自己制作的数据集并测试模型，通俗易懂（详细图文教程）nanodet训练自己的模型-CSDN博客"></p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/04_22/image_a0ec75738755bdf3b5686a572738d141.png" alt=""></p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/04_22/image_42341b6952ba0dc378d1537ecce23f9e.png" alt=""></p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/04_22/image_876ac3450d2d1324103d46314c27f217.png" alt=""></p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/04_22/image_e3880b89db68d5e0a4fbd6638e7ab3c1.png" alt=""></p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/04_22/image_96cf0249da0dfe8a0df6eac0a5d150f0.png" alt=""></p><h4 id="模型训练">模型训练</h4><p>使用配置文件进行训练</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python tools/train.py ./config/legacy_v0.x_configs/nanodet-m.yml</span><br></pre></td></tr></table></figure><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/04_22/image_fd1fb6d2d41943dd62af1a38d71fac12.png" alt=""></p><p>待训练完成后模型保存为pth，默认会按照<code>mAP</code>评分保持最佳模型。</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/04_22/image_9b5947506fad781acda79faf9c926240.png" alt=""></p><p>可以用刚刚训练的模型测试一下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python demo/demo.py video --config ./config/nanodet-m.yml --model ./workspace/nanodet_m/model_best/nanodet_model_best.pth --path ./Video/rc.mp4</span><br></pre></td></tr></table></figure><h4 id="恢复中断训练">恢复中断训练</h4><p>如果训练意外中断，可以使用PyTorch Lightning 提供的 checkpoint 功能，只需要更改配置文件,将schedule.resume设置为True即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">schedule:</span><br><span class="line">  resume: True  # 或者 False，取决于你是否要恢复训练</span><br><span class="line">  # 其他 schedule 配置</span><br></pre></td></tr></table></figure><p>重新启动训练<code>python tools/train.py config\nanodet-plus-m-1.5x_416.yml</code></p><p>PyTorch Lightning 会自动检测 <code>model_last.ckpt</code> 文件，并从上次保存的 checkpoint 恢复训练。</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/04_27/image_611d80cbe9d40f3aee9af44120ba8dad.png" alt=""></p><h4 id="TensorBoard">TensorBoard</h4><p><strong>可视化日志</strong><br>TensorBoard 日志保存在您在配置文件中设置的位置。<code>save_dir</code><br>要可视化 tensorboard 日志，请运行：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd &lt;YOUR_SAVE_DIR&gt;</span><br><span class="line">tensorboard --logdir ./</span><br></pre></td></tr></table></figure><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/04_28/b4b3da70890ef603956e37b84b6f530_b4ee8bf99f4f26281f7daf65224277e2.png" alt=""></p><p>观察模型是否收敛：因为仅仅观察损失函数很难判断是否需要停止训练，可观测其性能指标增长趋势逐步调整训练轮次，因为经过数据增强数据集多达5000+，所以此处训练轮次可以适当减少。</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/05_13/image_fd974217b81aaff2a7233aa8a6f4d92e.png" alt=""></p><p>主要观察mAP指标继续训练是否还有增长趋势，若还存在上升趋势可追加训练轮次，直到性能指标趋于平稳，则可认为模型以及拟合。</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/05_13/image_549d752ebe851cea7cc58dd6b8762c2c.png" alt=""></p><p>训练350轮</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/07_07/image_f392c5d85293f096ae68f117d337acf0.png" alt=""></p><h4 id="模型导出">模型导出</h4><p>pth转onnx</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python tools/export_onnx.py --cfg_path ./config/nanodet-plus-m-1.5x_416.yml --model_path workspace/nanodet-plus-m-1.5x_416/model_best/nanodet_model_best.pth </span><br></pre></td></tr></table></figure><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/07_07/image_33a4f85982336acc62d6bae409081eb8.png" alt=""></p><p>onnx转IR</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 示例：将 ONNX 模型转换为 OpenVINO IR</span><br><span class="line">ovc your_model.onnx --output_model openvino_ir</span><br></pre></td></tr></table></figure><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/05_26/image_a8d620810f85bd2c1b717a70463e804a.png" alt=""></p><h4 id="学习率">学习率</h4><p>理论：<a href="https://polar-bear.eu.org/2025/04/26/ji-qi-xue-xi-shen-jing-wang-luo/#%E5%AD%A6%E4%B9%A0%E7%8E%87">机器学习——神经网络 | polar-bear～Blog</a></p><p>不同学习率：</p><ul><li><strong>过大的学习率</strong>：可能导致模型在最优解附近震荡，或者在极端情况下导致模型发散。</li><li><strong>过小的学习率</strong>：虽然能够保证模型最终收敛，但是会大大降低模型训练的速度。有时，它甚至可能导致模型陷入局部最优解。</li></ul><p>观察学习率曲线，此处使用<code>学习率预热</code>（warmup）<code>和学习率衰减</code>（Learning Rate Decay）</p><p>warm-up 是指在训练的初期，逐渐增加学习率的过程，以帮助模型更好地收敛到最优解，逐渐增加学习率，而不是直接使用高学习率再衰减的原因是防止在模型初始时高学习率快速降低损失函数至局部最优导致模型后期学习率衰减无法跳出局部最优寻找全局最优（长难句，个人理解）</p><p><code>ratio: 0.0001  # 预热的起始学习率与 lr 的比率</code>在训练的开始会使用低学习率以实现在训练初期更好地适应数据，提高训练的稳定性和性能。</p><p>Learning Rate Decay则使模型在后期<code>精细调节</code>,<code>防止震荡</code>,<code>避免过拟合</code></p><p>使用一个简单的线性回归案例，持续高学习率确实可以快速收敛，加快模型收敛速度，突破局部最优寻找全局最优，但是到了模型训练后期，应该缓慢降低学习率，否则高学习率会导致模型陷入局部震荡无法正常收敛，如下图。</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/05_13/image_997f08afed042fbce1d0371d9e0741b2.png" alt=""></p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/05_13/image_7baf2a48afc3a7df4fee6b8b018e701b.png" alt=""></p><p>（在高学习率下线性回归模型损失值会大幅波动。 这表示学习速率过高，模型训练永远不会收敛。）</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/05_13/image_fc9d8958b385df7f324942831007ad23.png" alt=""></p><p>余弦退火衰减 CosineAnnealingLR:</p><p>当越来越接近Loss值的全局最小值时，学习率应该变得更小来使得模型尽可能接近这一点，而余弦退火（Cosine annealing）可以通过余弦函数来降低学习率。余弦函数中随着x的增加余弦值首先缓慢下降，然后加速下降，再次缓慢下降。这种下降模式能和学习率配合，以一种十分有效的计算方式来产生很好的效果。</p><p>神经网络在刚开始训练时，并非如同理想的情况一样，只需要确定一个方向即可。模型参数在初始化时，是非常不稳定的，因此在刚开始时需要选用小的学习率。</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/05_13/image_d44662a47557f69a71c9c396b9b9b014.png" alt=""></p><p>(图片来自文2)</p><p><a href="https://blog.csdn.net/weixin_35848967/article/details/108493217">学习率衰减之余弦退火(CosineAnnealing）-CSDN博客</a></p><p><a href="https://blog.csdn.net/weixin_42392454/article/details/127766771">狗都会用的余弦退火（CosineAnnealingLR）学习率调节算法讲解-CSDN博客</a></p><p><a href="https://zhuanlan.zhihu.com/p/261134624">pytorch的余弦退火学习率 - 知乎</a></p><h3 id="Openvino部署">Openvino部署</h3><h4 id="Openvino安装">Openvino安装</h4><p>OpenVINOTM安装分为完整版安装与不完整版(Runtime)安装。</p><p>完整版安装会安装所有部件，包括模型优化器和推理部署套件运行工具(Runtime)，目前该方式支持PIP安装方式，因此建议采用PIP安装在虚拟环境中，防止安装出错照成电脑环境出现问题。该安装方式至此Python、C++同时使用，由于安装路径较长，对C++使用不太方便，因此该安装方式最好使用Python编程。</p><p>非完整版安装主要安装编译环境(Runtime)，安装比较简单，且一般会安装到根目录下，方便使用，因此如果不使用模型优化且情况下，或者使用C++编译环境的话，建议选用此方式。</p><p>openvino推荐使用存档直接安装或者conda安装</p><p>ubuntu：Ubuntu 24.04.2 LTS</p><p>openvino：2025.1</p><h4 id="直接安装">直接安装</h4><p><a href="https://docs.openvino.ai/2025/get-started/install-openvino.html?PACKAGE=OPENVINO_BASE&amp;VERSION=v_2025_1_0&amp;OP_SYSTEM=LINUX&amp;DISTRIBUTION=ARCHIVE">https://docs.openvino.ai/2025/get-started/install-openvino.html?PACKAGE=OPENVINO_BASE&amp;VERSION=v_2025_1_0&amp;OP_SYSTEM=LINUX&amp;DISTRIBUTION=ARCHIVE</a></p><p>前往官网下载对应版本</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/05_26/image_1e104b83793d85d1113fb3c0250d7b87.png" alt=""></p><p>在/opt下创建文件夹</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir /opt/intel</span><br></pre></td></tr></table></figure><p>解压后移动到/opt/intel</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -xf openvino_2025.0.0.tgz</span><br><span class="line">sudo mv openvino_toolkit_ubuntu22_2025 /opt/intel/openvino_2025.0.0</span><br></pre></td></tr></table></figure><p>可以创建软链接，方便路径。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /opt/intel</span><br><span class="line">sudo ln -s openvino_2025.1.0 openvino_2025</span><br></pre></td></tr></table></figure><p>安装openvino环境依赖</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /opt/intel/openvino_2025.1.0</span><br><span class="line">sudo -E ./install_dependencies/install_openvino_dependencies.sh</span><br></pre></td></tr></table></figure><p>配置环境变量</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.bashrc</span><br></pre></td></tr></table></figure><p>将脚本路径添加进去，这样每次启动终端都会加载openvino</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">source /opt/intel/openvino_2025/setupvars.sh</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/05_26/image_9e114ca70c22f68e1502ba247beddf33.png" alt=""></p><h4 id="conda-v2">conda</h4><p><a href="https://www.anaconda.com/download/success">https://www.anaconda.com/download/success</a></p><p>下载conda安装脚本</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/05_26/image_0a5757c253e705ba3443eeea942110f9.png" alt=""></p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/05_26/image_eabff0f73ea17fa23bb257ed5c2e78c4.png" alt=""></p><p>一路yes即可</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/05_26/image_a90713cbd3cd574ccc99d77e14ab7909.png" alt=""></p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/05_26/image_8eee5eacc8186c972619bb8f53ee1772.png" alt=""></p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/05_26/image_12374777e2ddd287953263653fd3fecd.png" alt=""></p><p>完成安装，刷新一下终端</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source ~/.bashrc</span><br></pre></td></tr></table></figure><p>输入</p><p>conda</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/05_26/image_d52e8f059ef1e60ce28099f5a95eda20.png" alt=""></p><p>安装完成后最好升级一下conda</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda update -n base -c defaults conda</span><br></pre></td></tr></table></figure><p>创建虚拟环境</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda create --name py310 python=3.10</span><br></pre></td></tr></table></figure><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/05_26/image_99a32e7b486a6ea81785320fd1d041b8.png" alt=""></p><p>进入虚拟环境</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda activate py310</span><br></pre></td></tr></table></figure><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/05_26/image_604db87a2add371ceea9c0c6fb7e3ee5.png" alt=""></p><p>将以下命令行添加到 ~/.bashrc ，只需要在终端输入 py310 就直接进入了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alias py310=&#x27;source activate py310&#x27;</span><br></pre></td></tr></table></figure><p>使用conda安装openvino</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">conda update --all</span><br><span class="line">conda install -c conda-forge openvino=2025.1.0</span><br></pre></td></tr></table></figure><p>openvino安装位置位于</p><p>/home/rick/anaconda3/envs/py310/include</p><p>/home/rick/anaconda3/envs/py310/lib</p><h4 id="测试openvino安装状态">测试openvino安装状态</h4><p>新建main.cpp</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;openvino/openvino.hpp&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">// 初始化OpenVINO核心</span></span><br><span class="line">        ov::Core core;</span><br><span class="line">  </span><br><span class="line">        <span class="comment">// 打印OpenVINO版本信息</span></span><br><span class="line">        std::cout &lt;&lt; <span class="string">&quot;OpenVINO version: &quot;</span> &lt;&lt; ov::<span class="built_in">get_openvino_version</span>() &lt;&lt; std::endl;</span><br><span class="line">  </span><br><span class="line">        <span class="comment">// 获取可用设备列表</span></span><br><span class="line">        std::vector&lt;std::string&gt; available_devices = core.<span class="built_in">get_available_devices</span>();</span><br><span class="line">        std::cout &lt;&lt; <span class="string">&quot;Available devices: &quot;</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">const</span> <span class="keyword">auto</span>&amp; device : available_devices) &#123;</span><br><span class="line">            std::cout &lt;&lt; device &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        std::cout &lt;&lt; std::endl;</span><br><span class="line">  </span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125; <span class="built_in">catch</span> (<span class="type">const</span> std::exception&amp; ex) &#123;</span><br><span class="line">        std::cerr &lt;&lt; <span class="string">&quot;Exception: &quot;</span> &lt;&lt; ex.<span class="built_in">what</span>() &lt;&lt; std::endl;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>新建CMakeLists.txt</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">cmake_minimum_required(VERSION 3.5)</span><br><span class="line">project(openvino_test)</span><br><span class="line"></span><br><span class="line">set(CMAKE_CXX_STANDARD 17)</span><br><span class="line">set(CMAKE_CXX_STANDARD_REQUIRED ON)</span><br><span class="line"></span><br><span class="line"># 设置OpenVINO路径</span><br><span class="line">set(OpenVINO_DIR &quot;/opt/intel/openvino_2025/runtime/include&quot;)</span><br><span class="line"></span><br><span class="line"># 查找OpenVINO包</span><br><span class="line">find_package(OpenVINO REQUIRED)</span><br><span class="line"></span><br><span class="line"># 添加可执行文件</span><br><span class="line">add_executable(openvino_test main.cpp)</span><br><span class="line"></span><br><span class="line"># 链接OpenVINO库</span><br><span class="line">target_link_libraries(openvino_test PRIVATE openvino::runtime)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>执行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p build &amp;&amp; cd build &amp;&amp; cmake .. &amp;&amp; make</span><br></pre></td></tr></table></figure><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/05_26/image_68470ac041338aaf80bb0aeac2f40aac.png" alt=""></p><p><code>ctrl</code>+<code>shift</code>+<code>p</code>或<code>F1</code>打开快捷指令输入</p><blockquote><p>edit configurations (UI)</p></blockquote><p>找到include路径，将openvino路径填入，防止code找不到库，导致include报红。</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/05_26/image_7eef4f4ebda58de14b358f0fdc109c64.png" alt=""></p><p>选择调试配置，使用Cmake</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/05_26/image_d6874c9fefd085d1c9c3b1eefb52bd90.png" alt=""></p><p>点击cmake插件底部的运行即可使用cmakelist完成编译运行。</p><h4 id="安装opencv">安装opencv</h4><p>直接安装在系统目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install libopencv-dev</span><br></pre></td></tr></table></figure><p>在cmakelist.txt可以使用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 查找依赖包</span><br><span class="line">find_package(OpenCV REQUIRED)</span><br></pre></td></tr></table></figure><p>自动搜索到。</p><h4 id="安装海康MVS">安装海康MVS</h4><p>到下载页面下载：<a href="https://www.hikrobotics.com/cn/machinevision/service/download/?module=0">https://www.hikrobotics.com/cn/machinevision/service/download/?module=0</a></p><p>下载 机器视觉工业相机客户端MVS V3.0.1 (Linux)</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/06_04/image_2ee0aabe66d16ff2545dd79368114319.png" alt=""></p><p>下载的压缩包中含有不同架构的安装包</p><p>安装</p><p>sudo dpkg -i MVS-3.0.1_x86_64_20241128.deb</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/06_04/image_a2776772ed79e258e2338981e1ff8714.png" alt=""></p><p>安装在/opt/MVS 目录下</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/06_07/image_d744d43f7cbc8acc94e7e0ea62ea2600.png" alt=""></p><p>运行<code>/opt/MVS/bin/MVS.sh</code>测试是否安装成功。</p><h4 id="摄像头频闪">摄像头频闪</h4><p>若遇到频闪，则调整曝光时间避开场地光源频率</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/06_19/image_39014a085edb85a765b1a4e36ef81d4f.png" alt=""></p><h4 id="boost安装">boost安装</h4><p>前往官网下载：<a href="https://www.boost.org/releases/1.74.0/">https://www.boost.org/releases/1.74.0/</a></p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/06_30/image_542305a436d558842c0bfed15dd386c1.png" alt=""></p><p>下载后解压到任意路径</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">mv</span> ./boost_1_74_0 /opt/boost_1_74_0</span><br></pre></td></tr></table></figure><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/06_30/image_7bfc3f7e9023c22ad7e9f6da640bce12.png" alt=""></p><p>执行安装脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./bootstrap.sh </span><br></pre></td></tr></table></figure><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/06_30/image_23200a47690e11c0ef82e91a32e90fa1.png" alt=""></p><p>运行构建命令：./b2</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/06_30/image_ef25561c023294ef0e45f6dc7c4654f1.png" alt=""></p><p>安装库文件：sudo ./b2 install</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/06_30/image_62ea0df3154cdfc0cd3549eea59bb06d.png" alt=""></p>]]></content>
    
    
    <summary type="html">NANODET训练
github：RangiLyu/nanodet: NanoDet-Plus⚡Super fast and lightweight anchor-free
object detection model. 🔥Only 980 KB(int8) / 1.8MB (fp16) and run 97FPS on
cellphone🔥 [https://github.com/RangiLyu/nanodet]

CPU</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>在Docker中安装Postgresql</title>
    <link href="https://polar-bear.eu.org/2025/04/10/zai-docker-zhong-an-zhuang-postgresql/"/>
    <id>https://polar-bear.eu.org/2025/04/10/zai-docker-zhong-an-zhuang-postgresql/</id>
    <published>2025-04-10T00:40:58.210Z</published>
    <updated>2025-04-10T00:45:35.254Z</updated>
    
    <content type="html"><![CDATA[<h2 id="在Docker中安装Postgresql">在Docker中安装Postgresql</h2><p>有个服务挂在supabase上长期未用，然后发现已经过期，只保留备份文件，遂本地部署。</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/04_10/image_a30ab79168c2d44c4969ce650410b819.png" alt=""></p><h3 id="拉取镜像">拉取镜像</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull postgres</span><br></pre></td></tr></table></figure><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/04_10/image_9be89cf7b2f9b74454ce05d4bb6ea579.png" alt=""></p><h3 id="创建本地卷">创建本地卷</h3><p>数据卷可以在<strong>容器之间共享和重用</strong>， 默认会一直存在，即使容器被删除（docker volume inspect pgdata可查看数据卷的本地位置，验证持久数据目录）你也不想数据库和容器一起消失吧</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker volume create pgdata</span><br><span class="line"></span><br><span class="line">docker volume inspect pgdata</span><br></pre></td></tr></table></figure><p>可以看到输出本地卷信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">root@rick:/home/rick<span class="comment"># docker volume inspect pgdata</span></span><br><span class="line">[</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">&quot;CreatedAt&quot;</span>: <span class="string">&quot;2025-04-10T08:46:11Z&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Driver&quot;</span>: <span class="string">&quot;local&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Labels&quot;</span>: null,</span><br><span class="line">        <span class="string">&quot;Mountpoint&quot;</span>: <span class="string">&quot;/var/snap/docker/common/var-lib-docker/volumes/pgdata/_data&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Name&quot;</span>: <span class="string">&quot;pgdata&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Options&quot;</span>: null,</span><br><span class="line">        <span class="string">&quot;Scope&quot;</span>: <span class="string">&quot;local&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">]</span><br><span class="line">root@rick:/home/rick<span class="comment">#</span></span><br></pre></td></tr></table></figure><h3 id="启动容器，使用持久数据存储启动-PostgreSQL-容器">启动容器，使用持久数据存储启动 PostgreSQL 容器</h3><p>启动时，需要将刚上个步骤创建的卷<code>pgdata</code>挂载到容器的<code>/var/snap/docker/common/var-lib-docker/volumes/pgdata/_data</code>目录。</p><ul><li><strong>run</strong> ：创建并运行一个容器；</li><li><strong>–name</strong> ：指定容器名称。（容器名称 自己设置）</li><li><strong>-e POSTGRES_PASSWORD</strong>=password，设置环境变量，指定数据库的登录口令为password（password 自己设置）</li><li><strong>-p</strong> ：指定宿主机和 Docker 容器端口映射，冒号前为宿主机端口号，另一个是容器端口号。（Docker的容器默认情况下只能由本地主机访问，即A主机上的容器不能被B主机访问，所以要做端口映射）（端口号 自己设置）</li><li><strong>-d postgres</strong>：指定使用postgres作为镜像</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --name postgres -e POSTGRES_PASSWORD=123456 -p 5040:5040 -v pgdata:/var/snap/docker/common/var-lib-docker/volumes/pgdata/_data -d postgres</span><br></pre></td></tr></table></figure><h3 id="连接数据库">连接数据库</h3><p><strong>从容器连接</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it postgres /bin/bash</span><br></pre></td></tr></table></figure><p>切换用户</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su postgres</span><br></pre></td></tr></table></figure><p>连接</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">psql</span><br></pre></td></tr></table></figure><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/04_10/image_586ae9978db1ce6491f3609f4fe0148f.png" alt=""></p><p><strong>从主机连接</strong></p><p>首先安装客户端<code>sudo apt install postgresql-client</code></p><p>显示容器ip地址<code>docker inspect -f '&#123;&#123;range .NetworkSettings.Networks&#125;&#125;&#123;&#123;.IPAddress&#125;&#125;&#123;&#123;end&#125;&#125;' 容器ID</code></p><p>连接容器：<code>psql -U postgres -h 172.17.0.3</code></p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/04_10/image_e3b34b8ab7594b5d0ba42d64b71aa4bc.png" alt=""></p><p>恢复备份文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">psql -U postgres -h 172.17.0.3 -f db_cluster-28-10-2024@15-17-45.backup</span><br></pre></td></tr></table></figure><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/04_10/image_221fe96590152a17d020a323191bc83d.png" alt=""><br><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/04_10/image_470c09e2a178eb688829362d6db9a28e.png" alt=""></p>]]></content>
    
    
    <summary type="html">在DOCKER中安装POSTGRESQL
有个服务挂在supabase上长期未用，然后发现已经过期，只保留备份文件，遂本地部署。

[https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/04_10/image_a30ab79168c2d44c4969ce650410b819.png]

拉取镜像</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>永久免费LinuxONE云服务器</title>
    <link href="https://polar-bear.eu.org/2025/02/22/yong-jiu-mian-fei-linuxone-yun-fu-wu-qi/"/>
    <id>https://polar-bear.eu.org/2025/02/22/yong-jiu-mian-fei-linuxone-yun-fu-wu-qi/</id>
    <published>2025-02-22T22:11:01.284Z</published>
    <updated>2025-02-22T22:32:48.153Z</updated>
    
    <content type="html"><![CDATA[<h2 id="永久免费LinuxONE云服务器">永久免费LinuxONE云服务器</h2><p>无需信用卡，120天免费续费，注册的时候不要挂梯子，不能安装宝塔不能挂梯，2核4G,</p><p>延迟高，但是带宽高</p><p>LinuxONE官网：<a href="https://linuxone.cloud.marist.edu/#/login">https://linuxone.cloud.marist.edu/#/login</a></p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/02_23/image_2ce79c75695f9806c3955d967a4b904d.png" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/02_23/image_2ce79c75695f9806c3955d967a4b904d.png"></p><p>前往官网注册，建议使用QQ邮箱，选择国家：美国，最后申请原因：I want to learn Linux</p><p>稍后会发送邮件到邮箱，前往授权后即可登陆。</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/02_23/image_a77f66029e9b21fe2575d8f3e23f07d3.png" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/02_23/image_a77f66029e9b21fe2575d8f3e23f07d3.png"></p><p>进入主页，随后创建服务器</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/02_23/image_c5c9eadfc0b1be1eb2cbc00e2521a182.png" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/02_23/image_c5c9eadfc0b1be1eb2cbc00e2521a182.png">名称随意，选择系统，建议Ubuntu</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/02_23/image_4310ea7311c704aadc0c08f5f5ec69eb.png" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/02_23/image_4310ea7311c704aadc0c08f5f5ec69eb.png">选择设备配置，只有一个可选，创建SSH密钥，用于建立SSH连接，随后创建即可。</p><p>等待数分钟，直到服务器状态变为active</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/02_23/image_3bfcdc025fcf3cc36477638603196a41.png" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/02_23/image_3bfcdc025fcf3cc36477638603196a41.png">使用ssh连接用户名为Linux User对应，默认应该是linux1，ip即为所给ip，端口默认22</p><h2 id="连接">连接</h2><p>使用SSH软件连接</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/02_23/image_e943909d77e58497e044976b982db1b4.png" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/02_23/image_e943909d77e58497e044976b982db1b4.png"></p><p>使用刚才创建的私钥连接即可</p><p>或者ssh linux1@*. * . * . * -i /win/sshkey</p><h2 id="切换root用户">切换root用户</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo passwd root</span><br><span class="line"></span><br><span class="line">su </span><br></pre></td></tr></table></figure><h2 id="安装1panel">安装1panel</h2><p>该服务器因为不能安装宝塔，故可使用1panel</p><p><strong>curl -sSL https</strong>:<strong><a href="//resource.fit2cloud.com/1panel/package/quick">//resource.fit2cloud.com/1panel/package/quick</a>_start.sh -o quick_start.sh &amp;&amp; sudo bash quick_start.sh</strong></p><h2 id="开放端口">开放端口</h2><p>所有端口</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">iptables -P INPUT ACCEPT</span><br><span class="line">iptables -P FORWARD ACCEPT</span><br><span class="line">iptables -P OUTPUT ACCEPT</span><br><span class="line">iptables -F</span><br></pre></td></tr></table></figure><p>开放后建议安装启用ufw防火墙</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo ufw allow 22/tcp</span><br><span class="line">sudo ufw <span class="built_in">enable</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">永久免费LINUXONE云服务器
无需信用卡，120天免费续费，注册的时候不要挂梯子，不能安装宝塔不能挂梯，2核4G,

延迟高，但是带宽高

LinuxONE官网：https://linuxone.cloud.marist.edu/#/login</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Cloudflare Worker自建Docker代理加速</title>
    <link href="https://polar-bear.eu.org/2025/01/22/cloudflare-worker-zi-jian-docker-dai-li-jia-su/"/>
    <id>https://polar-bear.eu.org/2025/01/22/cloudflare-worker-zi-jian-docker-dai-li-jia-su/</id>
    <published>2025-01-22T04:48:31.815Z</published>
    <updated>2025-08-12T01:20:11.096Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Cloudflare-Worker自建Docker代理加速">Cloudflare Worker自建Docker代理加速</h2><p>2025/08/12 更新</p><p>过去使用的Docker代理已经失效，会出现Missing x-amz-content-sha256错误，现在使用<a href="https://github.com/cmliu/CF-Workers-docker.io">cmliu/CF-Workers-docker.io: 这个项目是一个基于 Cloudflare Workers 的 Docker 镜像代理工具。它能够中转对 Docker 官方镜像仓库的请求，解决一些访问限制和加速访问的问题。</a></p><hr><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/08_12/image_59c53977b9db9a9caa4f66e8280965a1.png" alt=""></p><p><a href="https://github.com/cmliu/CF-Workers-docker.io">cmliu/CF-Workers-docker.io: 这个项目是一个基于 Cloudflare Workers 的 Docker 镜像代理工具。它能够中转对 Docker 官方镜像仓库的请求，解决一些访问限制和加速访问的问题。</a></p><blockquote><p>[!WARNING]<br>根据 <a href="https://www.cloudflare.com/zh-cn/terms/">Cloudflare 协议</a> 中，2.2.1 第 (j) use the Services to provide a virtual private network or other similar proxy services.</p><p>使用本服务可能存在被 Cloudflare 封号的潜在风险，请自行斟酌使用风险。</p><p>如果你选择了“根据主机名选择对应的上游地址”方式部署，你可能会:</p><p>被 Netcraft 扫描到，收到警告邮件</p><p>被 Netcraft 同步到 Google Safe Browsing 标记为钓鱼网站</p><p>被 Netcraft 投诉到 Cloudflare 标记为钓鱼网站, 无法正常 pull 镜像</p><p>收到律师函</p></blockquote><p>打开Cloudflare的Worker复制 <a href="https://github.com/cmliu/CF-Workers-docker.io/blob/main/_worker.js">_worker.js</a> 代码，<code>保存并部署</code>即可</p><p>填写到worker的js文件里面，在标记的地方更改自己的域名，然后部署</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/01_22/image_581fbebf9e73986e7b204ba577df8f16.png" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/01_22/image_581fbebf9e73986e7b204ba577df8f16.png"></p><p>并且在worker的设置里面添加自定义的域名</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/01_22/image_08d1880045eea3f28a4e1a0a0d0f5efb.png" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/01_22/image_08d1880045eea3f28a4e1a0a0d0f5efb.png"></p><p>直接访问域名可以直接搜索Docker仓库</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/08_12/image_0e5d10cf5a4339af616bc134fb844608.png" alt=""></p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/08_12/image_6eb34ae8bb909489ddd372121256502e.png" alt=""></p><p>使用代理，官方镜像路径前面加域名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker pull xxxxx.com/mysql/mysql-server</span><br><span class="line">docker pull 自定义域名/+docker包名</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">CLOUDFLARE WORKER自建DOCKER代理加速
2025/08/12 更新

过去使用的Docker代理已经失效，会出现Missing x-amz-content-sha256错误，现在使用
cmliu/CF-Workers-docker.io: 这个项目是一个基于 Cloudflare Workers 的 Docker 镜像代理工具。它能够中转对
Docker 官方镜 [https://github.com/cmliu/CF-Workers-docker.io]</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Gemini中转API</title>
    <link href="https://polar-bear.eu.org/2025/01/21/gemini-zhong-zhuan-api/"/>
    <id>https://polar-bear.eu.org/2025/01/21/gemini-zhong-zhuan-api/</id>
    <published>2025-01-21T19:36:25.936Z</published>
    <updated>2025-01-21T19:37:08.640Z</updated>
    
    <content type="html"><![CDATA[<p>Gemini 转OpenAI API格式</p><p><a href="https://github.com/PublicAffairs/openai-gemini">GitHub - PublicAffairs/openai-gemini：Gemini ➜ OpenAI API 代理。无服务器！</a></p><p>选择部署到 Cloudflare</p><p>填写帐户 ID和API 令牌</p><p>创建令牌</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/01_22/image_5bf52aa16d537ce3adee50f2790fc01d.png" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/01_22/image_5bf52aa16d537ce3adee50f2790fc01d.png"></p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/01_22/image_838ff6b4bc0693271bdad844b12cd73a.png" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/01_22/image_838ff6b4bc0693271bdad844b12cd73a.png"></p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/01_22/image_c9772594d9fde2f711d667b7815ca61b.png" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/01_22/image_c9772594d9fde2f711d667b7815ca61b.png"></p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/01_22/image_e79bd60f237d0a11fe07aec6cfd42aeb.png" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/01_22/image_e79bd60f237d0a11fe07aec6cfd42aeb.png"></p><p>填写帐户 ID和API 令牌</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/01_22/image_0e3245451a5d133b41a3c04f3b19e5d7.png" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/01_22/image_0e3245451a5d133b41a3c04f3b19e5d7.png"></p><p>fork到自己的储存库并开启Github action功能</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/01_22/image_e6597f005cfa381b83274109599931a5.png" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/01_22/image_e6597f005cfa381b83274109599931a5.png"></p><p>完成</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/01_22/image_9e1894c0f73a7d5980e5852e999cb36f.png" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/01_22/image_9e1894c0f73a7d5980e5852e999cb36f.png"></p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/01_22/image_ce63eae69a071ff271886200b733aeb9.png" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/01_22/image_ce63eae69a071ff271886200b733aeb9.png"></p><p>完成后进入到cloudflare 的Worker页面</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/01_22/image_20572f92e813c99565556a29e5dff5e6.png" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/01_22/image_20572f92e813c99565556a29e5dff5e6.png"></p><p>找到刚刚创建的gemini</p><p>在设置中为其添加一个域名</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/01_22/image_22a58c37e0f588d0f69113636e0d3bd3.png" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/01_22/image_22a58c37e0f588d0f69113636e0d3bd3.png"></p><p>##Gemini API申请</p><p>现在中转服务已经部署，接下来是Gemini API申请: <a href="https://aistudio.google.com/">https://aistudio.google.com/</a></p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/01_22/image_c7683203cc67aa5b0cda54417e4befcb.png" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/01_22/image_c7683203cc67aa5b0cda54417e4befcb.png"></p><p>列出可用模型</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/01_22/image_21c448744a9da42af16bf6441d75060a.png" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/01_22/image_21c448744a9da42af16bf6441d75060a.png"></p>]]></content>
    
    
    <summary type="html">Gemini 转OpenAI API格式

GitHub - PublicAffairs/openai-gemini：Gemini ➜ OpenAI API 代理。无服务器！
[https://github.com/PublicAffairs/openai-gemini]

选择部署到 Cloudflare

填写帐户 ID和API 令牌

创建令牌</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>PVE安装Home Assistant</title>
    <link href="https://polar-bear.eu.org/2025/01/07/pve-an-zhuang-home-assistant/"/>
    <id>https://polar-bear.eu.org/2025/01/07/pve-an-zhuang-home-assistant/</id>
    <published>2025-01-07T23:34:05.254Z</published>
    <updated>2025-01-07T23:40:44.104Z</updated>
    
    <content type="html"><![CDATA[<h2 id="PVE安装Home-Assistant">PVE安装Home Assistant</h2><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/01_08/image_75d390aebb9b1249909c3ef63b0fe04c.png" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/01_08/image_75d390aebb9b1249909c3ef63b0fe04c.png"></p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/01_08/image_2c515e1a0530a7fa7674bf2820a719c0.png" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/01_08/image_2c515e1a0530a7fa7674bf2820a719c0.png"></p><p>接下来默认即可</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/01_08/image_54b8d1a75ee12d62a3edcc3a25bc8a02.png" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/01_08/image_54b8d1a75ee12d62a3edcc3a25bc8a02.png"></p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/01_08/image_d0dd9e16773cc0931662ec69c2666ad1.png" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/01_08/image_d0dd9e16773cc0931662ec69c2666ad1.png"></p><p>类型选host</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/01_08/image_314931e3007e0e0b9fb2795e3d071c47.png" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/01_08/image_314931e3007e0e0b9fb2795e3d071c47.png"></p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/01_08/image_8dc4a644a24370b10707d1d5402e6300.png" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/01_08/image_8dc4a644a24370b10707d1d5402e6300.png"></p><p>半虚拟化、E1000、直通，感觉半虚拟化和直通差不多</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/01_08/image_186b2ab757f6573d837057ee6dc0adce.png" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/01_08/image_186b2ab757f6573d837057ee6dc0adce.png"></p><p>分离并删除硬盘</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/01_08/image_c8aeb7687f675424c783381599f94e26.png" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/01_08/image_c8aeb7687f675424c783381599f94e26.png"></p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/01_08/image_d4f1f17df7cf7a9741c95bbaa6352f78.png" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/01_08/image_d4f1f17df7cf7a9741c95bbaa6352f78.png"></p><p>调整BIOS为UEFI模式，这个是HassOS要求的</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/01_08/image_88f3740c446748c903601ebae9bc580f.png" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/01_08/image_88f3740c446748c903601ebae9bc580f.png"></p><p>下载HA虚拟机文件<a href="https://www.home-assistant.io/installation/alternative">替代方案 - Home Assistant</a></p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/01_08/image_b376524d2b7bca1fc0f3a5d0c85afb45.png" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/01_08/image_b376524d2b7bca1fc0f3a5d0c85afb45.png"></p><p>下载解压得到qcow2文件传到PVE里面</p><p>连接到PVE shell，将文件传到/tmp文件夹下</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/01_08/image_ea518e28b17a99dd1721cfa536fbc405.png" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/01_08/image_ea518e28b17a99dd1721cfa536fbc405.png"></p><p>接下来进入tmp目录,向104（HA）虚拟机导入磁盘</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /tmp</span><br><span class="line">qm importdisk 104 haos_ova-14.1.qcow2 local-lvm</span><br></pre></td></tr></table></figure><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/01_08/image_ed7e0f70eed5e5bdda2a11b4da077419.png" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/01_08/image_ed7e0f70eed5e5bdda2a11b4da077419.png"></p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/01_08/image_041ae76d87838d9b2c205fc27735e425.png" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/01_08/image_041ae76d87838d9b2c205fc27735e425.png"></p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/01_08/image_bf6788c3c1ece3c02b694696c523c7f2.png" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/01_08/image_bf6788c3c1ece3c02b694696c523c7f2.png"></p><p>出现一个未使用的磁盘，双击它添加</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/01_08/image_5282fe4eec755c59cb3dbd48ee5a83d9.png" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/01_08/image_5282fe4eec755c59cb3dbd48ee5a83d9.png"></p><p>在选择-引导顺序里面将硬盘设为第一位</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/01_08/image_e535d0ae42a21b0d684ee21150f9b29e.png" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/01_08/image_e535d0ae42a21b0d684ee21150f9b29e.png"></p><p>现在可以启动虚拟机了</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/01_08/image_86c8d5b2e8da983b026f4f0bc6b64296.png" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/01_08/image_86c8d5b2e8da983b026f4f0bc6b64296.png"></p><p>等待系统最后安装完成，打开网页端，浏览器里面输入这个网址并打开：<a href="http://homeassistant.local:8123">http://homeassistant.local:8123</a></p>]]></content>
    
    
    <summary type="html">PVE安装HOME ASSISTANT
https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/01_08/image_75d390aebb9b1249909c3ef63b0fe04c.png [https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/01_08/image_75d390aebb9b1249909c3ef63b0fe04c.png]</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Docker安装HomeAssistant</title>
    <link href="https://polar-bear.eu.org/2025/01/06/docker-an-zhuang-homeassistant/"/>
    <id>https://polar-bear.eu.org/2025/01/06/docker-an-zhuang-homeassistant/</id>
    <published>2025-01-06T07:10:34.535Z</published>
    <updated>2025-01-07T23:24:49.326Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Docker安装HomeAssistant">Docker安装HomeAssistant</h2><blockquote><p>Docker安装不支持附件组件</p></blockquote><p>直接从docker官方直接拉取镜像，可能会遇到网络问题</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">homeassistant/home-assistant</span><br></pre></td></tr></table></figure><p>可以从镜像地址下载</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ghcr.io/home-assistant/home-assistant:stable</span><br></pre></td></tr></table></figure><p>Docker安装可兼容多平台，但是此方法安装HA<strong>无权访问附加组件</strong></p><p>如图，在飞牛OS上安装</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/01_06/image_3b73082d3e6976149db3b8d0b0e77e20.png" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/01_06/image_3b73082d3e6976149db3b8d0b0e77e20.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">  --name homeassistant \</span><br><span class="line">  --privileged \</span><br><span class="line">  --restart=unless-stopped \</span><br><span class="line">  -e TZ=Asia/Shanghai \</span><br><span class="line">  -v /data/homeassistant:/config \</span><br><span class="line">  --network=host \</span><br><span class="line">  homeassistant/home-assistant</span><br></pre></td></tr></table></figure><p><code>-v /data/homeassistant:/config</code>这一项需要根据自己实际情况修改，即把自己物理机某文件夹挂载到容器内，我是建了个文件夹<code>/data/homeassistant</code>来存放HA的文件</p><p>端口8123映射到本地8123</p><p>创建一个homeasststant的文件夹，将创建的homeasststant 文件路径，载到容器的 /config 路径</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/01_07/image_590cac76150ce6bc8eb19445d3863fb7.png" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/01_07/image_590cac76150ce6bc8eb19445d3863fb7.png"></p><p>添加环境变量 TZ，将时区设置为 Asia/Shanghai</p><p>网络设置成host</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/01_07/image_546059ff67f8a60f94b8dae55bad6937.png" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/01_07/image_546059ff67f8a60f94b8dae55bad6937.png"></p><p>访问<strong><a href="http://ip:8123">http://ip:8123</a></strong>即可</p><p>在 homeasststant 目录下创建一个名为 custom_components 的文件夹</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/01_07/image_077119a4dd4a8de0bc048bd7b4b489c3.png" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/01_07/image_077119a4dd4a8de0bc048bd7b4b489c3.png"></p><p>下载HACS 文件上传并解压到该目录中</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">## 下载地址</span><br><span class="line">https://github.com/hacs/integration/releases/tag/2.0.1</span><br></pre></td></tr></table></figure><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/01_07/image_a5f34dea07bc3c26653c8b9d9b1c8376.png" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/01_07/image_a5f34dea07bc3c26653c8b9d9b1c8376.png"></p><p>重启 Home Assistant.</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/01_07/image_81faaee2c3944615f90e1c2b877155b6.png" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/01_07/image_81faaee2c3944615f90e1c2b877155b6.png"></p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/01_07/image_6c7c7f7aff0960a6196e6b6145b27ecb.png" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/01_07/image_6c7c7f7aff0960a6196e6b6145b27ecb.png"></p><p>点击 设置-设备与服务</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/01_07/image_40431f886ece627b9e08b68c4fd35255.png" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/01_07/image_40431f886ece627b9e08b68c4fd35255.png"></p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/01_07/image_533bfae96458c9327796bfb0fc7483f3.png" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/01_07/image_533bfae96458c9327796bfb0fc7483f3.png"></p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/01_07/image_00b1811e3c914d095888a37a0aeabfed.png" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/01_07/image_00b1811e3c914d095888a37a0aeabfed.png"></p><p>全选，提交</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/01_07/image_048d849d90cd2f4178f342d9f1549082.png" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/01_07/image_048d849d90cd2f4178f342d9f1549082.png"></p><p>如果点提交之后弹出如下对话框，请直接重启nas设备即可正常往下设置</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/01_07/image_adb47d5ce5b219de9653b08697365f92.png" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/01_07/image_adb47d5ce5b219de9653b08697365f92.png"></p><p>加载一会，弹窗对话框，点击第一个链接去验证github账号</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/01_07/image_becdfac8f6cdb8e0e38a00feb038fe2e.png" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/01_07/image_becdfac8f6cdb8e0e38a00feb038fe2e.png"></p><p>同意授权即可</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/01_07/image_f451721c8ddddadeb45275cc82e2cff7.png" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2025/01_07/image_f451721c8ddddadeb45275cc82e2cff7.png"></p>]]></content>
    
    
    <summary type="html">DOCKER安装HOMEASSISTANT
Docker安装不支持附件组件

直接从docker官方直接拉取镜像，可能会遇到网络问题

1


hom</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Git 使用教程</title>
    <link href="https://polar-bear.eu.org/2024/11/21/git-shi-yong-jiao-cheng/"/>
    <id>https://polar-bear.eu.org/2024/11/21/git-shi-yong-jiao-cheng/</id>
    <published>2024-11-21T03:06:52.058Z</published>
    <updated>2024-11-21T03:35:24.105Z</updated>
    
    <content type="html"><![CDATA[<h2 id="常规操作">常规操作</h2><p>开始前我们需要先设置提交的用户信息，包括用户名和邮箱：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name <span class="string">&#x27;name&#x27;</span></span><br><span class="line">$ git config --global user.email <span class="built_in">test</span>@test.com</span><br></pre></td></tr></table></figure><h3 id="创建版本库">创建版本库</h3><p>首先，打开终端或命令行界面，进入要创建版本库的目录下。</p><p>接着，使用以下命令初始化一个空的 Git 仓库：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure><p>然后，将需要管理的文件添加到暂存区：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add</span><br></pre></td></tr></table></figure><p>你也可以使用以下命令一次性将所有变更添加到暂存区：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br></pre></td></tr></table></figure><p>接下来，提交暂存区中的变更到本地仓库，并添加一个描述信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m <span class="string">&#x27;第一次版本提交&#x27;</span></span><br></pre></td></tr></table></figure><p>现在，你已经成功地创建了一个版本库。你可以使用其他 Git 命令来管理它，例如：</p><blockquote><p>git status：查看当前工作区和暂存区的状态。<br>git log：查看提交记录。<br>git branch：管理分支。<br>git remote：管理远程仓库。</p></blockquote><h2 id="远程仓库">远程仓库</h2><h3 id="如何添加远程仓库">如何添加远程仓库</h3><p>要将本地代码库连接到远程仓库，可以使用以下git命令：</p><p>首先，将本地代码库初始化为Git仓库（如果尚未完成）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure><p>添加远程仓库的URL，其中<remote-name>是自定义名称，<remote-url>是远程仓库的URL：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add &lt;remote-name&gt; &lt;remote-url&gt;</span><br></pre></td></tr></table></figure><p>可以使用以下命令确认远程仓库是否已成功添加：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote -v</span><br></pre></td></tr></table></figure><p>此后，您就可以使用 <code>git push</code>命令将代码推送到远程仓库，或使用 <code>git pull</code>命令从远程仓库拉取代码。</p><h3 id="从远程库克隆">从远程库克隆</h3><p>要从远程仓库克隆代码到本地，可以使用以下git命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> &lt;remote-url&gt;</span><br></pre></td></tr></table></figure><p>其中<remote-url>是远程仓库的URL。执行此命令后，Git将在当前目录下创建一个新目录，其中包含克隆的代码库副本。如果想指定不同的目录名，可以将目录名作为可选参数添加到命令中：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> &lt;remote-url&gt; &lt;directory-name&gt;</span><br></pre></td></tr></table></figure><h2 id="创建与合并分支">创建与合并分支</h2><p>创建一个新的分支可以使用以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch &lt;branch_name&gt;</span><br></pre></td></tr></table></figure><p>这将在当前所在的提交上创建一个名为 &lt;branch_name&gt; 的新分支。</p><p>要切换到新创建的分支，可以使用以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout &lt;branch_name&gt;</span><br></pre></td></tr></table></figure><p>创建并立即切换到该分支，可以使用以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout -b &lt;branch_name&gt;</span><br></pre></td></tr></table></figure><p>合并分支可以使用以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git merge &lt;branch_name&gt;</span><br></pre></td></tr></table></figure><p>这将将 &lt;branch_name&gt; 分支中的更改合并到当前分支。</p><h2 id="推送分支">推送分支</h2><p>在 Git 中，推送分支指将本地的分支提交到远程仓库中，使得其他团队成员可以访问和获取该分支的代码。以下是在 Git 中推送分支的一些常用命令：</p><p>推送当前分支到远程仓库，并与远程分支关联：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push -u origin &lt;branch-name&gt;</span><br></pre></td></tr></table></figure><p>推送当前分支到远程仓库，并与远程分支合并：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin &lt;branch-name&gt;</span><br></pre></td></tr></table></figure><p>强制推送当前分支到远程仓库：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push -f origin &lt;branch-name&gt;</span><br></pre></td></tr></table></figure><p>删除远程分支：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin :&lt;branch-name&gt;</span><br></pre></td></tr></table></figure><p>或</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push --delete origin &lt;branch-name&gt;</span><br></pre></td></tr></table></figure><p>在推送分支时，通常会遇到冲突等问题。如果发生冲突，需要先解决冲突，然后再进行推送。</p><h2 id="处理冲突">处理冲突</h2><p>当两个分支上的代码修改了同一部分，并且尝试将这两个分支合并时，就会发生代码冲突。Git提供了以下步骤来解决冲突：</p><p>运行 <code>git status</code> 命令查看哪些文件包含冲突。<br>编辑有冲突的文件，手动解决文件中的冲突。<br>对编辑后的文件进行 <code>git add</code>，标记为已解决冲突的文件。<br>使用 <code>git commit</code> 提交更改，Git 会自动生成一个合并提交，其中包含各自分支中的更改。<br>注意：在解决冲突前，最好先备份当前的代码状态，以免不小心破坏代码库。另外，在处理冲突之前，可以通过运行 <code>git diff</code> 命令来查看冲突的源代码，以便更好地理解要解决的问题。</p><h3 id="分支管理策略">分支管理策略</h3><p>在 Git 中，常见的分支管理策略包括以下几个方面：</p><ul><li>主分支：主分支通常是最稳定的分支，用于发布生产版本。在 Git 中，主分支通常是 master 分支或者 main 分支。</li><li>开发分支：开发分支通常从主分支派生而来，在其上进行新功能或修复错误的开发。在 Git 中，通常使用 develop 分支作为开发分支。</li><li>特性分支：特性分支是为了开发单独的功能而创建的分支。这些分支通常从开发分支派生而来，并在实现目标后被合并回开发分支。在 Git 中，通常使用 feature/ 分支命名约定来表示特性分支。</li><li>发布分支：发布分支是用于准备发布版本的分支，通常从主分支派生而来。这些分支应该包含与发布相关的所有更改，并且应该经过全面测试和审核后再合并回主分支。在 Git 中，通常使用 release/ 分支命名约定来表示发布分支。</li><li>热修复分支：热修复分支通常用于快速修复紧急问题，例如安全漏洞或崩溃。这些分支通常从主分支派生而来，并且只包含必要的更改。在 Git 中，通常使用 hotfix/ 分支命名约定来表示热修复分支。</li></ul><h2 id="具体操作">具体操作</h2><h3 id="克隆仓库">克隆仓库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> git@github.com:TOE-RC/robotmaster-c.git</span><br><span class="line">git <span class="built_in">clone</span> &lt;remote-url&gt;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2024/11_21/image_5f052876d9b219f42b9a86fb47c60eac.png" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2024/11_21/image_5f052876d9b219f42b9a86fb47c60eac.png"></p><h3 id="提交仓库">提交仓库</h3><p>在本地更改并且保存后，使用这条命令一次性将所有变更添加到暂存区</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br></pre></td></tr></table></figure><p>提交暂存区中的变更到本地仓库，并添加一个描述信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m <span class="string">&#x27;第一次版本提交&#x27;</span></span><br></pre></td></tr></table></figure><p>提交到远程仓库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push</span><br></pre></td></tr></table></figure><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2024/11_21/image_71bdf1e5c87f0be8a689fcfc43f8b11c.png" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2024/11_21/image_71bdf1e5c87f0be8a689fcfc43f8b11c.png"></p><h3 id="处理冲突-v2">处理冲突</h3><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2024/11_21/image_7250aa9512338a42987cd48ae6584453.png" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2024/11_21/image_7250aa9512338a42987cd48ae6584453.png"></p><p>在你提交之前假设有其他人提交了新的版本，这时候提交就会出现冲突错误</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2024/11_21/image_cc8aa3ad57e9d7df94390d124267cfdb.png" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2024/11_21/image_cc8aa3ad57e9d7df94390d124267cfdb.png"></p><p>建议使用VSCode自带的插件</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2024/11_21/image_13388c15ab1f627389c004600f703318.png" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2024/11_21/image_13388c15ab1f627389c004600f703318.png"></p><h3 id="覆盖仓库">覆盖仓库</h3><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2024/11_21/image_2e3cee40df1501f13914050a36fe0e26.png" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2024/11_21/image_2e3cee40df1501f13914050a36fe0e26.png"></p><p>本地初始化Git文件夹 <code>git init</code>，绑定远程仓库 <code>git remote add robotmaster-c git@github.com:TOE-RC/robotmaster-c.git</code>，检测仓库是否成功添加 <code>git remote -v</code>。</p><p>这里 <code>git pull</code>出现了错误，提示如果你想要拉取并合并特定的分支，你需要指定远程仓库和分支名 <code>git pull remote branch</code>，或者为当前分支设置跟踪信息，之后，你就可以简单地使用 <code>git pull</code> 来拉取最新的代码，而不需要每次都指定远程仓库和分支。</p><p>首先先建立本地分支进行第一次提交</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">&quot;Initial commit&quot;</span></span><br></pre></td></tr></table></figure><p>获取远程仓库的所有分支信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git fetch</span><br></pre></td></tr></table></figure><p>设置跟踪远程 <code>main</code> 分支</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git branch --set-upstream-to=robotmaster-c/main master</span><br><span class="line">git branch --set-upstream-to=仓库名/仓库分支 本地分支</span><br></pre></td></tr></table></figure><p>此时即可 <code>git pull --allow-unrelated-histories</code></p>]]></content>
    
    
    <summary type="html">常规操作
开始前我们需要先设置提交的用户信息，包括用户名和邮箱：

1
2


$ git config --global user.name &#39;na</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>vofa+</title>
    <link href="https://polar-bear.eu.org/2024/11/18/vofa/"/>
    <id>https://polar-bear.eu.org/2024/11/18/vofa/</id>
    <published>2024-11-18T22:35:57.959Z</published>
    <updated>2024-11-18T22:37:57.313Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>ubuntu下启动vofa+报错rick@rick:~$ vofa+ vofa+: error while loading shared libraries: libcrypto.so.1.1: cannot open shared object file: No such file or directory</p></blockquote><p>问题是由于 <code>libcrypto.so.1.1</code> 动态库未找到导致的，这是 OpenSSL 库的一部分。这个问题通常出现在 OpenSSL 版本不匹配或缺失时。</p><hr><h2 id="安装缺失的-OpenSSL-库">安装缺失的 OpenSSL 库</h2><ol><li><p>确认安装了 OpenSSL：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl version</span><br></pre></td></tr></table></figure><p>如果未安装，执行以下命令安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install libssl1.1</span><br></pre></td></tr></table></figure></li><li><p>如果 <code>libssl1.1</code> 已被系统存储库弃用（如 Ubuntu 22.04 及更高版本），可以从旧版本存储库或官方站点下载 <code>.deb</code> 文件并手动安装：</p><ul><li>下载 <code>libssl1.1</code>：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget http://archive.ubuntu.com/ubuntu/pool/main/o/openssl/libssl1.1_1.1.1f-1ubuntu2_amd64.deb</span><br></pre></td></tr></table></figure></li><li>安装：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo dpkg -i libssl1.1_1.1.1f-1ubuntu2_amd64.deb</span><br></pre></td></tr></table></figure></li><li>修复依赖问题：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt --fix-broken install</span><br></pre></td></tr></table></figure></li></ul></li></ol><hr>]]></content>
    
    
    <summary type="html">ubuntu下启动vofa+报错rick@rick:~$ vofa+ vofa+: error while loading shared libraries:
libcrypto.so.1.1: cannot open shared object file: No such file or directory

问题是由于 libcrypto.so.1.1 动态库未找到导致的，这是 OpenSSL 库的一部分。这个问题通常出现在 OpenSSL 版本不匹配或缺失时。


--------------------------------------------------------------------------------</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Qv2ray安装和使用</title>
    <link href="https://polar-bear.eu.org/2024/11/18/qv2ray-an-zhuang-he-shi-yong/"/>
    <id>https://polar-bear.eu.org/2024/11/18/qv2ray-an-zhuang-he-shi-yong/</id>
    <published>2024-11-18T22:23:41.539Z</published>
    <updated>2024-11-18T22:32:34.259Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Qv2ray安装">Qv2ray安装</h2><p><a href="https://qv2ray-net.pages.dev/lang/zh/">https://qv2ray-net.pages.dev/lang/zh/</a></p><p>到github上下载release对应版本Qv2ray-v2.7.0-linux-x64.AppImage</p><p>先给予可执行权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chmod</span> +x ./Qv2ray-v2.7.0-linux-x64.AppImage</span><br></pre></td></tr></table></figure><p>直接执行即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./Qv2ray-v2.7.0-linux-x64.AppImage</span><br></pre></td></tr></table></figure><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2024/11_19/image_cc316e1c3230393ea39919710b7147fa.png" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2024/11_19/image_cc316e1c3230393ea39919710b7147fa.png"></p><p>同时还要下载v2ray，<a href="https://www.v2fly.org/">https://www.v2fly.org/</a></p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2024/11_19/image_41e8fa274312056659dc5c588de38216.png" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2024/11_19/image_41e8fa274312056659dc5c588de38216.png"></p><p>下载后解压即可。</p><h2 id="配置">配置</h2><p>到Qv2ray的首选项配置里面</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2024/11_19/image_f9b2830db4963f25669a091a27e71f88.png" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2024/11_19/image_f9b2830db4963f25669a091a27e71f88.png"></p><p>内核设置</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2024/11_19/image_ea524bee9321cfd9f2652b52049d9f44.png" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2024/11_19/image_ea524bee9321cfd9f2652b52049d9f44.png"></p><p>配置V2ray可执行文件和资源目录</p><h2 id="问题">问题</h2><p>V2ray核心运行失败，退出代码：2</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2024/11_19/image_d5920434564c244ab6fa6d752383b13f.png" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2024/11_19/image_d5920434564c244ab6fa6d752383b13f.png"></p><p>因为Qv2ray已经停止更新，所以需要使用v2ray-core旧版本，挨个尝试后发现v4.45.2版不会报错</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2024/11_19/image_20ce45347397abf49d443a62ba00fd3a.png" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2024/11_19/image_20ce45347397abf49d443a62ba00fd3a.png"></p>]]></content>
    
    
    <summary type="html">QV2RAY安装
https://qv2ray-net.pages.dev/lang/zh/ [https://qv2ray-net.pages.dev/lang/zh/]

到github上下载release对应版本Qv2ray-v2.7.0-linux-x64.AppImage

先给予可执行权限

1</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>PVE安装记录</title>
    <link href="https://polar-bear.eu.org/2024/11/15/pve-an-zhuang-ji-lu/"/>
    <id>https://polar-bear.eu.org/2024/11/15/pve-an-zhuang-ji-lu/</id>
    <published>2024-11-15T05:18:31.545Z</published>
    <updated>2024-11-17T05:55:12.016Z</updated>
    
    <content type="html"><![CDATA[<h2 id="PVE安装">PVE安装</h2><p>使用ventoy引导PVE请更新到最新版ventoy</p><p><a href="https://github.com/ventoy/Ventoy/issues/2657">https://github.com/ventoy/Ventoy/issues/2657</a></p><p><a href="https://www.proxmox.com/en/downloads">Download Proxmox software, datasheets, agreements</a></p><p>下载PVE安装镜像Proxmox VE 8.2 ISO Installer，载入ventoy</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2024/11_15/1731678640353_516b7b42d6d02c54a657d1a94ffd465e.webp" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2024/11_15/1731678640353_516b7b42d6d02c54a657d1a94ffd465e.webp"></p><p>选择安装硬盘，下一步</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2024/11_15/1731678640347_b677ab951366face390fe78c327c9d7e.webp" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2024/11_15/1731678640347_b677ab951366face390fe78c327c9d7e.webp"></p><p>默认或者按需</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2024/11_15/1731678640342_dfa9f5b182a773a81b169bf717cd1394.webp" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2024/11_15/1731678640342_dfa9f5b182a773a81b169bf717cd1394.webp"></p><p>设置密码，邮件要写</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2024/11_15/1731678640334_39038c8190eb9a90f6425067a421ce05.webp" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2024/11_15/1731678640334_39038c8190eb9a90f6425067a421ce05.webp"></p><p>这里的设置的IP就是登录PVE要使用到的IP</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2024/11_15/1731678640326_fd2a6b62f98385dbde1b78ded96bdbe4.webp" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2024/11_15/1731678640326_fd2a6b62f98385dbde1b78ded96bdbe4.webp"></p><p>点Install 进行安装</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2024/11_15/1731678640318_7e902ffab4d36c2bc7d5305d4272e1c1.webp" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2024/11_15/1731678640318_7e902ffab4d36c2bc7d5305d4272e1c1.webp"></p><p>安装完成移除U盘</p><h2 id="登陆PVE界面">登陆PVE界面</h2><p>可以去路由器里面固定IP防止访问地址变化。</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2024/11_15/image_cdbc2943dc9a4087073c092ca93b67b8.png" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2024/11_15/image_cdbc2943dc9a4087073c092ca93b67b8.png"></p><p><a href="https://192.169.xx.xx:8006">https://192.169.xx.xx:8006</a> # 注意！ 地址前面一定要加 https</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2024/11_15/image_7c73f0c7213fdd952eb1d1acd77477c8.png" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2024/11_15/image_7c73f0c7213fdd952eb1d1acd77477c8.png"></p><h2 id="开始配置">开始配置</h2><h3 id="配置直通-CPU没有VT-D的不用开启">配置直通(CPU没有VT-D的不用开启)</h3><p>进入服务器shell</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2024/11_15/image_ac2c9d3841c29319ddfbff64e26dfb87.png" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2024/11_15/image_ac2c9d3841c29319ddfbff64e26dfb87.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /etc/default</span><br><span class="line"><span class="built_in">ls</span></span><br><span class="line">nano grub</span><br></pre></td></tr></table></figure><p>在<code>GRUB_CMDLINE_LINUX_DEFAULT=&quot;quiet&quot;</code>中添加<code>intel_iommu=on</code>,<code>Ctrl</code>+<code>o</code>保存,<code>Ctrl</code>+<code>X</code>退出。</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2024/11_15/image_9c660c43f462f88321d6ccd5cd362a6b.png" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2024/11_15/image_9c660c43f462f88321d6ccd5cd362a6b.png"></p><p>更新GRUB配置并重启：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">update-grub</span><br><span class="line">reboot</span><br></pre></td></tr></table></figure><h3 id="镜像安装">镜像安装</h3><p>上传镜像</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2024/11_15/image_9849d156898408bc11b27bd4f386c664.png" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2024/11_15/image_9849d156898408bc11b27bd4f386c664.png"></p><h4 id="FNOS">FNOS</h4><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2024/11_16/image_7f08adbcf78314f4d8a8c5f0d4fa3835.png" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2024/11_16/image_7f08adbcf78314f4d8a8c5f0d4fa3835.png"></p><p>启动安装</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2024/11_16/image_cc8496f92cb34137317e9c1c65d9e945.png" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2024/11_16/image_cc8496f92cb34137317e9c1c65d9e945.png"></p><h3 id="网络互通">网络互通</h3><p>创建一个Linux Bridge，同时添加到两台虚拟机的网络设备里面去。</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2024/11_17/image_d49e02a9c891b1588c302c2ee1b1199b.png" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2024/11_17/image_d49e02a9c891b1588c302c2ee1b1199b.png"></p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2024/11_17/image_18f06a1539e450dcaf7c7ee997341762.png" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2024/11_17/image_18f06a1539e450dcaf7c7ee997341762.png"></p><p>FNOS里面手动设置为静态</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2024/11_17/image_eb2646cafe2c2cddebf67c1ef1e3dc40.png" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2024/11_17/image_eb2646cafe2c2cddebf67c1ef1e3dc40.png"></p><p>Ubuntu里面同理</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2024/11_17/image_b6029f6300d85667b07d2ed615ba462e.png" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2024/11_17/image_b6029f6300d85667b07d2ed615ba462e.png"></p><ul><li><code>ens19:</code>：这是另一个网络接口。<ul><li><code>dhcp4: false</code>：表示为ens19接口禁用IPv4的DHCP，即不自动获取IP地址。</li><li><code>addresses:</code>：为ens19接口指定静态IP地址。<ul><li><code>11.11.11.12/24</code>：这是一个静态分配的IP地址，子网掩码为24位，即255.255.255.0。</li></ul></li><li><code>routes:</code>：定义了ens19接口的路由规则。<ul><li><code>to: 11.11.11.0/24</code>：指定了目标网络。</li><li><code>via: 0.0.0.0</code>：指定了下一跳地址，这里设置为0.0.0.0，这通常表示不使用下一跳，或者这个路由是直接连接的。</li><li><code>metric: 100</code>：指定了路由的度量值，用于路由选择，数值越小优先级越高，这里设置为100。</li></ul></li><li><code>nameservers:</code>：定义了DNS服务器的配置。<ul><li><code>addresses: [8.8.8.8, 114.114.114.114]</code>：指定了两个DNS服务器的地址，分别是Google的公共DNS和中国的114DNS。</li></ul></li></ul></li></ul><p>安装sshd，然后使用ssh连接。查看网络。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ifconfig</span><br></pre></td></tr></table></figure><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2024/11_17/image_95265104ad9c45dbd40eba36b5d55cad.png" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2024/11_17/image_95265104ad9c45dbd40eba36b5d55cad.png"></p><p>扫描同网段下设备</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo arp-scan -I ens19 --localnet</span><br></pre></td></tr></table></figure><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2024/11_17/image_596e5c3a956f3a7ca8e88c1f1cc01e55.png" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2024/11_17/image_596e5c3a956f3a7ca8e88c1f1cc01e55.png"></p><p>与FNOS正常连接。</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2024/11_17/image_f0f190f14e3df09d190e80bac8057d54.png" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2024/11_17/image_f0f190f14e3df09d190e80bac8057d54.png"></p><h3 id="文件挂载">文件挂载</h3><blockquote><p>FNOS</p></blockquote><p>开启FNOS文件共享</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2024/11_17/image_74f7cb4dd686473dd857e874224271ca.png" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2024/11_17/image_74f7cb4dd686473dd857e874224271ca.png"></p><blockquote><p>Ubuntu</p></blockquote><p>安装nfs-common</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install nfs-common</span><br></pre></td></tr></table></figure><p>创建文件夹</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/mnt$ <span class="built_in">mkdir</span> FNOS</span><br></pre></td></tr></table></figure><p>编辑文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nano /etc/fstab</span><br></pre></td></tr></table></figure><p>在末尾添加以下内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">11.11.11.11:/fs/1000/nfs /mnt/FNOS nfs defaults 0 0</span><br></pre></td></tr></table></figure><p>保存后，挂载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mount -a</span><br></pre></td></tr></table></figure><p>查看挂载结果</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">df</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2024/11_17/image_fb4604b76b8f8a5268097b21ec13d0ff.png" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2024/11_17/image_fb4604b76b8f8a5268097b21ec13d0ff.png"></p><h4 id="ikuai">ikuai</h4><ol><li>版本号：iKuai8_3.7.16_Build202411141700</li><li>更新时间：2024-11-15 11:48:20</li><li>软件大小：20M+</li><li>默认管理地址：192.168.9.1</li><li>默认用户名/密码：admin/admin</li></ol>]]></content>
    
    
    <summary type="html">PVE安装
使用ventoy引导PVE请更新到最新版ventoy

https://github.com/ventoy/Ventoy/issues/2657
[https://github.com/ventoy/Ventoy/issues/2657]

Download Proxmox software, datasheets, agreements
[https://www.proxmox.com/en/downloads]

下载PVE安装镜像Proxmox V</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Stm32芯片自锁</title>
    <link href="https://polar-bear.eu.org/2024/11/13/stm32-xin-pian-zi-suo/"/>
    <id>https://polar-bear.eu.org/2024/11/13/stm32-xin-pian-zi-suo/</id>
    <published>2024-11-13T03:42:40.084Z</published>
    <updated>2024-11-13T03:46:12.510Z</updated>
    
    <content type="html"><![CDATA[<h2 id="芯片自锁">芯片自锁</h2><p>时钟问题：<strong>时钟频率设置太高</strong>，配置超出芯片主频工作范围，导致单片机自锁<br> <br>电源问题：供电电压不稳，STM32内部存在保护检测，同样会进行芯片的自锁</p><p>BOOT脚配置问题：对于STM32往往都有些BOOT配置脚。因为BOOT脚的焊接或接触不良或者BOOT引脚没有配置正确**，导致很多问题。这种情况多表现在芯片功能时好时坏，或者部分芯片正常，部分芯片异常。</p><p>启动文件问题：经常因为选错了启动文件，导致程序无法正常运行，或者说调试时好好的，脱机运行就出鬼。这点在做不同系列芯片间移植时最容易碰到。</p><p>堆或栈越界溢出：这个也会导致芯片无法正常工作,调试时往往可能会有硬错提示。</p><p>芯片引脚短路：这是最典型的现象，也是最常见的原因，一般不工作的时候第一反应就是检查是否发生短路，短路引发芯片无法正常工作。</p><p>外部晶振异常：外部晶振无法正常工作也是导致芯片无法正常工作的原因，如果程序时钟配置中没有增加在外部晶振无法正常工作时切换到内部晶振的代码，将导致单片机无法正常启动，进行调试会发现代码卡在了RCC时钟的初始化中</p><p>数组越界操作： 数组发生越界时，便会进行错误，结果是程序直接卡死</p><p>中断处理错误： 同样会导致单片机卡死</p><p>我们先来了解一下BOOT0和BOOT1引脚</p><p>Flash：<br>是STM32内置的Flash，一般我们使用JTAG或者SWD模式下载程序时，就是下载到这个里面，重启后也直接从这启动程序，这是正常的工作模式</p><p>System memory：<br>系统存储器是芯片内部一块特定的区域，STM32在出厂时，由ST在这个区域内部预置了一段BootLoader，也就是我们常说的ISP程序，这是一块ROM，出厂后无法修改。</p><p>Embedded Memory：<br>内置SRAM，既然是SRAM，自然也就没有程序存储的能力了，这个模式一般用于程序调试。</p><p>简化：</p><p>BOOT1BOOT0上电、复位后的启动区域<br>00Flash（闪存）<br>10Flash（闪存）<br>01ROM（固化内存）<br>11RAM（运行内存）<br>RAM为常说的内存，比如手机的2G内存4G内存等，就是程序跑起来的时候所占用的存储空间，特点是掉电数据丢失。<br>ROM为常说的硬盘，比如手机的64G和128G等，可以简单的理解为硬盘的存储空间，特点是掉电数据不丢失，所以又叫“非易失性存储器件”。<br>ROM又包含：EEPROM和Flash。<br>单片机正常情况，程序是从Flash区开始跑的，但是因为你写的软件代码有问题，下进去后，程序跑飞了，单片机卡死。按下复位（因为复位后程序也是从Flash区开始跑）也会卡死。所以芯片就禁掉SWD接口，自锁。</p><p>此时我们只需要将BOOT0=1，拉高BOOT0引脚，即从ROM区开始跑程序即可。<br>因为ROM区是存储存储固化程序的（存放指令代码和一些固定数值，程序运行后不可改动。例如c文件及h文件中所有代码、全局变量、局部变量、’const’限定符定义的常量数据、startup.asm文件中的代码），不会卡死，也就不影响单片机SWD口的下载。<br>先掉电，将BOOT0拉高后，将代码下进去，然后再掉电，再把BOOT0=0，再上电，即可正常运行了。</p><p>(如图黄色的为BOOT跳帽)</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2024/11_13/5d74f8a1f1679e015dccd130d4346431_4e1e3d4f4f09094e8496f013cb8f2083.jpg" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2024/11_13/5d74f8a1f1679e015dccd130d4346431_4e1e3d4f4f09094e8496f013cb8f2083.jpg"></p><p>另一种方式</p><p>使用官方ST-LINK Utility工具</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2024/11_13/image_11560e4f1557f6ed96dd4bfcf32fbfeb.png" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2024/11_13/image_11560e4f1557f6ed96dd4bfcf32fbfeb.png"></p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2024/11_13/image_1adca2be91e1db786826c3a86f3562bd.png" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2024/11_13/image_1adca2be91e1db786826c3a86f3562bd.png"></p><p>选择这个连接模式mode connect under reset（意思是按下最小核心板的复位键时候连接）</p><p>按下芯片复位键的同时，点击连接，然后松开。</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2024/11_13/image_f6c6fc8ddd494a6fafe84ac6efade8f0.png" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2024/11_13/image_f6c6fc8ddd494a6fafe84ac6efade8f0.png"></p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2024/11_13/image_50ad6fe6e3b8419b2a0a03d06caa401c.png" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2024/11_13/image_50ad6fe6e3b8419b2a0a03d06caa401c.png"></p><p>可以发现  **  st_link的灯闪烁红蓝相间的光表示连接成功**</p><p><strong>连接成功后，将芯片全部擦除</strong></p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2024/11_13/image_b765c51cad09a5c7eabc024b2cb06a62.png" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2024/11_13/image_b765c51cad09a5c7eabc024b2cb06a62.png"></p>]]></content>
    
    
    <summary type="html">芯片自锁
时钟问题：时钟频率设置太高，配置超出芯片主频工作范围，导致单片机自锁

电源问题：供电电压不稳，STM32内部存在保护检测，同样会进行芯片的自锁

BOOT脚配置问题：对于STM32往往都有些BOOT配置脚。因为BOOT脚的焊接或接触不良或者BOOT引脚没有配置正确**，导致很多问题。这种情况多表现在芯片功能时好时坏，或者部分芯片正常，部分芯片异常。

启动文件问题：经常因为选错了启动文件，导致程序无法正常运行，或者说调试时好好的，脱机运行就出鬼。这点在做不同系列芯</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title> CH34x 设备时与 brltty 冲突的问题</title>
    <link href="https://polar-bear.eu.org/2024/11/12/ch34x-she-bei-shi-yu-brltty-chong-tu-de-wen-ti/"/>
    <id>https://polar-bear.eu.org/2024/11/12/ch34x-she-bei-shi-yu-brltty-chong-tu-de-wen-ti/</id>
    <published>2024-11-12T05:06:05.298Z</published>
    <updated>2025-06-26T01:32:30.644Z</updated>
    
    <content type="html"><![CDATA[<p>插入串口设备后,USB可以正常发现设备<code>Bus 003 Device 016</code>但是<code>ls /dev</code>中却找不到串口设备</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">rick@rick:~$ lsusb</span><br><span class="line">Bus 001 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub</span><br><span class="line">Bus 002 Device 001: ID 1d6b:0003 Linux Foundation 3.0 root hub</span><br><span class="line">Bus 002 Device 002: ID 0bda:9210 Realtek Semiconductor Corp. RTL9210 M.2 NVME Adapter</span><br><span class="line">Bus 002 Device 006: ID 2717:5006 Xiaomi Inc. 4-Port USB 3.0 Hub</span><br><span class="line">Bus 002 Device 007: ID 0bda:8153 Realtek Semiconductor Corp. RTL8153 Gigabit Ethernet Adapter</span><br><span class="line">Bus 002 Device 008: ID 0bda:0412 Realtek Semiconductor Corp. 4-Port USB 3.0 Hub</span><br><span class="line">Bus 003 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub</span><br><span class="line">Bus 003 Device 002: ID 1a40:0101 Terminus Technology Inc. Hub</span><br><span class="line">Bus 003 Device 003: ID 30c9:0041 Luxvisions Innotech Limited USB Camera</span><br><span class="line">Bus 003 Device 004: ID 258a:015e BY Tech Gaming Keyboard</span><br><span class="line">Bus 003 Device 005: ID 8087:0033 Intel Corp. AX211 Bluetooth</span><br><span class="line">Bus 003 Device 006: ID 1ea7:0066 SHARKOON Technologies GmbH [Mediatrack Edge Mini Keyboard]</span><br><span class="line">Bus 003 Device 010: ID 2717:5007 Xiaomi Inc. 4-Port USB 2.0 Hub</span><br><span class="line">Bus 003 Device 011: ID 0bda:5412 Realtek Semiconductor Corp. 4-Port USB 2.0 Hub</span><br><span class="line">Bus 003 Device 016: ID 1a86:7523 QinHeng Electronics CH340 serial converter</span><br><span class="line">Bus 004 Device 001: ID 1d6b:0003 Linux Foundation 3.0 root hub</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>查看日志发现串口设备被<code>brltty</code>软件占有</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">rick@rick:~$ sudo dmesg | grep ttyS*</span><br><span class="line">[    0.069611] printk: legacy console [tty0] enabled</span><br><span class="line">[    1.860154] dw-apb-uart.5: ttyS4 at MMIO 0x4017005000 (irq = 16, base_baud = 6250000) is a 16550A</span><br><span class="line">[ 2199.932595] usb 3-3.4: ch341-uart converter now attached to ttyUSB0</span><br><span class="line">[ 2200.584625] usb 3-3.4: usbfs: interface 0 claimed by ch341 <span class="keyword">while</span> <span class="string">&#x27;brltty&#x27;</span> sets config <span class="comment">#1</span></span><br><span class="line">[ 2200.585977] ch341-uart ttyUSB0: ch341-uart converter now disconnected from ttyUSB0</span><br><span class="line">[ 3316.829408] usb 3-3.4: ch341-uart converter now attached to ttyUSB0</span><br><span class="line">[ 3317.481054] usb 3-3.4: usbfs: interface 0 claimed by ch341 <span class="keyword">while</span> <span class="string">&#x27;brltty&#x27;</span> sets config <span class="comment">#1</span></span><br><span class="line">[ 3317.482143] ch341-uart ttyUSB0: ch341-uart converter now disconnected from ttyUSB0</span><br><span class="line">[ 3387.491640] usb 3-3.4: ch341-uart converter now attached to ttyUSB0</span><br><span class="line">[ 3388.144108] usb 3-3.4: usbfs: interface 0 claimed by ch341 <span class="keyword">while</span> <span class="string">&#x27;brltty&#x27;</span> sets config <span class="comment">#1</span></span><br><span class="line">[ 3388.145187] ch341-uart ttyUSB0: ch341-uart converter now disconnected from ttyUSB0</span><br><span class="line">[ 3483.489215] usb 3-3.4: ch341-uart converter now attached to ttyUSB0</span><br><span class="line">[ 3484.149430] usb 3-3.4: usbfs: interface 0 claimed by ch341 <span class="keyword">while</span> <span class="string">&#x27;brltty&#x27;</span> sets config <span class="comment">#1</span></span><br><span class="line">[ 3484.150483] ch341-uart ttyUSB0: ch341-uart converter now disconnected from ttyUSB0</span><br><span class="line">[ 4280.418100] usb 3-3.4: ch341-uart converter now attached to ttyUSB0</span><br><span class="line">[ 4281.080859] usb 3-3.4: usbfs: interface 0 claimed by ch341 <span class="keyword">while</span> <span class="string">&#x27;brltty&#x27;</span> sets config <span class="comment">#1</span></span><br><span class="line">[ 4281.081944] ch341-uart ttyUSB0: ch341-uart converter now disconnected from ttyUSB0</span><br></pre></td></tr></table></figure><ul><li><code>dw-apb-uart.5: ttyS4 at MMIO 0x4017005000 (irq = 16, base_baud = 6250000) is a 16550A</code>：这是关于系统板上的一个串口（ttyS4）的信息，与您的USB串口转换器无关。</li><li><code>usb 3-3.4: ch341-uart converter now attached to ttyUSB0</code>：这条消息表明CH340串口转换器被连接到了<code>ttyUSB0</code>。</li><li><code>usb 3-3.4: usbfs: interface 0 claimed by ch341 while 'brltty' sets config #1</code>：这条消息表明<code>brltty</code>（一个用于盲人和视觉障碍人士的软件）正在尝试使用CH340设备。</li><li><code>ch341-uart ttyUSB0: ch341-uart converter now disconnected from ttyUSB0</code>：这条消息表明CH340串口转换器从<code>ttyUSB0</code>断开了连接。</li></ul><ol><li>停止 <code>brltty</code> 服务：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl stop brltty</span><br></pre></td></tr></table></figure><ol start="2"><li>禁止 <code>brltty</code> 自动启动：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl disable brltty</span><br></pre></td></tr></table></figure><ol start="3"><li>卸载 <code>brltty</code> 软件包：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt remove brltty</span><br></pre></td></tr></table></figure><ol start="4"><li>清理相关的配置文件和依赖项：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt autoremove</span><br></pre></td></tr></table></figure><p>如果遇到串口拒绝访问可以修改权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">chmod</span> 777 /dev/ttyUSB0</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">插入串口设备后,USB可以正常发现设备Bus 003 Device 016但是ls /dev中却找不到串口设备

1
2
3
4</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>ROS2部署</title>
    <link href="https://polar-bear.eu.org/2024/11/10/ros2-bu-shu/"/>
    <id>https://polar-bear.eu.org/2024/11/10/ros2-bu-shu/</id>
    <published>2024-11-10T03:31:21.491Z</published>
    <updated>2024-11-10T03:36:55.167Z</updated>
    
    <content type="html"><![CDATA[<h2 id="推荐">推荐</h2><p>clash：<a href="https://github.com/clash-verge-rev/clash-verge-rev">https://github.com/clash-verge-rev/clash-verge-rev</a></p><p><a href="https://ikuuu.pw/user">https://ikuuu.pw/user</a></p><p>VS-Code，edge</p><p><a href="https://im.qq.com/linuxqq/index.shtml">https://im.qq.com/linuxqq/index.shtml</a></p><p>Ctrl+Alt+T打开终端</p><p>显示系统架构</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">uname <span class="literal">-m</span> 直接显示Linux 系统架构</span><br><span class="line">uname <span class="literal">-a</span> 命令也可以显示Linux 系统架构，但是还有和其他信息</span><br></pre></td></tr></table></figure><p>安装deb应用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo dpkg -i 文件名称.deb</span><br></pre></td></tr></table></figure><p>解压</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar [options] -f archive.tar [files...]</span><br></pre></td></tr></table></figure><ul><li><code>-c</code>：创建一个新的归档文件。</li><li><code>-x</code>：解压归档文件。</li><li><code>-t</code>：列出归档文件的内容。</li><li><code>-r</code>：向现有归档文件中追加文件。</li><li><code>-u</code>：仅追加比归档文件中已有文件更新的文件。</li><li><code>-d</code>：找到归档文件中与文件系统不同步的差异。</li><li><code>-A</code>：将一个 <code>.tar</code> 文件追加到另一个 <code>.tar</code> 文件中。</li></ul><p>清华源：<a href="https://mirrors.tuna.tsinghua.edu.cn/help/ubuntu/">https://mirrors.tuna.tsinghua.edu.cn/help/ubuntu/</a></p><p>git：sudo apt install git</p><h2 id="安装ROS2">安装ROS2</h2><p><a href="https://fishros.com/d2lros2/#/humble/chapt1/get_started/3.%E5%8A%A8%E6%89%8B%E5%AE%89%E8%A3%85ROS2">https://fishros.com/d2lros2/#/humble/chapt1/get_started/3.动手安装ROS2</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget http://fishros.com/install -O fishros &amp;&amp; . fishros</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">推荐
clash：https://github.com/clash-verge-rev/clash-verge-rev
[https://github.com/clash-verge-rev/clash-verge-rev]

https://ikuuu.pw/user [https://ikuuu.pw/user]

VS-Code，edge

https://im.qq.c [https://im.qq.com/linuxqq/index.shtml]</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>ROS2笔记</title>
    <link href="https://polar-bear.eu.org/2024/10/30/ros2-bi-ji/"/>
    <id>https://polar-bear.eu.org/2024/10/30/ros2-bi-ji/</id>
    <published>2024-10-30T02:53:30.195Z</published>
    <updated>2024-10-30T08:26:29.106Z</updated>
    
    <content type="html"><![CDATA[<h2 id="ROS2笔记">ROS2笔记</h2><p>读<a href="https://fishros.com/d2lros2/#/">鱼香ROS</a>后记,以上内容全部出自<a href="https://fishros.com/d2lros2/#/">鱼香ROS</a>，仅个人记录学习。</p><h2 id="用g-编译ROS2的C-节点">用g++编译ROS2的C++节点</h2><p>在 <code>first_ros2_node.cpp</code>中输入下面的代码。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">// 包含rclcpp头文件，如果Vscode显示红色的波浪线也没关系</span><br><span class="line">// 我们只是把VsCode当记事本而已，谁会在意记事本对代码的看法呢，不是吗？</span><br><span class="line">#include &quot;rclcpp/rclcpp.hpp&quot;</span><br><span class="line"></span><br><span class="line">int main(int argc, char **argv)</span><br><span class="line">&#123;</span><br><span class="line">    // 调用rclcpp的初始化函数</span><br><span class="line">    rclcpp::init(argc, argv);</span><br><span class="line">    // 调用rclcpp的循环运行我们创建的first_node节点</span><br><span class="line">    rclcpp::spin(std::make_shared&lt;rclcpp::Node&gt;(&quot;first_node&quot;));</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="编译">编译</h3><p>接着我们使用g++来编译 <code>first_ros2_node</code>节点。正常的话一定会报错。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">g++ first_ros2_node.cpp</span><br></pre></td></tr></table></figure><p>报错内容如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">root@490925f19143:~/d2lros2/d2lros2/chapt2/basic# g++ first_ros2_node.cpp </span><br><span class="line">first_ros2_node.cpp:3:10: fatal error: rclcpp/rclcpp.hpp: No such file or directory</span><br><span class="line">    3 | #include &quot;rclcpp/rclcpp.hpp&quot;</span><br><span class="line">      |          ^~~~~~~~~~~~~~~~~~~</span><br><span class="line">compilation terminated.</span><br></pre></td></tr></table></figure><p>一定要记住这个错误 <code> No such file or directory</code>，这将是你接下来机器人学习工作生涯中最常见的错误之一。</p><p>最终解决一层一层的头文件导入后因该是这样的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">g++ first_ros2_node.cpp \</span><br><span class="line">-I/opt/ros/jazzy/include/rclcpp/ \</span><br><span class="line">    -I /opt/ros/jazzy/include/rcl/ \</span><br><span class="line">    -I /opt/ros/jazzy/include/rcutils/ \</span><br><span class="line">    -I /opt/ros/jazzy/include/rmw \</span><br><span class="line">    -I /opt/ros/jazzy/include/rcl_yaml_param_parser/ \</span><br><span class="line">    -I /opt/ros/jazzy/include/rosidl_runtime_c \</span><br><span class="line">    -I /opt/ros/jazzy/include/rosidl_typesupport_interface \</span><br><span class="line">    -I /opt/ros/jazzy/include/rcpputils \</span><br><span class="line">    -I /opt/ros/jazzy/include/builtin_interfaces \</span><br><span class="line">    -I /opt/ros/jazzy/include/rosidl_runtime_cpp \</span><br><span class="line">    -I /opt/ros/jazzy/include/tracetools \</span><br><span class="line">    -I /opt/ros/jazzy/include/rcl_interfaces \</span><br><span class="line">    -I /opt/ros/jazzy/include/libstatistics_collector \</span><br><span class="line">    -I /opt/ros/jazzy/include/statistics_msgs \</span><br><span class="line">    -I /opt/ros/jazzy/include/service_msgs \</span><br><span class="line">-I /opt/ros/jazzy/include/type_description_interfaces \</span><br><span class="line">-I /opt/ros/jazzy/include/rosidl_dynamic_typesupport \</span><br><span class="line">-I /opt/ros/jazzy/include/rosidl_typesupport_introspection_cpp \</span><br></pre></td></tr></table></figure><p>运行完上面这段代码，你会发现报的错误变了。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">/usr/bin/ld: /tmp/ccoA8hho.o: in function `main&#x27;:</span><br><span class="line">first_ros2_node.cpp:(.text+0x37): undefined reference to `rcutils_get_default_allocator&#x27;</span><br><span class="line">/usr/bin/ld: first_ros2_node.cpp:(.text+0x5c): undefined reference to `rclcpp::InitOptions::InitOptions(rcutils_allocator_s)&#x27;</span><br><span class="line">/usr/bin/ld: first_ros2_node.cpp:(.text+0x7d): undefined reference to `rclcpp::init(int, char const* const*, rclcpp::InitOptions const&amp;, rclcpp::SignalHandlerOptions)&#x27;</span><br><span class="line">/usr/bin/ld: first_ros2_node.cpp:(.text+0x89): undefined reference to `rclcpp::InitOptions::~InitOptions()&#x27;</span><br><span class="line">/usr/bin/ld: first_ros2_node.cpp:(.text+0xb1): undefined reference to `rclcpp::spin(std::shared_ptr&lt;rclcpp::Node&gt;)&#x27;</span><br><span class="line">/usr/bin/ld: first_ros2_node.cpp:(.text+0xe9): undefined reference to `rclcpp::InitOptions::~InitOptions()&#x27;</span><br><span class="line">/usr/bin/ld: /tmp/ccoA8hho.o: in function `void __gnu_cxx::new_allocator&lt;rclcpp::Node&gt;::construct&lt;rclcpp::Node, char const (&amp;) [11]&gt;(rclcpp::Node*, char const (&amp;) [11])&#x27;:</span><br><span class="line">first_ros2_node.cpp:(.text._ZN9__gnu_cxx13new_allocatorIN6rclcpp4NodeEE9constructIS2_JRA11_KcEEEvPT_DpOT0_[_ZN9__gnu_cxx13new_allocatorIN6rclcpp4NodeEE9constructIS2_JRA11_KcEEEvPT_DpOT0_]+0x86): undefined reference to `rcutils_get_default_allocator&#x27;</span><br><span class="line">/usr/bin/ld: first_ros2_node.cpp:(.text._ZN9__gnu_cxx13new_allocatorIN6rclcpp4NodeEE9constructIS2_JRA11_KcEEEvPT_DpOT0_[_ZN9__gnu_cxx13new_allocatorIN6rclcpp4NodeEE9constructIS2_JRA11_KcEEEvPT_DpOT0_]+0xb7): undefined reference to `rclcpp::NodeOptions::NodeOptions(rcutils_allocator_s)&#x27;</span><br><span class="line">/usr/bin/ld: first_ros2_node.cpp:(.text._ZN9__gnu_cxx13new_allocatorIN6rclcpp4NodeEE9constructIS2_JRA11_KcEEEvPT_DpOT0_[_ZN9__gnu_cxx13new_allocatorIN6rclcpp4NodeEE9constructIS2_JRA11_KcEEEvPT_DpOT0_]+0xe7): undefined reference to `rclcpp::Node::Node(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, rclcpp::NodeOptions const&amp;)&#x27;</span><br><span class="line">collect2: error: ld returned 1 exit status</span><br></pre></td></tr></table></figure><p>原因在于g++找不到库文件，解决方法就是我们帮助它定位到库文件的位置，并通过-L参数指定库目录，-l（小写L）指定库的名字。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-L /opt/ros/jazzy/lib/ \</span><br></pre></td></tr></table></figure><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2024/10_30/image_7c945163af32ebac8a7962720057139f.png" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2024/10_30/image_7c945163af32ebac8a7962720057139f.png"></p><p>得到可执行程序 <code>first_node</code>，运行 <code>./first_node</code>即可执行。</p><h2 id="使用make编译ROS2节点">使用make编译ROS2节点</h2><h3 id="安装make">安装make</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install make</span><br></pre></td></tr></table></figure><h3 id="编写Makefile">编写Makefile</h3><p>在first_ros2_node.cpp同目录下新建 <code>Makefile</code>，然后将上面的g++编译指令用下面的形式写到Makefile里。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">build:</span><br><span class="line">g++ first_ros2_node.cpp \</span><br><span class="line">-I/opt/ros/jazzy/include/rclcpp/ \</span><br><span class="line">    -I /opt/ros/jazzy/include/rcl/ \</span><br><span class="line">    -I /opt/ros/jazzy/include/rcutils/ \</span><br><span class="line">    -I /opt/ros/jazzy/include/rmw \</span><br><span class="line">    -I /opt/ros/jazzy/include/rcl_yaml_param_parser/ \</span><br><span class="line">    -I /opt/ros/jazzy/include/rosidl_runtime_c \</span><br><span class="line">    -I /opt/ros/jazzy/include/rosidl_typesupport_interface \</span><br><span class="line">    -I /opt/ros/jazzy/include/rcpputils \</span><br><span class="line">    -I /opt/ros/jazzy/include/builtin_interfaces \</span><br><span class="line">    -I /opt/ros/jazzy/include/rosidl_runtime_cpp \</span><br><span class="line">    -I /opt/ros/jazzy/include/tracetools \</span><br><span class="line">    -I /opt/ros/jazzy/include/rcl_interfaces \</span><br><span class="line">    -I /opt/ros/jazzy/include/libstatistics_collector \</span><br><span class="line">    -I /opt/ros/jazzy/include/statistics_msgs \</span><br><span class="line">    -I /opt/ros/jazzy/include/service_msgs \</span><br><span class="line">-I /opt/ros/jazzy/include/type_description_interfaces \</span><br><span class="line">-I /opt/ros/jazzy/include/rosidl_dynamic_typesupport \</span><br><span class="line">-I /opt/ros/jazzy/include/rosidl_typesupport_introspection_cpp \</span><br><span class="line">-L /opt/ros/jazzy/lib/ \</span><br><span class="line">    -lrclcpp -lrcutils \</span><br><span class="line">    -o first_node</span><br><span class="line">  </span><br><span class="line"># 顺便小鱼加个clean指令，用来删掉first_node</span><br><span class="line">clean:</span><br><span class="line">rm first_node</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="编译-v2">编译</h3><p>在Makefile同级目录输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make build</span><br></pre></td></tr></table></figure><p>make指令调用了脚本里的build下的指令，对代码进行了编译。同级目录下也产生了first_node可执行文件（绿色代表可执行）。</p><p>使用 <code>make clean</code>指令即可删掉 <code>first_node</code>节点。</p><h3 id="运行测试">运行测试</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./first_node</span><br></pre></td></tr></table></figure><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2024/10_30/image_e1dbdfe30cb9474d736c6e2ea293f73c.png" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2024/10_30/image_e1dbdfe30cb9474d736c6e2ea293f73c.png"></p><p>新开终端</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ros2 node list</span><br></pre></td></tr></table></figure><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2024/10_30/image_c4d4c2093a26c1fc9d8fcb5a03e7af41.png" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2024/10_30/image_c4d4c2093a26c1fc9d8fcb5a03e7af41.png"></p><h2 id="使用CMakeLists-txt编译ROS2节点">使用CMakeLists.txt编译ROS2节点</h2><p>虽然通过make调用Makefile编译代码非常的方便，但是还是需要我们手写gcc指令来编译，那有没有什么办法可以自动生成Makefile呢？</p><p>答案是有的，那就是cmake工具。</p><p><strong>cmake通过调用CMakeLists.txt直接生成Makefile。</strong></p><h3 id="安装Cmake">安装Cmake</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install cmake</span><br></pre></td></tr></table></figure><h3 id="新建CMakeLists-txt">新建CMakeLists.txt</h3><p>在 <code>d2lros2/d2lros2/chapt2/basic</code>新建 <code>CMakeLists.txt</code>，输入下面内容。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">cmake_minimum_required(VERSION 3.22)</span><br><span class="line"></span><br><span class="line">project(first_node)</span><br><span class="line"></span><br><span class="line">#include_directories 添加特定的头文件搜索路径 ，相当于指定g++编译器的-I参数</span><br><span class="line">include_directories(/opt/ros/humble/include/rclcpp/)</span><br><span class="line">include_directories(/opt/ros/humble/include/rcl/)</span><br><span class="line">include_directories(/opt/ros/humble/include/rcutils/)</span><br><span class="line">include_directories(/opt/ros/humble/include/rcl_yaml_param_parser/)</span><br><span class="line">include_directories(/opt/ros/humble/include/rosidl_runtime_c/)</span><br><span class="line">include_directories(/opt/ros/humble/include/rosidl_typesupport_interface/)</span><br><span class="line">include_directories(/opt/ros/humble/include/rcpputils/)</span><br><span class="line">include_directories(/opt/ros/humble/include/builtin_interfaces/)</span><br><span class="line">include_directories(/opt/ros/humble/include/rmw/)</span><br><span class="line">include_directories(/opt/ros/humble/include/rosidl_runtime_cpp/)</span><br><span class="line">include_directories(/opt/ros/humble/include/tracetools/)</span><br><span class="line">include_directories(/opt/ros/humble/include/rcl_interfaces/)</span><br><span class="line">include_directories(/opt/ros/humble/include/libstatistics_collector/)</span><br><span class="line">include_directories(/opt/ros/humble/include/statistics_msgs/)</span><br><span class="line"></span><br><span class="line"># link_directories - 向工程添加多个特定的库文件搜索路径，相当于指定g++编译器的-L参数</span><br><span class="line">link_directories(/opt/ros/humble/lib/)</span><br><span class="line"></span><br><span class="line"># add_executable - 生成first_node可执行文件</span><br><span class="line">add_executable(first_node first_ros2_node.cpp)</span><br><span class="line"></span><br><span class="line"># target_link_libraries - 为first_node(目标) 添加需要动态链接库，相同于指定g++编译器-l参数</span><br><span class="line"># 下面的语句代替 -lrclcpp -lrcutils</span><br><span class="line">target_link_libraries(first_node rclcpp rcutils)</span><br></pre></td></tr></table></figure><h3 id="编译代码">编译代码</h3><p>我们一般会创建一个新的目录，运行cmake并进行编译，这样的好处是不会显得那么乱。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir build</span><br><span class="line">cd build</span><br></pre></td></tr></table></figure><p>创建好文件夹，接着运行cmake指令，<code>..</code>代表到上级目录找 <code>CMakeLists.txt</code>。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cmake ..</span><br></pre></td></tr></table></figure><p>运行完cmake你应该可以在build目录下看到cmake自动生成的Makefile了，接着就可以运行make指令进行编译</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make</span><br></pre></td></tr></table></figure><p>运行完上面的指令，就可以在build目录下发现 <code>first_node</code>节点了。</p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2024/10_30/image_17a39f9dc46e755c003071d3ec7d8b95.png" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2024/10_30/image_17a39f9dc46e755c003071d3ec7d8b95.png"></p><h2 id="CMake依赖查找流程">CMake依赖查找流程</h2><p>上面我们用g++、make、cmake三种方式来编译ros2的C++节点。用cmake虽然成功了，但是CMakeLists.txt的内容依然非常的臃肿，我们需要将其进一步的简化。</p><h3 id="优化CMakeList-txt">优化CMakeList.txt</h3><p>将上面的CmakLists.txt改成下面的样子</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cmake_minimum_required(VERSION 3.22)</span><br><span class="line">project(first_node)</span><br><span class="line"></span><br><span class="line">find_package(rclcpp REQUIRED)</span><br><span class="line">add_executable(first_node first_ros2_node.cpp)</span><br><span class="line">target_link_libraries(first_node rclcpp::rclcpp)</span><br></pre></td></tr></table></figure><p>接着继续生成和编译</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cmake ..</span><br><span class="line">make</span><br></pre></td></tr></table></figure><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2024/10_30/image_8b78f23ad3c2c24cd854932e17c7bee8.png" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2024/10_30/image_8b78f23ad3c2c24cd854932e17c7bee8.png"></p><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2024/10_30/image_6368201c457e5d0d361d9f21a3c21947.png" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2024/10_30/image_6368201c457e5d0d361d9f21a3c21947.png"></p><h3 id="find-package查找路径">find_package查找路径</h3><p>find_package查找路径对应的环境变量如下。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;package&gt;_DIR</span><br><span class="line">CMAKE_PREFIX_PATH</span><br><span class="line">CMAKE_FRAMEWORK_PATH</span><br><span class="line">CMAKE_APPBUNDLE_PATH</span><br><span class="line">PATH</span><br></pre></td></tr></table></figure><p>打开终端，输入指令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo $PATH</span><br></pre></td></tr></table></figure><p>结果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PATH=/opt/ros/humble/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin</span><br></pre></td></tr></table></figure><p>观察PATH变量，你会发现 <code>/opt/ros/humble/bin</code>赫然在其中，<code>PATH</code>中的路径如果以 <code>bin</code>或 <code>sbin</code>结尾，则自动回退到上一级目录，接着检查这些目录下的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;prefix&gt;/(lib/&lt;arch&gt;|lib|share)/cmake/&lt;name&gt;*/          (U)</span><br><span class="line">&lt;prefix&gt;/(lib/&lt;arch&gt;|lib|share)/&lt;name&gt;*/                (U)</span><br><span class="line">&lt;prefix&gt;/(lib/&lt;arch&gt;|lib|share)/&lt;name&gt;*/(cmake|CMake)/  (U)</span><br></pre></td></tr></table></figure><p>cmake找到这些目录后，会开始依次找 <code>&lt;package&gt;Config.cmake</code>或 <code>Find&lt;package&gt;.cmake</code>文件。找到后即可执行该文件并生成相关链接信息。</p><p>打开 <code>/opt/ros/humble/share/rclcpp/cmake</code>你会发现 <code>rclcppConfig.cmake</code>就在其中。</p><h2 id="编写ROS2的Python节点">编写ROS2的Python节点</h2><p>在 <code>d2lros2/d2lros2/chapt2/basic</code>新建 <code>second_ros2_node.py</code>，输入下面的内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 导入rclpy库，如果Vscode显示红色的波浪线也没关系</span><br><span class="line"># 我们只是把VsCode当记事本而已，谁会在意记事本对代码的看法呢，不是吗？</span><br><span class="line">import rclpy</span><br><span class="line">from rclpy.node import Node</span><br><span class="line"># 调用rclcpp的初始化函数</span><br><span class="line">rclpy.init() </span><br><span class="line"># 调用rclcpp的循环运行我们创建的second_node节点</span><br><span class="line">rclpy.spin(Node(&quot;second_node&quot;))</span><br></pre></td></tr></table></figure><h3 id="运行Python节点">运行Python节点</h3><p>打开终端，输入指令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ls</span><br><span class="line">python3 second_ros2_node.py</span><br></pre></td></tr></table></figure><p>打开新的终端，输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ros2 node list</span><br></pre></td></tr></table></figure><p><img src="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2024/10_30/image_32f14d4eaf52b57848546d0c04008792.png" alt="https://cdn.ziyourufeng.eu.org/51hhh/img_bed/main/img/2024/10_30/image_32f14d4eaf52b57848546d0c04008792.png"></p><p>完美，四行代码写了个ROS2的Python节点。</p><p>那么问题来了，我们import rclpy，rclpy到底在哪里？python是如何找到的？</p><h3 id="Python包查找流程">Python包查找流程</h3><p>Python3运行 <code>import rclpy</code>时候如何找到它的呢？答案是通过环境变量 <code>PYTHONPATH</code></p><p>Ctrl+C打断节点运行，接着输入下面指令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo $PYTHONPATH</span><br></pre></td></tr></table></figure><p>结果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages</span><br></pre></td></tr></table></figure><p>你会发现里面有关于humble的python路径，在上面两个目录下找一下rclpy，看看能不能找到rclpy</p><p>查找第一个路径</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -l /opt/ros/humble/lib/python3.10/site-packages | grep rclpy</span><br></pre></td></tr></table></figure><p>没找到，第二个</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -l /opt/ros/humble/local/lib/python3.10/dist-packages/ | grep rclpy</span><br></pre></td></tr></table></figure><p>找到了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">drwxr-xr-x 1 root root 4096 Jun  3 04:45 rclpy</span><br><span class="line">drwxr-xr-x 2 root root 4096 May 23 22:23 rclpy-3.3.4-py3.10.egg-info</span><br></pre></td></tr></table></figure><h3 id="删除路径实验">删除路径实验</h3><p>使用 <code>export</code>指令可以重新修改环境变量的值，尝试修改掉 <code>PYTHONPATH</code>中ROS 2 相关内容后之后再运行代码，看看是否还可以导入 <code>rclpy</code>。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">export PYTHONPATH=/opt/ros/humble/lib/python3.10/site-packages</span><br><span class="line">echo $PYTHONPATH #重新echo查看</span><br><span class="line">python3 second_ros2_node.py</span><br></pre></td></tr></table></figure><p>提示如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">root@490925f19143:~/d2lros2/d2lros2/chapt2/basic# python3 second_ros2_node.py </span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File &quot;/root/d2lros2/d2lros2/chapt2/basic/second_ros2_node.py&quot;, line 3, in &lt;module&gt;</span><br><span class="line">    import rclpy</span><br><span class="line">ModuleNotFoundError: No module named &#x27;rclpy&#x27;</span><br></pre></td></tr></table></figure><p>请你记住这个报错信息 <code>ModuleNotFoundError: No module named 'xxx'</code>，这也是你未来学习过程中可能会经常会遇到的。</p><p><strong>下次遇到时，你会想起小鱼这篇文章，然后对它轻蔑的一笑，接着找到这个库所在的目录，把它加到环境里。</strong></p><h2 id="ROS节点">ROS节点</h2><p>ROS2中每一个节点也是只负责一个单独的模块化的功能（比如一个节点负责控制车轮转动，一个节点负责从激光雷达获取数据、一个节点负责处理激光雷达的数据、一个节点负责定位等等）</p><p>上面举了一个激光雷达的例子，一个节点负责获取激光雷达的扫描数据，一个节点负责处理激光雷达数据，比如去除噪点。</p><p>那节点与节点之间就必须要通信了，那他们之间该如何通信呢？ROS2早已为你准备好了一共四种通信方式:</p><ul><li>话题-topics</li><li>服务-services</li><li>动作-Action</li><li>参数-parameters</li></ul><h3 id="如何启动一个节点？">如何启动一个节点？</h3><p>知道了节点的概念之后，我们该如何启动一个节点呢？</p><p>因为工作空间和包的概念，小鱼放到了下一讲，这里大家跟着小鱼一起运行一个节点，感受一下。</p><p>使用指令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ros2 run &lt;package_name&gt; &lt;executable_name&gt;</span><br></pre></td></tr></table></figure><p>指令意义：启动 包下的 中的节点。</p><p><strong>使用样例：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ros2 run turtlesim turtlesim_node</span><br></pre></td></tr></table></figure><p>大家可以尝试一下上面的指令，就是我们在第一章中启动小乌龟模拟器的那条指令。</p><p>运行之后可以看到一只小乌龟，接下来就可以试试下一节中提到的几个指令来查看节点信息和列表。</p><h3 id="通过命令行界面查看节点信息">通过命令行界面查看节点信息</h3><p>ROS2的CLI，就是和ROS2相关的命令行操作。什么是命令行界面呢？这里小鱼再讲解一个概念，CLI（Command-Line Interface）和GUI（Graphical User Interface）</p><ul><li>GUI（Graphical User Interface）就是平常我们说的图形用户界面，大家用的Windows是就是可视化的，我们可以通过鼠标点击按钮等图形化交互完成任务。</li><li>CLI（Command-Line Interface）就是命令行界面了，我们所用的终端，黑框框就是命令行界面，没有图形化。</li></ul><p>很久之前电脑还是没有图形化界面的，所有的交互都是通过命令行实现，就学习机器人而言，命令行操作相对于图形化优势更加明显。</p><p>ROS2为我们提供了一系列指令，通过这些指令，可以实现对ROS2相关模块信息的获取设置等操作。</p><p>运行节点(常用)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ros2 run &lt;package_name&gt; &lt;executable_name&gt;</span><br></pre></td></tr></table></figure><p>查看节点列表(常用)：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ros2 node list</span><br></pre></td></tr></table></figure><p>查看节点信息(常用)：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ros2 node info &lt;node_name&gt;</span><br></pre></td></tr></table></figure><p>重映射节点名称</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ros2 run turtlesim turtlesim_node --ros-args --remap __node:=my_turtle</span><br></pre></td></tr></table></figure><p>运行节点时设置参数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ros2 run example_parameters_rclcpp parameters_basic --ros-args -p rcl_log_level:=10</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">ROS2笔记
读鱼香ROS后记,以上内容全部出自鱼香ROS，仅个人记录学习。

用G++编译ROS2的C++节点
在 first_ros2_node.cpp中输入下面的代码。</summary>
    
    
    
    
  </entry>
  
</feed>
